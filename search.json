[{"path":"https://epiforecasts.io/scoringutils/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to scoringutils","title":"Contributing to scoringutils","text":"outlines propose change scoringutils.","code":""},{"path":"https://epiforecasts.io/scoringutils/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to scoringutils","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://epiforecasts.io/scoringutils/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to scoringutils","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://epiforecasts.io/scoringutils/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to scoringutils","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"epiforecasts/scoringutils\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://epiforecasts.io/scoringutils/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to scoringutils","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://epiforecasts.io/scoringutils/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to scoringutils","text":"Please note scoringutils project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://epiforecasts.io/scoringutils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 EpiForecasts Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"input-formats","dir":"Articles","previous_headings":"","what":"Input formats","title":"Getting started","text":"time, score() function able entire evaluation . need pass data.frame appropriate columns. columns required depends format forecasts come . forecast format can either based quantiles (see example_quantile expected format), based predictive samples (see example_continuous example_integer expected format case) binary format. following table gives overview (pairwise comparisons explained detail ): Additional columns may present indicate grouping forecasts. example, forecasts made different models various locations different time points, several weeks future. important, columns present relevant order group forecasts. combination different columns uniquely define unit single forecast, meaning single forecast defined values columns.","code":""},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"checking-the-input-data","dir":"Articles","previous_headings":"","what":"Checking the input data","title":"Getting started","text":"function check_forecasts() can used check input data. gives summary scoringutils thinks trying achieve. infers type prediction target, prediction format, unit single forecasts, gives overview number unique values per column (helpful spotting missing data) returns warnings errors. unsure input data look like, look example_quantile, example_integer, example_continuous example_binary data sets provided package.","code":"head(example_quantile) #>    location target_end_date target_type true_value location_name forecast_date #> 1:       DE      2021-01-02       Cases     127300       Germany          <NA> #> 2:       DE      2021-01-02      Deaths       4534       Germany          <NA> #> 3:       DE      2021-01-09       Cases     154922       Germany          <NA> #> 4:       DE      2021-01-09      Deaths       6117       Germany          <NA> #> 5:       DE      2021-01-16       Cases     110183       Germany          <NA> #> 6:       DE      2021-01-16      Deaths       5867       Germany          <NA> #>    quantile prediction model horizon #> 1:       NA         NA  <NA>      NA #> 2:       NA         NA  <NA>      NA #> 3:       NA         NA  <NA>      NA #> 4:       NA         NA  <NA>      NA #> 5:       NA         NA  <NA>      NA #> 6:       NA         NA  <NA>      NA check_forecasts(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #> Your forecasts seem to be for a target of the following type: #> $target_type #> [1] \"integer\" #>  #> and in the following format: #> $prediction_type #> [1] \"quantile\" #>  #> The unit of a single forecast is defined by: #> $forecast_unit #> [1] \"location\"        \"target_end_date\" \"target_type\"     \"location_name\"   #> [5] \"forecast_date\"   \"model\"           \"horizon\"         #>  #> Cleaned data, rows with NA values in prediction or true_value removed: #> $cleaned_data #>        location target_end_date target_type true_value location_name #>     1:       DE      2021-05-08       Cases     106987       Germany #>     2:       DE      2021-05-08       Cases     106987       Germany #>     3:       DE      2021-05-08       Cases     106987       Germany #>     4:       DE      2021-05-08       Cases     106987       Germany #>     5:       DE      2021-05-08       Cases     106987       Germany #>    ---                                                               #> 20397:       IT      2021-07-24      Deaths         78         Italy #> 20398:       IT      2021-07-24      Deaths         78         Italy #> 20399:       IT      2021-07-24      Deaths         78         Italy #> 20400:       IT      2021-07-24      Deaths         78         Italy #> 20401:       IT      2021-07-24      Deaths         78         Italy #>        forecast_date quantile prediction                 model horizon #>     1:    2021-05-03    0.010      82466 EuroCOVIDhub-ensemble       1 #>     2:    2021-05-03    0.025      86669 EuroCOVIDhub-ensemble       1 #>     3:    2021-05-03    0.050      90285 EuroCOVIDhub-ensemble       1 #>     4:    2021-05-03    0.100      95341 EuroCOVIDhub-ensemble       1 #>     5:    2021-05-03    0.150      99171 EuroCOVIDhub-ensemble       1 #>    ---                                                                 #> 20397:    2021-07-12    0.850        352  epiforecasts-EpiNow2       2 #> 20398:    2021-07-12    0.900        397  epiforecasts-EpiNow2       2 #> 20399:    2021-07-12    0.950        499  epiforecasts-EpiNow2       2 #> 20400:    2021-07-12    0.975        611  epiforecasts-EpiNow2       2 #> 20401:    2021-07-12    0.990        719  epiforecasts-EpiNow2       2 #>  #> Number of unique values per column per model: #> $unique_values #>                    model location target_end_date target_type true_value #> 1: EuroCOVIDhub-ensemble        4              12           2         96 #> 2: EuroCOVIDhub-baseline        4              12           2         96 #> 3:  epiforecasts-EpiNow2        4              12           2         95 #> 4:       UMass-MechBayes        4              12           1         48 #>    location_name forecast_date quantile prediction horizon #> 1:             4            11       23       3969       3 #> 2:             4            11       23       3733       3 #> 3:             4            11       23       3903       3 #> 4:             4            11       23       1058       3 #>  #> $messages #> [1] \"144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected.\""},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"showing-available-forecasts","dir":"Articles","previous_headings":"","what":"Showing available forecasts","title":"Getting started","text":"function avail_forecasts() may also helpful determine forecasts available. Using argument can specify level summary. example, see many forecasts per model target_type, can run see ‘epiforecasts-EpiNow2’ missing forecasts deaths forecast target UMass-MechBayes case forecasts. information can also visualised using plot_avail_forecasts() function:  can also visualise forecasts directly using plot_predictions() function:","code":"avail_forecasts(example_quantile, by = c(\"model\", \"target_type\")) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                    model target_type Number forecasts #> 1: EuroCOVIDhub-ensemble       Cases              128 #> 2: EuroCOVIDhub-baseline       Cases              128 #> 3:  epiforecasts-EpiNow2       Cases              128 #> 4: EuroCOVIDhub-ensemble      Deaths              128 #> 5: EuroCOVIDhub-baseline      Deaths              128 #> 6:       UMass-MechBayes      Deaths              128 #> 7:  epiforecasts-EpiNow2      Deaths              119 example_quantile %>%   avail_forecasts(by = c(\"model\", \"forecast_date\", \"target_type\")) %>%   plot_avail_forecasts() +   facet_wrap(~ target_type) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. example_quantile %>%   plot_predictions(     x = \"target_end_date\",     filter_truth = list(       'target_end_date <= \"2021-07-15\"', 'target_end_date > \"2021-05-22\"'     ),     filter_forecasts = list(       \"model == 'EuroCOVIDhub-ensemble'\", 'forecast_date == \"2021-06-28\"'     )   ) +   facet_wrap(target_type ~ location, ncol = 4, scales = \"free\") +   theme(legend.position = \"bottom\")"},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"scoring-and-summarising-forecasts","dir":"Articles","previous_headings":"","what":"Scoring and summarising forecasts","title":"Getting started","text":"Forecasts can easily scored using score() function. function returns unsumarised scores, cases user wants. second function, summarise_scores() takes care summarising scores level specified user. like, can also use sumarise_scores() round outputs specifying e.g. signif() summary function. argument can used define level summary. default, = NULL set unit single forecast. quantile-based forecasts, unsummarised scores returned every quantile individually. can therefore make sense run summarise_scoreseven without arguments provided.","code":"score(example_quantile) %>%   head() #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>    location target_end_date target_type location_name forecast_date #> 1:       DE      2021-05-08       Cases       Germany    2021-05-03 #> 2:       DE      2021-05-08       Cases       Germany    2021-05-03 #> 3:       DE      2021-05-08       Cases       Germany    2021-05-03 #> 4:       DE      2021-05-08       Cases       Germany    2021-05-03 #> 5:       DE      2021-05-08       Cases       Germany    2021-05-03 #> 6:       DE      2021-05-08       Cases       Germany    2021-05-03 #>                    model horizon range interval_score dispersion #> 1: EuroCOVIDhub-baseline       1     0        25620.0        0.0 #> 2: EuroCOVIDhub-baseline       1    10        25599.5      184.5 #> 3: EuroCOVIDhub-baseline       1    10        25599.5      184.5 #> 4: EuroCOVIDhub-baseline       1    20        25481.0      556.0 #> 5: EuroCOVIDhub-baseline       1    20        25481.0      556.0 #> 6: EuroCOVIDhub-baseline       1    30        25270.2      816.2 #>    underprediction overprediction coverage coverage_deviation bias quantile #> 1:               0          25620        0                0.0 0.95     0.50 #> 2:               0          25415        0               -0.1 0.95     0.45 #> 3:               0          25415        0               -0.1 0.95     0.55 #> 4:               0          24925        0               -0.2 0.95     0.40 #> 5:               0          24925        0               -0.2 0.95     0.60 #> 6:               0          24454        0               -0.3 0.95     0.35 #>    ae_median quantile_coverage #> 1:     25620              TRUE #> 2:     25620              TRUE #> 3:     25620              TRUE #> 4:     25620              TRUE #> 5:     25620              TRUE #> 6:     25620              TRUE example_quantile %>%   score() %>%   summarise_scores(by = c(\"model\", \"target_type\")) %>%   summarise_scores(fun = signif, digits = 2) %>%   kable() #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. score(example_quantile) %>%   summarise_scores() #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>      location target_end_date target_type location_name forecast_date #>   1:       DE      2021-05-08       Cases       Germany    2021-05-03 #>   2:       DE      2021-05-08       Cases       Germany    2021-05-03 #>   3:       DE      2021-05-08       Cases       Germany    2021-05-03 #>   4:       DE      2021-05-08      Deaths       Germany    2021-05-03 #>   5:       DE      2021-05-08      Deaths       Germany    2021-05-03 #>  ---                                                                  #> 883:       IT      2021-07-24      Deaths         Italy    2021-07-05 #> 884:       IT      2021-07-24      Deaths         Italy    2021-07-12 #> 885:       IT      2021-07-24      Deaths         Italy    2021-07-12 #> 886:       IT      2021-07-24      Deaths         Italy    2021-07-12 #> 887:       IT      2021-07-24      Deaths         Italy    2021-07-12 #>                      model horizon interval_score  dispersion underprediction #>   1: EuroCOVIDhub-baseline       1    16925.04696 1649.220870       0.0000000 #>   2: EuroCOVIDhub-ensemble       1     7990.85478 5440.985217       0.0000000 #>   3:  epiforecasts-EpiNow2       1    25395.96087 8173.700000       0.0000000 #>   4: EuroCOVIDhub-baseline       1       46.79304   44.662609       0.0000000 #>   5: EuroCOVIDhub-ensemble       1       53.88000   53.271304       0.6086957 #>  ---                                                                          #> 883:  epiforecasts-EpiNow2       3       19.76261   14.284348       0.0000000 #> 884: EuroCOVIDhub-baseline       2       80.33696   76.728261       0.0000000 #> 885: EuroCOVIDhub-ensemble       2       18.65870   13.354348       0.0000000 #> 886:       UMass-MechBayes       2       25.58174    7.755652       0.0000000 #> 887:  epiforecasts-EpiNow2       2       66.16174   25.553043       0.0000000 #>      overprediction coverage_deviation  bias ae_median #>   1:   15275.826087        -0.38521739  0.95     25620 #>   2:    2549.869565         0.04956522  0.50     12271 #>   3:   17222.260870        -0.29826087  0.90     44192 #>   4:       2.130435         0.22347826  0.30        15 #>   5:       0.000000         0.39739130 -0.10        14 #>  ---                                                   #> 883:       5.478261         0.04956522  0.50        26 #> 884:       3.608696         0.31043478  0.20        53 #> 885:       5.304348         0.13652174  0.40        30 #> 886:      17.826087        -0.21130435  0.80        46 #> 887:      40.608696        -0.29826087  0.90       108"},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"scoring-point-forecasts","dir":"Articles","previous_headings":"Scoring and summarising forecasts","what":"Scoring point forecasts","title":"Getting started","text":"Point forecasts can scored making use quantile-based format, value NA \"point\" quantile column. Point forecasts can scored alongside quantile-based forecasts. point forecasts values NA metrics designed probabilistic forecasts, importnat use na.rm = TRUE summarising.","code":"score(example_point) %>%    summarise_scores(by = \"model\", na.rm = TRUE) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                    model interval_score dispersion underprediction #> 1: EuroCOVIDhub-baseline     14092.7647 2192.26967      4996.92898 #> 2: EuroCOVIDhub-ensemble      8852.4196 1930.80064      2005.56357 #> 3:  epiforecasts-EpiNow2     10659.5125 3084.85850      1604.96135 #> 4:       UMass-MechBayes        51.4781   28.09387        15.32315 #>    overprediction coverage_deviation        bias    ae_point     se_point #> 1:     6903.56605        0.002102273  0.23905983 19353.42969 2.883446e+09 #> 2:     4916.05540        0.050752841  0.01027027 12077.10156 1.945118e+09 #> 3:     5969.69268       -0.057861612 -0.04915929 14521.10526 2.680928e+09 #> 4:        8.06108       -0.024886364 -0.02847458    78.47656 1.170976e+04 #>    ae_median #> 1:       NaN #> 2:       NaN #> 3:       NaN #> 4:       NaN"},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"adding-empirical-coverage","dir":"Articles","previous_headings":"Scoring and summarising forecasts","what":"Adding empirical coverage","title":"Getting started","text":"quantile-based forecasts often interested specific coverage-levels, example, percentage true values fell 50% 90% prediction intervals. can add information using function add_coverage(). function also requires argument defines level grouping percentage true values covered certain prediction intervals computed.","code":"score(example_quantile) %>%   add_coverage(ranges = c(50, 90), by = c(\"model\", \"target_type\")) %>%   summarise_scores(by = c(\"model\", \"target_type\")) %>%   summarise_scores(fun = signif, digits = 2) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                    model target_type interval_score dispersion underprediction #> 1: EuroCOVIDhub-baseline       Cases          28000       4100         10000.0 #> 2: EuroCOVIDhub-baseline      Deaths            160         91             2.1 #> 3: EuroCOVIDhub-ensemble       Cases          18000       3700          4200.0 #> 4: EuroCOVIDhub-ensemble      Deaths             41         30             4.1 #> 5:       UMass-MechBayes      Deaths             53         27            17.0 #> 6:  epiforecasts-EpiNow2       Cases          21000       5700          3300.0 #> 7:  epiforecasts-EpiNow2      Deaths             67         32            16.0 #>    overprediction coverage_deviation    bias ae_median coverage_50 coverage_90 #> 1:        14000.0             -0.110  0.0980     38000        0.33        0.82 #> 2:           66.0              0.120  0.3400       230        0.66        1.00 #> 3:        10000.0             -0.098 -0.0560     24000        0.39        0.80 #> 4:            7.1              0.200  0.0730        53        0.88        1.00 #> 5:            9.0             -0.023 -0.0220        78        0.46        0.88 #> 6:        12000.0             -0.067 -0.0790     28000        0.47        0.79 #> 7:           19.0             -0.043 -0.0051       100        0.42        0.91"},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"adding-relative-scores","dir":"Articles","previous_headings":"Scoring and summarising forecasts","what":"Adding relative scores","title":"Getting started","text":"order better compare models can use relative scores computed based pairwise comparisons (see details ). Relative scores can added evaluation using function summarise_scores(). requires column called ‘model’ present. Pairwise comparisons computed according grouping specified : essentially, data.frame scores gets split different data.frames according values specified relative scores computed every individual group separately. baseline argumen allows us specify baseline can used scale relative scores (scores divided baseline relative score). example, obtain relative scores separately different forecast targets, can run","code":"score(example_quantile) %>%   summarise_scores(by = c(\"model\", \"target_type\"),                     relative_skill = TRUE,                     baseline = \"EuroCOVIDhub-ensemble\") #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                    model target_type interval_score dispersion underprediction #> 1: EuroCOVIDhub-baseline       Cases    28483.57465 4102.50094    10284.972826 #> 2: EuroCOVIDhub-baseline      Deaths      159.40387   91.40625        2.098505 #> 3: EuroCOVIDhub-ensemble       Cases    17943.82383 3663.52458     4237.177310 #> 4: EuroCOVIDhub-ensemble      Deaths       41.42249   30.18099        4.103261 #> 5:       UMass-MechBayes      Deaths       52.65195   26.87239       16.800951 #> 6:  epiforecasts-EpiNow2       Cases    20831.55662 5664.37795     3260.355639 #> 7:  epiforecasts-EpiNow2      Deaths       66.64282   31.85692       15.893314 #>    overprediction coverage_deviation        bias   ae_median relative_skill #> 1:   14096.100883        -0.11211957  0.09796875 38473.60156      1.2947445 #> 2:      65.899117         0.11614130  0.33906250   233.25781      2.2958723 #> 3:   10043.121943        -0.09785326 -0.05640625 24101.07031      0.8156514 #> 4:       7.138247         0.19528533  0.07265625    53.13281      0.5966310 #> 5:       8.978601        -0.02312500 -0.02234375    78.47656      0.7475873 #> 6:   11906.823030        -0.06660326 -0.07890625 27923.81250      0.9469157 #> 7:      18.892583        -0.04287176 -0.00512605   104.74790      0.9765276 #>    scaled_rel_skill #> 1:         1.587375 #> 2:         3.848060 #> 3:         1.000000 #> 4:         1.000000 #> 5:         1.253014 #> 6:         1.160932 #> 7:         1.636736"},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"coloured-table","dir":"Articles","previous_headings":"Visualising scores","what":"Coloured table","title":"Getting started","text":"simple coloured table can produced based scores:","code":"score(example_integer) %>%   summarise_scores(by = c(\"model\", \"target_type\"), na.rm = TRUE) %>%   summarise_scores(fun = signif, digits = 2) %>%   plot_score_table(by = \"target_type\") +    facet_wrap(~ target_type, nrow = 1) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected."},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"score-heatmap","dir":"Articles","previous_headings":"Visualising scores","what":"Score heatmap","title":"Getting started","text":"can also summarise one particular metric across different categories using simple heatmap:","code":"score(example_continuous) %>%   summarise_scores(by = c(\"model\", \"location\", \"target_type\")) %>%   plot_heatmap(x = \"location\", metric = \"bias\") +      facet_wrap(~ target_type) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected."},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"weighted-interval-score-components","dir":"Articles","previous_headings":"Visualising scores","what":"Weighted interval score components","title":"Getting started","text":"weighted interval score can split three components: -prediction, -prediction dispersion. can visualised separately following way:","code":"score(example_quantile) %>%   summarise_scores(by = c(\"target_type\", \"model\")) %>%   plot_wis() +    facet_wrap(~ target_type, scales = \"free\") #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected."},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"calibration","dir":"Articles","previous_headings":"","what":"Calibration","title":"Getting started","text":"Calibration measure statistical consistency forecasts observed values. common way assessing calibration (precisely: probabilistic calibration) PIT histograms. probability integral transform (PIT) equal cumulative distribution function forecast evaluated true observed value. Ideally, pit values uniformly distributed transformation. can compute pit values : visualise results :  Similarly quantile-based forecasts:  Another way look calibration interval coverage quantile coverage. Interval coverage percentage true values fall inside given central prediction interval. Quantile coverage percentage observed values fall given quantile level. order plot interval coverage, need include “range” argument summarise_scores(). green area plot marks conservative behaviour, .e. empirical coverage greater nominally need (e.g. 55% true values covered 50% central prediction intervals.)  visualise quantile coverage, need include “quantile” . , green area corresponds conservative forecasts, central prediction intervals cover needed.","code":"example_continuous %>%   pit(by = \"model\")  #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                      model pit_value #>   1: EuroCOVIDhub-baseline     0.025 #>   2: EuroCOVIDhub-baseline     0.525 #>   3: EuroCOVIDhub-baseline     0.000 #>   4: EuroCOVIDhub-baseline     0.000 #>   5: EuroCOVIDhub-baseline     0.200 #>  ---                                 #> 883:       UMass-MechBayes     0.950 #> 884:       UMass-MechBayes     0.500 #> 885:       UMass-MechBayes     0.100 #> 886:       UMass-MechBayes     0.450 #> 887:       UMass-MechBayes     0.100 example_continuous %>%   pit(by = c(\"model\", \"target_type\")) %>%   plot_pit() +    facet_grid(model ~ target_type) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. example_quantile[quantile %in% seq(0.1, 0.9, 0.1), ] %>%   pit(by = c(\"model\", \"target_type\")) %>%   plot_pit() +   facet_grid(model ~ target_type) example_quantile %>%   score() %>%   summarise_scores(by = c(\"model\", \"range\")) %>%   plot_interval_coverage() #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. example_quantile %>%   score() %>%   summarise_scores(by = c(\"model\", \"quantile\")) %>%   plot_quantile_coverage() #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected."},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"pairwise-comparisons","dir":"Articles","previous_headings":"","what":"Pairwise comparisons","title":"Getting started","text":"Relative scores different models can computed using pairwise comparisons, sort pairwise tournament cominations two models compared based overlapping set available forecasts common models. Internally, ratio mean scores models computed. relative score model geometric mean mean score ratios involve model. baseline provided, baseline excluded relative scores individual models (therefore differ slightly relative scores without baseline) relative scores scaled (.e. divided ) relative score baseline model. scoringutils, pairwise comparisons can made two ways: standalone function pairwise_comparison() within summarise_scores() simply adds relative scores existing set scores. using pairwise_comparison() function, can also visualise pairwise comparisons showing mean score ratios models. default, smaller values better model care showing y axis left, model compared shown x-axis bottom. example , EuroCOVIDhub-ensemble performs best (values smaller 1), EuroCOVIDhub-baseline performs worst (values larger 1). cases, UMass-MechBayes model course excluded case forecasts available therefore set overlapping forecasts empty.","code":"example_quantile %>%   score() %>%   pairwise_comparison(by = \"model\", baseline = \"EuroCOVIDhub-baseline\") #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                     model       compare_against mean_scores_ratio         pval #>  1: EuroCOVIDhub-baseline  epiforecasts-EpiNow2         1.3703452 9.164893e-18 #>  2: EuroCOVIDhub-baseline EuroCOVIDhub-ensemble         1.5925819 2.608666e-32 #>  3: EuroCOVIDhub-baseline       UMass-MechBayes         3.0275019 2.627464e-20 #>  4: EuroCOVIDhub-baseline EuroCOVIDhub-baseline         1.0000000 1.000000e+00 #>  5: EuroCOVIDhub-ensemble       UMass-MechBayes         0.7867229 1.244731e-04 #>  6: EuroCOVIDhub-ensemble  epiforecasts-EpiNow2         0.8606607 1.881520e-02 #>  7: EuroCOVIDhub-ensemble EuroCOVIDhub-baseline         0.6279112 2.608666e-32 #>  8: EuroCOVIDhub-ensemble EuroCOVIDhub-ensemble         1.0000000 1.000000e+00 #>  9:       UMass-MechBayes EuroCOVIDhub-ensemble         1.2710955 1.244731e-04 #> 10:       UMass-MechBayes  epiforecasts-EpiNow2         0.7439673 7.253878e-03 #> 11:       UMass-MechBayes EuroCOVIDhub-baseline         0.3303053 2.627464e-20 #> 12:       UMass-MechBayes       UMass-MechBayes         1.0000000 1.000000e+00 #> 13:  epiforecasts-EpiNow2       UMass-MechBayes         1.3441452 7.253878e-03 #> 14:  epiforecasts-EpiNow2 EuroCOVIDhub-ensemble         1.1618981 1.881520e-02 #> 15:  epiforecasts-EpiNow2 EuroCOVIDhub-baseline         0.7297431 9.164893e-18 #> 16:  epiforecasts-EpiNow2  epiforecasts-EpiNow2         1.0000000 1.000000e+00 #>         adj_pval relative_skill scaled_rel_skill #>  1: 3.665957e-17      1.6032604        1.0000000 #>  2: 1.565200e-31      1.6032604        1.0000000 #>  3: 1.313732e-19      1.6032604        1.0000000 #>  4: 1.000000e+00      1.6032604        1.0000000 #>  5: 3.734192e-04      0.8074916        0.5036559 #>  6: 1.881520e-02      0.8074916        0.5036559 #>  7: 1.565200e-31      0.8074916        0.5036559 #>  8: 1.000000e+00      0.8074916        0.5036559 #>  9: 3.734192e-04      0.7475873        0.4662919 #> 10: 1.450776e-02      0.7475873        0.4662919 #> 11: 1.313732e-19      0.7475873        0.4662919 #> 12: 1.000000e+00      0.7475873        0.4662919 #> 13: 1.450776e-02      1.0332277        0.6444541 #> 14: 1.881520e-02      1.0332277        0.6444541 #> 15: 3.665957e-17      1.0332277        0.6444541 #> 16: 1.000000e+00      1.0332277        0.6444541 example_quantile %>%   score() %>%   summarise_scores(     by = \"model\", relative_skill = TRUE, baseline = \"EuroCOVIDhub-baseline\"   ) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                    model interval_score dispersion underprediction #> 1: EuroCOVIDhub-baseline    14321.48926 2096.95360      5143.53567 #> 2: EuroCOVIDhub-ensemble     8992.62316 1846.85278      2120.64029 #> 3:       UMass-MechBayes       52.65195   26.87239        16.80095 #> 4:  epiforecasts-EpiNow2    10827.40786 2950.73422      1697.23411 #>    overprediction coverage_deviation        bias   ae_median relative_skill #> 1:    7081.000000         0.00201087  0.21851562 19353.42969      1.6032604 #> 2:    5025.130095         0.04871603  0.00812500 12077.10156      0.8074916 #> 3:       8.978601        -0.02312500 -0.02234375    78.47656      0.7475873 #> 4:    6179.439535        -0.05516986 -0.04336032 14521.10526      1.0332277 #>    scaled_rel_skill #> 1:        1.0000000 #> 2:        0.5036559 #> 3:        0.4662919 #> 4:        0.6444541 example_quantile %>%   score() %>%   pairwise_comparison(by = c(\"model\", \"target_type\")) %>%   plot_pairwise_comparison() +   facet_wrap(~ target_type) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected."},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"correlation-between-scores","dir":"Articles","previous_headings":"Additional analyses and visualisations","what":"Correlation between scores","title":"Getting started","text":"may sometimes interesting see different scores correlate . can examine using function correlation(). dealing quantile-based forecasts, important call summarise_scorees() correlation() summarise quantiles computing correlations. Visualising correlations:","code":"example_quantile %>%   score() %>%   summarise_scores() %>%   correlation() #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>    interval_score dispersion underprediction overprediction coverage_deviation #> 1:           1.00       0.46            0.28           0.94              -0.34 #> 2:           0.46       1.00            0.15           0.32              -0.12 #> 3:           0.28       0.15            1.00          -0.03              -0.33 #> 4:           0.94       0.32           -0.03           1.00              -0.25 #> 5:          -0.34      -0.12           -0.33          -0.25               1.00 #> 6:           0.11       0.11           -0.35           0.22               0.06 #> 7:           0.99       0.54            0.34           0.90              -0.38 #>     bias ae_median             metric #> 1:  0.11      0.99     interval_score #> 2:  0.11      0.54         dispersion #> 3: -0.35      0.34    underprediction #> 4:  0.22      0.90     overprediction #> 5:  0.06     -0.38 coverage_deviation #> 6:  1.00      0.10               bias #> 7:  0.10      1.00          ae_median example_quantile %>%   score() %>%   summarise_scores() %>%   correlation() %>%   plot_correlation() #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected."},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"scores-by-interval-ranges","dir":"Articles","previous_headings":"Additional analyses and visualisations","what":"Scores by interval ranges","title":"Getting started","text":"like see different forecast interval ranges contribute average scores, can viusalise scores interval range:","code":"example_quantile %>%   score() %>%   summarise_scores(by = c(\"model\", \"range\", \"target_type\")) %>%   plot_ranges() +   facet_wrap(~ target_type, scales = \"free\") #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected."},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"tips-and-tricks---converting-to-sample-based-forecasts","dir":"Articles","previous_headings":"","what":"Tips and tricks - converting to sample-based forecasts","title":"Getting started","text":"Different metrics available different forecasting formats. cases, may example forecasts sample-based format, wish make use functionality available quantile-based forecasts. example, may want use decomposition weighted interval score, may like compute interval coverage values. can convert forecasts sample-based format using function sample_to_quantile(). , however, one caveat: Quantiles calculated based predictive samples, may introduce bias number available samples small.","code":"example_integer %>%   sample_to_quantile(     quantiles = c(0.01, 0.025, seq(0.05, 0.95, 0.05), 0.975, 0.99)   ) %>%   score() %>%   add_coverage(by = c(\"model\", \"target_type\")) #> The following messages were produced when checking inputs: #> 1.  3312 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                        model target_type location location_name target_end_date #>     1: EuroCOVIDhub-baseline       Cases       DE       Germany      2021-05-08 #>     2: EuroCOVIDhub-baseline       Cases       DE       Germany      2021-05-08 #>     3: EuroCOVIDhub-baseline       Cases       DE       Germany      2021-05-08 #>     4: EuroCOVIDhub-baseline       Cases       DE       Germany      2021-05-08 #>     5: EuroCOVIDhub-baseline       Cases       DE       Germany      2021-05-08 #>    ---                                                                          #> 20397:  epiforecasts-EpiNow2      Deaths       IT         Italy      2021-07-24 #> 20398:  epiforecasts-EpiNow2      Deaths       IT         Italy      2021-07-24 #> 20399:  epiforecasts-EpiNow2      Deaths       IT         Italy      2021-07-24 #> 20400:  epiforecasts-EpiNow2      Deaths       IT         Italy      2021-07-24 #> 20401:  epiforecasts-EpiNow2      Deaths       IT         Italy      2021-07-24 #>        forecast_date horizon range interval_score dispersion underprediction #>     1:    2021-05-03       1     0    29379.00000    0.00000               0 #>     2:    2021-05-03       1    10    27857.47500 3012.07500               0 #>     3:    2021-05-03       1    10    27857.47500 3012.07500               0 #>     4:    2021-05-03       1    20    26443.96000 4109.76000               0 #>     5:    2021-05-03       1    20    26443.96000 4109.76000               0 #>    ---                                                                       #> 20397:    2021-07-12       2    90       21.21000   21.21000               0 #> 20398:    2021-07-12       2    95       15.00563   15.00563               0 #> 20399:    2021-07-12       2    95       15.00563   15.00563               0 #> 20400:    2021-07-12       2    98        6.28890    6.28890               0 #> 20401:    2021-07-12       2    98        6.28890    6.28890               0 #>        overprediction coverage coverage_deviation bias quantile ae_median #>     1:        29379.0        0               0.00 0.98    0.500   29379.0 #>     2:        24845.4        0              -0.10 0.98    0.450   29379.0 #>     3:        24845.4        0              -0.10 0.98    0.550   29379.0 #>     4:        22334.2        0              -0.20 0.98    0.400   29379.0 #>     5:        22334.2        0              -0.20 0.98    0.600   29379.0 #>    ---                                                                    #> 20397:            0.0        1               0.10 0.70    0.950      73.5 #> 20398:            0.0        1               0.05 0.70    0.025      73.5 #> 20399:            0.0        1               0.05 0.70    0.975      73.5 #> 20400:            0.0        1               0.02 0.70    0.010      73.5 #> 20401:            0.0        1               0.02 0.70    0.990      73.5 #>        quantile_coverage coverage_50 coverage_90 #>     1:              TRUE   0.3828125   0.7265625 #>     2:              TRUE   0.3828125   0.7265625 #>     3:              TRUE   0.3828125   0.7265625 #>     4:              TRUE   0.3828125   0.7265625 #>     5:              TRUE   0.3828125   0.7265625 #>    ---                                           #> 20397:              TRUE   0.5462185   0.9243697 #> 20398:             FALSE   0.5462185   0.9243697 #> 20399:              TRUE   0.5462185   0.9243697 #> 20400:             FALSE   0.5462185   0.9243697 #> 20401:              TRUE   0.5462185   0.9243697"},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"available-metrics","dir":"Articles","previous_headings":"","what":"Available metrics","title":"Getting started","text":"overview available metrics can found metrics data set included package.","code":"metrics #>                                           Metric               Name #>  1:                               Absolute error           ae_point #>  2:                               Absolute error          ae_median #>  3:                                Squared error           se_point #>  4:                                Squared error            se_mean #>  5: (Continuous) ranked probability score (CRPS)               crps #>  6:                                    Log score          log_score #>  7:              (Weighted) interval score (WIS)     interval_score #>  8:                 Dawid-Sebastiani score (DSS)                dss #>  9:                             Brier score (BS)        brier_score #> 10:                            Interval coverage           coverage #> 11:                           Coverage deviation coverage_deviation #> 12:                            Quantile coverage  quantile_coverage #> 13:                                   Dispersion         dispersion #> 14:       Median Absolute Deviation (Dispersion)                mad #> 15:                      Under-, Over-prediction    underprediction #> 16:                      Under-, Over-prediction     overprediction #> 17:         Probability integral transform (PIT)               crps #> 18:                                   Dispersion         dispersion #> 19:                                         Bias               bias #> 20:                             Mean score ratio  mean_scores_ratio #> 21:                      (Scaled) Relative skill     relative_skill #> 22:                      (Scaled) Relative skill   scaled_rel_skill #>                                           Metric               Name #>                                   Functions Discrete Continuous Binary Quantile #>  1: score(), ae_point()), ae_median_sample(        +          +      -        + #>  2: score(), ae_point()), ae_median_sample(        +          +      -        + #>  3:   score(), se_point(), se_mean_sample()        +          +      -        + #>  4:   score(), se_point(), se_mean_sample()        +          +      -        + #>  5:                       score(), ae_point        +          +      -        - #>  6:   score(), logs_sample(), logs_binary()        -          +      +        - #>  7:               score(), interval_score()        +          +      -        + #>  8:                   score(), dss_sample()        +          +      -        - #>  9:                  score(), brier_score()        -          -      +        - #> 10:                                 score()        -          -      -        + #> 11:                                 score()        -          -      -        + #> 12:                                 score()        +          +      -        - #> 13:               score(), interval_score()        -          -      -        + #> 14:                   score(), mad_sample()        +          +      -        - #> 15:               score(), interval_score()        -          -      -        + #> 16:               score(), interval_score()        -          -      -        + #> 17:                          score(), pit()        +          +      -        + #> 18:               score(), interval_score()        -          -      -        + #> 19: score(), bias_sample(), bias_quantile()        +          +      -        + #> 20:                   pairwise_comparison()        ~          ~      ~        ~ #> 21:          score(), pairwise_comparison()        ~          ~      ~        ~ #> 22:          score(), pairwise_comparison()        ~          ~      ~        ~ #>                                   Functions Discrete Continuous Binary Quantile #>                                                                                                                                                                                 Info #>  1:                                                                                                                     Suitable for scoring the median of a predictive distribution #>  2:                                                                                                                     Suitable for scoring the median of a predictive distribution #>  3:                                                                                                                      Suitable for scoring the mean of a predictive distribution. #>  4:                                                                                                                      Suitable for scoring the mean of a predictive distribution. #>  5: Proper scoring rule (smaller is better), takes entire predictive distribution into account (global), penalises over- and under-confidence similarly, stable handling of outliers #>  6:                 Proper scoring rule, smaller is better, only evaluates predictive density at observed value (local), penalises over-confidence severely, susceptible to outliers #>  7:                                    Proper scoring rule, smaller is better, similar properties to CRPS and converges to CRPS for an increasing number of equally spaced intervals #>  8: Proper scoring rule, smaller is better, evaluates forecast based on mean and sd of predictive distribution (global), susceptible to outliers, penalises over-confidence severely #>  9:                                                          Proper scoring rule, smaller is better, equals CRPS for binary outcomes, penalises over- and under-confidence similarly #> 10:                       Proportion of observations falling inside a given central prediction interval (= 'empirical interval coverage'). Used to assess probabilistic calibration. #> 11:                                                                     Average difference between empirical and nominal interval coverage (coverage that should have been realised) #> 12:                                                               Proportion of observations below a given quantile of the predictive CDF. Used to assess probabilistic calibration. #> 13:                                                                                                             Dispersion component of WIS, measures width of predictive intervals. #> 14:                                                                                          Measure for dispersion of a forecast: median of the absolute deviations from the median #> 15:                                                                                                                  Absolute amount of over-or under-prediction (components of WIS) #> 16:                                                                                                                  Absolute amount of over-or under-prediction (components of WIS) #> 17:                                                         PIT transform is the CDF of the predictive distribution evaluated at the observed values. PIT values should be uniform.  #> 18:                                                                                                             Dispersion component of WIS, measures width of predictive intervals. #> 19:                                                             Measure of relative tendency to over- or under-predict (aspect of calibration), bounded between -1 and 1 (ideally 0) #> 20:                                                                                   Compares performance of two models. Properties depend on the metric chosen for the comparison. #> 21:                               Ranks models based on pairwise comparisons, useful in the context of missing forecasts. Properties depend on the metric chosen for the comparison. #> 22:                               Ranks models based on pairwise comparisons, useful in the context of missing forecasts. Properties depend on the metric chosen for the comparison. #>                                                                                                                                                                                 Info"},{"path":"https://epiforecasts.io/scoringutils/articles/getting-started.html","id":"lower-level-functions","dir":"Articles","previous_headings":"","what":"Lower level functions","title":"Getting started","text":"metrics available lower level functions extensively documented. look help files understand better.","code":""},{"path":"https://epiforecasts.io/scoringutils/articles/metric-details.html","id":"applicability-of-different-metrics-for-different-types-of-forecasts-and-formats","dir":"Articles","previous_headings":"","what":"Applicability of different metrics for different types of forecasts and formats","title":"Details on the metrics implemented in `scoringutils`","text":"table gives overview metric can applied gives brief description. Note table shows metrics implemented scoringutils. example, scoring sample-based discrete continuous distributions implemented scoringutils, closed-form solutions often exist (e.g. scoringRules package).","code":""},{"path":"https://epiforecasts.io/scoringutils/articles/metric-details.html","id":"detailed-explanation-of-the-metrics-implemented-in-scoringutils","dir":"Articles","previous_headings":"","what":"Detailed explanation of the metrics implemented in scoringutils","title":"Details on the metrics implemented in `scoringutils`","text":"crps proper scoring rule generalises absolute error probabilistic forecasts. measures ‘distance’ predictive distribution observed data-generating distribution. CRPS given \\[\\text{CRPS}(F, y) = \\int_{-\\infty}^\\infty \\left( F(x) - 1(x \\geq y) \\right)^2 dx,\\] y true observed value F CDF predictive distribution. Often alternative representation used: \\[ \\text{CRPS}(F, y) = \\frac{1}{2} \\mathbb{E}_{F} |X - X'| - \\mathbb{E}_P |X - y|,\\] \\(X\\) \\(X'\\) independent realisations predictive distributions \\(F\\) finite first moment \\(y\\) true value. represenation can simply replace \\(X\\) \\(X'\\) samples sum possible combinations obtain CRPS. integer-valued forecasts, RPS given \\[ \\text{RPS}(F, y) = \\sum_{x = 0}^\\infty (F(x) - 1(x \\geq y))^2. \\] Log score proper scoring rule simply compuated log predictive density evaluated true observed value. given \\[ \\text{log score} = \\log f(y), \\] \\(f\\) predictive density function y true value. integer-valued forecasts, log score can computed \\[ \\text{log score} = \\log p_y, \\] \\(p_y\\) probability assigned outcome p forecast F. (weighted) interval score proper scoring rule quantile forecasts converges crps increasing number intervals. score can decomposed sharpness (uncertainty) component penalties - underprediction. single interval, score computed \\[IS_\\alpha(F,y) = (u-l) + \\frac{2}{\\alpha} \\cdot (l-y) \\cdot 1(y \\leq l) + \\frac{2}{\\alpha} \\cdot (y-u) \\cdot 1(y \\geq u), \\] \\(1()\\) indicator function, \\(y\\) true value, \\(l\\) \\(u\\) \\(\\frac{\\alpha}{2}\\) \\(1 - \\frac{\\alpha}{2}\\) quantiles predictive distribution \\(F\\), .e. lower upper bound single prediction interval. set \\(K\\) prediction intervals median \\(m\\), score computed weighted sum, \\[WIS = \\frac{1}{K + 0.5} \\cdot (w_0 \\cdot |y - m| + \\sum_{k = 1}^{K} w_k \\cdot IS_{\\alpha}(F, y)),\\] \\(w_k\\) weight every interval. Usually, \\(w_k = \\frac{\\alpha_k}{2}\\) \\(w_0 = 0.5\\). Dawid-Sebastiani-Score proper scoring rule proposed relies first moments predictive distribution therefore easy compute. given \\[\\text{dss}(F, y) = \\left( \\frac{y - \\mu}{\\sigma} \\right)^2 + 2 \\cdot \\log \\sigma,\\] \\(F\\) predictive distribution mean \\(\\mu\\) standard deviation \\(\\sigma\\) \\(y\\) true observed value. Proper scoring rule binary forecasts. Brier score computed \\[\\text{Brier Score} = \\frac{1}{N} \\sum_{n = 1}^{N} (f_n - y_n),\\] \\(f_n\\), \\(n = 1, \\dots, N\\) predicted probablities corresponding events, \\(y_n \\(0, 1)\\) equal one.) Interval coverage measures proportion observed values fall given prediction interval range. Interval coverage single prediction interval range can calculated \\[IC_{\\alpha} = \\text{nominal coverage} - \\text{empirical coverage},\\] nominal coverage \\(1 - \\alpha\\) empirical coverage proportion true values actually covered \\(1 - \\alpha\\) prediction intervals. summarise interval coverage different multiple interval ranges, can compute coverage deviation defined mean interval coverage \\(K\\) interval ranges \\(\\alpha_k\\) \\(k = 1, \\dots, K\\): \\[\\text{Coverage deviation} = \\frac{1}{K} \\sum_{k = 1}^{K} \\text{IC}_{\\alpha_k}\\] Quantile coverage given quantile level proportion true values smaller predictions corresponding quantile level. probability integral transform (PIT, Dawid 1984) represents succinct way visualise deviations predictive distribution \\(F\\) true data-generating distribution \\(G\\). idea transform observed values agreement forecasts data can examined observing whether transformed values follow uniform distribution. PIT given \\[u = F (y),\\] \\(u\\) transformed variable \\(F(y)\\) predictive distribution \\(F\\) evaluated true observed value \\(y\\). \\(F = G\\), \\(u\\) follows uniform distribution. integer outcomes, PIT longer uniform even forecasts ideal. Instead, randomised PIT can used: \\[u = P(y) + v \\cdot (P(y) - P(y - 1) ),\\] \\(y\\) observed value \\(P()\\) cumulative probability assigned values smaller equal \\(y\\) (\\(P(-1) = 0\\) definition, \\(v\\) standard uniform variable independent \\(y\\). \\(P\\) equal true data-generating distribution function, \\(u\\) standard uniform. also propose non-randomised version PIT count data used alternatively. Sharpness ability produce narrow forecasts feature forecasts depend observations. Sharpness therefore interest conditional calibration: precise forecast useful clearly wrong. suggested Funk et al. (2019), measure sharpness continuous integer forecasts represented predictive samples normalised median absolute deviation median (MADN) ), .e. \\[ S(F) = \\frac{1}{0.675} \\cdot \\text{median}(|x - \\text{median(x)}|), \\] \\(x\\) vector predictive samples \\(\\frac{1}{0.675}\\) normalising constant. predictive distribution \\(F\\) CDF normal distribution, sharpness equal standard deviation \\(F\\). Bias measure tendency forecaster - underpredict. continuous forecasts, bias given \\[B(F, y) = 1 - 2 \\cdot (F (y)), \\] \\(F\\) CDF predictive distribution \\(y\\) observed value. integer-valued forecasts, bias can calculated \\[B(P, y) = 1 - (P(y) + P(y + 1)), \\] \\(P(y)\\) cumulative probability assigned outcomes smaller equal \\(y\\). quantile forecasts, Bias can calculated maximum percentile rank prediction smaller \\(y\\), true value smaller median predictive distribution. true value median predictive distribution, bias minimum percentile rank corresponding quantile still larger true value. true value exactly median, bias zero. large enough number quantiles, percentile rank equal proportion predictive samples observed true value, metric coincides one continuous forecasts. mean score ratio used compare two models overlapping set forecast targets models made prediction. mean score ratio calculated mean score achieved first model mean score achieved second model. precisely, two models \\(, j\\), determine set overlapping forecasts, denoted \\(\\mathcal{}_{ij}\\) compute mean score ratio \\(\\theta_{ij}\\) \\[\\theta_{ij} =\\frac{\\text{mean score model } \\text{ } \\mathcal{}_{ij}}{\\text{mean score model } j \\text{ } \\mathcal{}_{ij}}.\\] mean score ratio can principle computed arbitrary score. Relative skill scores can used obtain ranking models based pairwise comparisons models. compute relative skill \\(\\theta_i\\) model \\(\\), take geometric mean mean score ratios involve model \\(\\), .e. \\[ \\theta_{} = \\left(\\prod_{m = 1}^M \\theta_{im}\\right)^{1/M}, \\] M number models.","code":""},{"path":"https://epiforecasts.io/scoringutils/articles/scoring-forecasts-directly.html","id":"bias","dir":"Articles","previous_headings":"","what":"Bias","title":"Scoring forecasts directly","text":"function bias determines bias predictive Monte-Carlo samples, automatically recognising whether forecasts continuous integer valued. continuous forecasts, Bias measured \\[B_t (P_t, x_t) = 1 - 2 \\cdot (P_t (x_t))\\] \\(P_t\\) empirical cumulative distribution function prediction true value \\(x_t\\). Computationally, \\(P_t (x_t)\\) just calculated fraction predictive samples \\(x_t\\) smaller \\(x_t\\). integer valued forecasts, Bias measured \\[B_t (P_t, x_t) = 1 - (P_t (x_t) + P_t (x_t + 1))\\] adjust integer nature forecasts. cases, Bias can assume values -1 1 0 ideally.","code":"## integer valued forecasts true_values <- rpois(30, lambda = 1:30) predictions <- replicate(200, rpois(n = 30, lambda = 1:30)) bias_sample(true_values, predictions) #>  [1] -0.93 -0.36  0.00 -0.70  0.48 -0.86  0.64 -0.69  0.41  0.19  0.85 -0.28 #> [13] -0.37  0.25 -0.14 -0.13 -0.26 -1.00 -0.22  0.77 -0.83  0.94 -0.93 -0.25 #> [25] -0.90 -0.94 -0.50  0.59 -0.94  0.31  ## continuous forecasts true_values <- rnorm(30, mean = 1:30) predictions <- replicate(200, rnorm(30, mean = 1:30)) bias_sample(true_values, predictions) #>  [1]  0.90  0.26  0.62  0.00  0.02 -0.18  0.04 -0.70 -0.89 -0.94  0.89  0.27 #> [13]  0.93 -0.07 -0.86 -0.80  0.43  0.42  0.28  0.10 -0.62  0.35  0.67 -0.51 #> [25] -0.30 -0.62 -0.10  0.76  0.12  0.13"},{"path":"https://epiforecasts.io/scoringutils/articles/scoring-forecasts-directly.html","id":"sharpness","dir":"Articles","previous_headings":"","what":"Sharpness","title":"Scoring forecasts directly","text":"Sharpness ability model generate predictions within narrow range. data-independent measure, purely feature forecasts . Sharpness / dispersion predictive samples corresponding one single true value measured normalised median absolute deviation median predictive samples. details, see ?stats::mad","code":"predictions <- replicate(200, rpois(n = 30, lambda = 1:30)) mad_sample(predictions) #>  [1] 1.4826 1.4826 1.4826 1.4826 2.9652 2.9652 2.9652 2.9652 2.9652 4.4478 #> [11] 2.9652 4.4478 4.4478 2.9652 2.9652 4.4478 4.4478 2.9652 4.4478 2.9652 #> [21] 4.4478 4.4478 4.4478 4.4478 5.9304 5.9304 4.4478 5.9304 5.9304 6.6717"},{"path":"https://epiforecasts.io/scoringutils/articles/scoring-forecasts-directly.html","id":"calibration","dir":"Articles","previous_headings":"","what":"Calibration","title":"Scoring forecasts directly","text":"Calibration reliability forecasts ability model correctly identify uncertainty making predictions. model perfect calibration, observed data time point look came predictive probability distribution time. Equivalently, one can inspect probability integral transform predictive distribution time t, \\[u_t = F_t (x_t)\\] \\(x_t\\) observed data point time \\(t \\text{ } t_1, …, t_n\\), n number forecasts, \\(F_t\\) (continuous) predictive cumulative probability distribution time t. true probability distribution outcomes time t \\(G_t\\) forecasts \\(F_t\\) said ideal \\(F_t = G_t\\) times \\(t\\). case, probabilities ut distributed uniformly. case discrete outcomes incidence counts, PIT longer uniform even forecasts ideal. case randomised PIT can used instead: \\[u_t = P_t(k_t) + v \\cdot (P_t(k_t) - P_t(k_t - 1) )\\] \\(k_t\\) observed count, \\(P_t(x)\\) predictive cumulative probability observing incidence \\(k\\) time \\(t\\), \\(P_t (-1) = 0\\) definition \\(v\\) standard uniform independent \\(k\\). \\(P_t\\) true cumulative probability distribution, \\(u_t\\) standard uniform. function checks whether integer continuous forecasts provided. applies (randomised) probability integral tests values \\(u_t\\) uniformity using Anderson-Darling test. rule thumb, evidence suggest forecasting model miscalibrated p-value found greater threshold \\(p >= 0.1\\), evidence miscalibrated \\(0.01 < p < 0.1\\), good evidence miscalibrated \\(p <= 0.01\\). context noted, though, uniformity PIT necessary sufficient condition calibration. als noted test works given sufficient samples, otherwise Null hypothesis often rejected outright.","code":""},{"path":"https://epiforecasts.io/scoringutils/articles/scoring-forecasts-directly.html","id":"continuous-ranked-probability-score-crps","dir":"Articles","previous_headings":"","what":"Continuous Ranked Probability Score (CRPS)","title":"Scoring forecasts directly","text":"Wrapper around crps_sample() function scoringRules package. information look manuals scoringRules package. function can used continuous well integer valued forecasts. Smaller values better.","code":"true_values <- rpois(30, lambda = 1:30) predictions <- replicate(200, rpois(n = 30, lambda = 1:30)) crps_sample(true_values, predictions) #>  [1] 0.225825 1.250400 2.075800 1.217075 1.067375 0.486850 1.794950 1.313000 #>  [9] 2.030475 1.674025 3.515100 3.476550 3.258100 1.593475 5.183900 1.729850 #> [17] 2.798225 1.055325 1.294250 1.765800 2.199675 1.427650 3.029250 6.407350 #> [25] 6.131775 1.576900 2.010375 3.818475 1.880700 1.441700"},{"path":"https://epiforecasts.io/scoringutils/articles/scoring-forecasts-directly.html","id":"dawid-sebastiani-score-dss","dir":"Articles","previous_headings":"","what":"Dawid-Sebastiani Score (DSS)","title":"Scoring forecasts directly","text":"Wrapper around dss_sample() function scoringRules package. information look manuals scoringRules package. function can used continuous well integer valued forecasts. Smaller values better.","code":"true_values <- rpois(30, lambda = 1:30) predictions <- replicate(200, rpois(n = 30, lambda = 1:30)) dss_sample(true_values, predictions) #>  [1] 1.1354704 0.5933588 1.4063193 2.4616911 2.3477621 1.9393913 1.9394608 #>  [8] 2.0195599 2.6719476 3.2341801 2.4350655 6.7965780 4.5304016 4.5055370 #> [15] 3.6990760 2.8451618 2.7619059 3.0759800 3.9293190 3.1452547 3.4401292 #> [22] 4.2416946 5.6700348 6.6672351 6.9034448 3.7991851 3.9588181 7.2659946 #> [29] 3.9021337 3.5827108"},{"path":"https://epiforecasts.io/scoringutils/articles/scoring-forecasts-directly.html","id":"log-score","dir":"Articles","previous_headings":"","what":"Log Score","title":"Scoring forecasts directly","text":"Wrapper around logs_sample() function scoringRules package. information look manuals scoringRules package. function used integer valued forecasts. Log Scores principle possible integer valued forecasts require kernel density estimate well defined discrete values. Smaller values better.","code":"true_values <- rnorm(30, mean = 1:30) predictions <- replicate(200, rnorm(n = 30, mean = 1:30)) logs_sample(true_values, predictions) #>  [1] 1.2526133 1.3986074 2.6483264 1.8690066 0.9331076 1.2819882 0.9671999 #>  [8] 1.4922969 1.4219866 1.2833622 1.0416557 1.0121667 1.8884226 1.0798801 #> [15] 3.0057467 1.0067592 1.0696506 0.9301356 0.8950081 1.1085132 1.3656456 #> [22] 1.6287146 1.3114429 1.0078369 2.0865332 1.0327137 1.1006004 1.0934940 #> [29] 1.1298992 1.1806480"},{"path":"https://epiforecasts.io/scoringutils/articles/scoring-forecasts-directly.html","id":"brier-score","dir":"Articles","previous_headings":"","what":"Brier Score","title":"Scoring forecasts directly","text":"Brier score proper score rule assesses accuracy probabilistic binary predictions. outcomes can either 0 1, predictions must probability true outcome 1. Brier Score computed mean squared error probabilistic prediction true outcome. \\[\\text{Brier_Score} = \\frac{1}{N} \\sum_{t = 1}^{n} (\\text{prediction}_t - \\text{outcome}_t)^2\\]","code":"true_values <- sample(c(0, 1), size = 30, replace = TRUE) predictions <- runif(n = 30, min = 0, max = 1)  brier_score(true_values, predictions) #>  [1] 0.083039548 0.877267780 0.524728580 0.192910968 0.059763286 0.545724282 #>  [7] 0.007364658 0.031819805 0.065950316 0.523242745 0.459665795 0.007444686 #> [13] 0.024191912 0.037969072 0.421910402 0.219364996 0.014679277 0.718672843 #> [19] 0.860882523 0.815057831 0.249953784 0.050892026 0.971182772 0.037827898 #> [25] 0.389491596 0.832823270 0.726456875 0.227189917 0.167270666 0.001842789"},{"path":"https://epiforecasts.io/scoringutils/articles/scoring-forecasts-directly.html","id":"interval-score","dir":"Articles","previous_headings":"Brier Score","what":"Interval Score","title":"Scoring forecasts directly","text":"Interval Score Proper Scoring Rule score quantile predictions, following Gneiting Raftery (2007). Smaller values better. score computed \\[ \\text{score} = (\\text{upper} - \\text{lower}) + \\\\ \\frac{2}{\\alpha} \\cdot (\\text{lower} - \\text{true_value}) \\cdot 1(\\text{true_values} < \\text{lower}) + \\\\ \\frac{2}{\\alpha} \\cdot (\\text{true_value} - \\text{upper}) \\cdot 1(\\text{true_value} > \\text{upper})\\] \\(1()\\) indicator function \\(\\alpha\\) decimal value indicates much outside prediction interval. improve usability, user asked provide interval range percentage terms, .e. interval_range = 90 (percent) 90 percent prediction interval. Correspondingly, user provide 5% 95% quantiles (corresponding alpha 0.1). specific distribution assumed, range symmetric (.e can’t use 0.1 quantile lower bound 0.7 quantile upper). Setting weigh = TRUE weigh score \\(\\frac{\\alpha}{2}\\) Interval Score converges CRPS increasing number quantiles.","code":"true_values <- rnorm(30, mean = 1:30) interval_range <- 90 alpha <- (100 - interval_range) / 100 lower <- qnorm(alpha / 2, rnorm(30, mean = 1:30)) upper <- qnorm((1 - alpha / 2), rnorm(30, mean = 1:30))  interval_score(   true_values = true_values,   lower = lower,   upper = upper,   interval_range = interval_range ) #>  [1] 0.15369890 0.22499742 0.19557441 0.68963748 0.23353529 0.13428356 #>  [7] 0.21949783 0.33364960 0.16357527 0.15774751 0.13931779 0.16525192 #> [13] 0.25217907 1.67283695 0.15328469 0.19080498 0.15884813 0.13889832 #> [19] 0.25077581 0.24066652 0.19000058 0.07164780 0.26426875 0.14480946 #> [25] 0.15203435 0.16970498 0.23293097 0.15578074 0.08688342 0.13172123"},{"path":"https://epiforecasts.io/scoringutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nikos Bosse. Author, maintainer. Sam Abbott. Author. Hugo Gruson. Author. Johannes Bracher. Contributor. Sebastian Funk. Contributor.","code":""},{"path":"https://epiforecasts.io/scoringutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nikos . Bosse, Hugo Gruson, Sebastian Funk, EpiForecasts, Sam Abbott (2020). scoringutils: Utilities Scoring Assessing Predictions, DOI: 10.5281/zenodo.4618017","code":"@Manual{,   title = {scoringutils: Utilities for Scoring and Assessing Predictions},   author = {Nikos I. Bosse and Hugo Gruson and Sebastian Funk and {EpiForecasts} and Sam Abbott},   year = {2020},   doi = {10.5281/zenodo.4618017}, }"},{"path":"https://epiforecasts.io/scoringutils/index.html","id":"scoringutils-utilities-for-scoring-and-assessing-predictions","dir":"","previous_headings":"","what":"Utilities for Scoring and Assessing Predictions","title":"Utilities for Scoring and Assessing Predictions","text":"scoringutils package provides collection metrics proper scoring rules make simple score probabilistic forecasts true observed values. scoringutils package offers convenient automated forecast evaluation data.table format (using function score()), also provides experienced users set reliable lower-level scoring metrics operating vectors/matriced can build upon applications. addition implements wide range flexible plots able cover many use cases. goal package provide tested reliable collection metrics can used scoring probabilistic forecasts (forecasts full predictive distribution, rather point forecasts). much stronger focus convenience e.g. scoringRules package, provides comprehensive collection proper scoring rules (also used scoringutils). contrast packages, scoringutils offers functionality automatically evaluate forecasts, visualise scores obtain relative scores models. Predictions can handled various formats: scoringutils can handle probabilistic forecasts either sample based quantile based format. detail expected input formats please see . True values can integer, continuous binary.","code":""},{"path":"https://epiforecasts.io/scoringutils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utilities for Scoring and Assessing Predictions","text":"Install CRAN version package using: Install stable development version package : Install unstable development GitHub using following,","code":"install.packages(\"scoringutils\") install.packages(\"scoringutils\", repos = \"https://epiforecasts.r-universe.dev\") remotes::install_github(\"epiforecasts/scoringutils\", dependencies = TRUE)"},{"path":"https://epiforecasts.io/scoringutils/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Utilities for Scoring and Assessing Predictions","text":"quick start guide explore functionality scoringutils package using quantile forecasts ECDC forecasting hub example. detailed documentation please see package vignettes, individual function documentation.","code":""},{"path":"https://epiforecasts.io/scoringutils/index.html","id":"plotting-forecasts","dir":"","previous_headings":"Quick start","what":"Plotting forecasts","title":"Utilities for Scoring and Assessing Predictions","text":"first step evaluating forecasts visualise . purposes example make use plot_predictions() filter available forecasts single model, forecast date.","code":"example_quantile %>%   plot_predictions(     x = \"target_end_date\",     filter_truth = list(       'target_end_date <= \"2021-07-15\"', 'target_end_date > \"2021-05-22\"'     ),     filter_forecasts = list(       \"model == 'EuroCOVIDhub-ensemble'\", 'forecast_date == \"2021-06-28\"'     )   ) +   facet_wrap(target_type ~ location, ncol = 4, scales = \"free\") +   theme(legend.position = \"bottom\")"},{"path":"https://epiforecasts.io/scoringutils/index.html","id":"scoring-forecasts","dir":"","previous_headings":"Quick start","what":"Scoring forecasts","title":"Utilities for Scoring and Assessing Predictions","text":"Forecasts can easily quickly scored using score() function. function returns unsumarised scores, cases user wants. make use additional functions scoringutils add empirical coverage-levels (add_coverage()), scores relative baseline model (chosen EuroCOVIDhub-ensemble model). See getting started vignette details. Finally summarise scores model target type. scoringutils contains additional functionality summarise scores different levels, visualise , explore forecasts . See package vignettes function documentation information.","code":"example_quantile %>%   score() %>%   add_coverage(ranges = c(50, 90), by = c(\"model\", \"target_type\")) %>%   summarise_scores(     by = c(\"model\", \"target_type\"),     relative_skill = TRUE,     baseline = \"EuroCOVIDhub-ensemble\"   ) %>%   summarise_scores(     fun = signif,      digits = 2   ) %>%   kable() #> The following messages were produced when checking inputs: #> 1.  Some values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected."},{"path":"https://epiforecasts.io/scoringutils/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Utilities for Scoring and Assessing Predictions","text":"using scoringutils work please consider citing using following,","code":"#>  #> To cite scoringutils in publications use: #>  #>   Nikos I. Bosse, Sam Abbott, EpiForecasts, and Sebastian Funk (2020). #>   scoringutils: Utilities for Scoring and Assessing Predictions, DOI: #>   10.5281/zenodo.4618017 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {scoringutils: Utilities for Scoring and Assessing Predictions}, #>     author = {Nikos I. Bosse and Sam Abbott and {EpiForecasts} and Sebastian Funk}, #>     year = {2020}, #>     doi = {10.5281/zenodo.4618017}, #>   }"},{"path":"https://epiforecasts.io/scoringutils/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"","what":"How to make a bug report or feature request","title":"Utilities for Scoring and Assessing Predictions","text":"Please briefly describe problem output expect issue. question, please don’t open issue. Instead, ask Q page.","code":""},{"path":"https://epiforecasts.io/scoringutils/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Utilities for Scoring and Assessing Predictions","text":"welcome contributions new contributors! particularly appreciate help priority problems issues. Please check add issues, /add pull request.","code":""},{"path":"https://epiforecasts.io/scoringutils/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Utilities for Scoring and Assessing Predictions","text":"Please note scoringutils project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/abs_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Error — abs_error","title":"Absolute Error — abs_error","text":"Calculate absolute error $$   \\text{abs}(\\text{true_value} - \\text{median_prediction}) $$","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/abs_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Error — abs_error","text":"","code":"abs_error(true_values, predictions)"},{"path":"https://epiforecasts.io/scoringutils/reference/abs_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Error — abs_error","text":"true_values vector true observed values size n predictions numeric vector predictions, corresponding quantiles second vector, quantiles.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/abs_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Error — abs_error","text":"vector absolute error","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/reference/abs_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Absolute Error — abs_error","text":"","code":"true_values <- rnorm(30, mean = 1:30) predicted_values <- rnorm(30, mean = 1:30) abs_error(true_values, predicted_values) #>  [1] 0.88272638 1.01297696 0.50632498 1.66389929 0.80753772 3.11494309 #>  [7] 3.63962257 0.34820704 1.66161487 0.88376965 1.37999489 1.19152757 #> [13] 1.36797071 0.01962210 0.12758551 2.82536033 1.83048228 0.70003072 #> [19] 0.18398637 0.29408823 1.07611237 2.39976702 0.94247025 2.79473045 #> [25] 1.07144275 0.35032480 0.16364373 1.11140716 0.05362976 0.26343020"},{"path":"https://epiforecasts.io/scoringutils/reference/add_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Add coverage of central prediction intervals — add_coverage","title":"Add coverage of central prediction intervals — add_coverage","text":"Adds column coverage central prediction intervals unsummarised scores produced score()","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/add_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add coverage of central prediction intervals — add_coverage","text":"","code":"add_coverage(scores, by, ranges = c(50, 90))"},{"path":"https://epiforecasts.io/scoringutils/reference/add_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add coverage of central prediction intervals — add_coverage","text":"scores data.table scores produced score(). character vector column names add coverage . ranges numeric vector ranges central prediction intervals coverage values shall added.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/add_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add coverage of central prediction intervals — add_coverage","text":"data.table unsummarised scores columns added coverage central prediction intervals. overall data.table still unsummarised, note coverage columns level summary present according value specified .","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/add_coverage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add coverage of central prediction intervals — add_coverage","text":"coverage values added computed according values specified . , example, = \"model\", one coverage value every model add_coverage() compute coverage every model across values present columns define unit single forecast.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/add_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add coverage of central prediction intervals — add_coverage","text":"","code":"library(magrittr) # pipe operator score(example_quantile) %>%   add_coverage(by = c(\"model\", \"target_type\")) %>%   summarise_scores(by = c(\"model\", \"target_type\")) %>%   summarise_scores(fun = signif, digits = 2) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                    model target_type interval_score dispersion underprediction #> 1: EuroCOVIDhub-baseline       Cases          28000       4100         10000.0 #> 2: EuroCOVIDhub-baseline      Deaths            160         91             2.1 #> 3: EuroCOVIDhub-ensemble       Cases          18000       3700          4200.0 #> 4: EuroCOVIDhub-ensemble      Deaths             41         30             4.1 #> 5:       UMass-MechBayes      Deaths             53         27            17.0 #> 6:  epiforecasts-EpiNow2       Cases          21000       5700          3300.0 #> 7:  epiforecasts-EpiNow2      Deaths             67         32            16.0 #>    overprediction coverage_deviation    bias ae_median coverage_50 coverage_90 #> 1:        14000.0             -0.110  0.0980     38000        0.33        0.82 #> 2:           66.0              0.120  0.3400       230        0.66        1.00 #> 3:        10000.0             -0.098 -0.0560     24000        0.39        0.80 #> 4:            7.1              0.200  0.0730        53        0.88        1.00 #> 5:            9.0             -0.023 -0.0220        78        0.46        0.88 #> 6:        12000.0             -0.067 -0.0790     28000        0.47        0.79 #> 7:           19.0             -0.043 -0.0051       100        0.42        0.91"},{"path":"https://epiforecasts.io/scoringutils/reference/ae_median_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Error of the Median (Quantile-based Version) — ae_median_quantile","title":"Absolute Error of the Median (Quantile-based Version) — ae_median_quantile","text":"Absolute error median calculated $$   \\text{abs}(\\text{true_value} - \\text{prediction}) $$ function created internal use within score(), can also used standalone function.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/ae_median_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Error of the Median (Quantile-based Version) — ae_median_quantile","text":"","code":"ae_median_quantile(true_values, predictions, quantiles = NULL)"},{"path":"https://epiforecasts.io/scoringutils/reference/ae_median_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Error of the Median (Quantile-based Version) — ae_median_quantile","text":"true_values vector true observed values size n predictions numeric vector predictions, corresponding quantiles second vector, quantiles. quantiles numeric vector denotes quantile values predictions. predictions quantiles == 0.5 kept. quantiles NULL, predictions true_values used (abs_error())","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/ae_median_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Error of the Median (Quantile-based Version) — ae_median_quantile","text":"vector scoring values","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/reference/ae_median_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Absolute Error of the Median (Quantile-based Version) — ae_median_quantile","text":"","code":"true_values <- rnorm(30, mean = 1:30) predicted_values <- rnorm(30, mean = 1:30) ae_median_quantile(true_values, predicted_values, quantiles = 0.5) #>  [1] 1.48684757 1.57356001 1.16945335 0.87941246 0.56937579 1.81781229 #>  [7] 0.63808711 0.90937282 1.27581460 0.32617180 1.73072204 0.47228054 #> [13] 0.05668671 1.78934760 2.43967553 1.17087390 1.28811431 1.39076143 #> [19] 1.41908337 0.93476270 0.02937280 0.67822527 1.84754590 0.24179148 #> [25] 1.70481743 0.72631463 1.69312171 1.38824291 0.29872809 1.26617958"},{"path":"https://epiforecasts.io/scoringutils/reference/ae_median_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Error of the Median (Sample-based Version) — ae_median_sample","title":"Absolute Error of the Median (Sample-based Version) — ae_median_sample","text":"Absolute error median calculated $$   \\text{abs}(\\text{true_value} - \\text{median_prediction}) $$","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/ae_median_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Error of the Median (Sample-based Version) — ae_median_sample","text":"","code":"ae_median_sample(true_values, predictions)"},{"path":"https://epiforecasts.io/scoringutils/reference/ae_median_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Error of the Median (Sample-based Version) — ae_median_sample","text":"true_values vector true observed values size n predictions nxN matrix predictive samples, n (number rows) number data points N (number columns) number Monte Carlo samples. Alternatively, predictions can just vector size n.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/ae_median_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Error of the Median (Sample-based Version) — ae_median_sample","text":"vector scoring values","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/reference/ae_median_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Absolute Error of the Median (Sample-based Version) — ae_median_sample","text":"","code":"true_values <- rnorm(30, mean = 1:30) predicted_values <- rnorm(30, mean = 1:30) ae_median_sample(true_values, predicted_values) #>  [1] 0.55350409 0.50177024 0.92425724 0.64697877 2.92854277 0.67243198 #>  [7] 2.72860154 1.29525393 1.37022215 1.72009530 0.97263113 0.18725912 #> [13] 0.01866964 0.57158809 1.10930013 2.30935113 1.98481882 3.99563103 #> [19] 3.37297998 0.51355317 1.74550397 2.60256790 0.28041907 1.11719927 #> [25] 2.51588621 0.70096880 0.84885727 0.64626728 3.19821765 0.72951053"},{"path":"https://epiforecasts.io/scoringutils/reference/avail_forecasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Number of Forecasts Available — avail_forecasts","title":"Display Number of Forecasts Available — avail_forecasts","text":"Given data set forecasts, count number available forecasts arbitrary grouping (e.g. number forecasts per model, number forecasts per model location). useful determine whether missing forecasts.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/avail_forecasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Number of Forecasts Available — avail_forecasts","text":"","code":"avail_forecasts(data, by = NULL, collapse = c(\"quantile\", \"sample\"))"},{"path":"https://epiforecasts.io/scoringutils/reference/avail_forecasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Number of Forecasts Available — avail_forecasts","text":"data data.frame predictions format required score(). character vector NULL (default) denotes categories number forecasts counted. default (= NULL) unit single forecast (.e. available columns (apart \"protected\" columns 'prediction' 'true value') plus \"quantile\" \"sample\" present). collapse character vector (default c(\"quantile\", \"sample\") names categories number rows collapsed one counting. example, single forecast usually represented set several quantiles samples collapsing one makes sure single forecast gets counted .","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/avail_forecasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Number of Forecasts Available — avail_forecasts","text":"data.table columns specified additional column number forecasts.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/avail_forecasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display Number of Forecasts Available — avail_forecasts","text":"","code":"avail_forecasts(example_quantile,   collapse = c(\"quantile\"),   by = c(\"model\", \"target_type\") ) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                    model target_type Number forecasts #> 1: EuroCOVIDhub-ensemble       Cases              128 #> 2: EuroCOVIDhub-baseline       Cases              128 #> 3:  epiforecasts-EpiNow2       Cases              128 #> 4: EuroCOVIDhub-ensemble      Deaths              128 #> 5: EuroCOVIDhub-baseline      Deaths              128 #> 6:       UMass-MechBayes      Deaths              128 #> 7:  epiforecasts-EpiNow2      Deaths              119"},{"path":"https://epiforecasts.io/scoringutils/reference/available_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Available metrics in scoringutils — available_metrics","title":"Available metrics in scoringutils — available_metrics","text":"Available metrics scoringutils","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/available_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available metrics in scoringutils — available_metrics","text":"","code":"available_metrics()"},{"path":"https://epiforecasts.io/scoringutils/reference/available_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available metrics in scoringutils — available_metrics","text":"vector name available metrics","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines Bias of Quantile Forecasts — bias_quantile","title":"Determines Bias of Quantile Forecasts — bias_quantile","text":"Determines bias quantile forecasts. increasing number quantiles measure converges sample based bias version integer continuous forecasts.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines Bias of Quantile Forecasts — bias_quantile","text":"","code":"bias_quantile(predictions, quantiles, true_value)"},{"path":"https://epiforecasts.io/scoringutils/reference/bias_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines Bias of Quantile Forecasts — bias_quantile","text":"predictions vector length corresponding number quantiles holds predictions quantiles vector corresponding size quantiles predictions made true_value single true value","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines Bias of Quantile Forecasts — bias_quantile","text":"scalar quantile bias single quantile prediction","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_quantile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determines Bias of Quantile Forecasts — bias_quantile","text":"quantile forecasts, bias measured $$ B_t = (1 - 2 \\cdot \\max \\{| q_{t,} \\Q_t \\land q_{t,} \\leq x_t\\})  1( x_t \\leq q_{t, 0.5}) \\\\ + (1 - 2 \\cdot \\min \\{| q_{t,} \\Q_t \\land q_{t,} \\geq x_t\\})  1( x_t \\geq q_{t, 0.5}),$$ \\(Q_t\\) set quantiles form predictive distribution time \\(t\\). represent belief true value $x_t$ . consistency, define \\(Q_t\\) always includes element \\(q_{t, 0} = - \\infty$ $q_{t,1} = \\infty\\). \\(1()\\) indicator function \\(1\\) condition satisfied $0$ otherwise. clearer terms, \\(B_t\\) defined maximum percentile rank corresponding quantile still true value, true value smaller median predictive distribution. true value median predictive distribution, $B_t$ minimum percentile rank corresponding quantile still larger true value. true value exactly median, terms cancel \\(B_t\\) zero. large enough number quantiles, percentile rank equal proportion predictive samples observed true value, metric coincides one continuous forecasts. Bias can assume values -1 1 0 ideally.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_quantile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determines Bias of Quantile Forecasts — bias_quantile","text":"Nikos Bosse nikosbosse@gmail.com","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determines Bias of Quantile Forecasts — bias_quantile","text":"","code":"predictions <- c(   705.500, 1127.000, 4006.250, 4341.500, 4709.000, 4821.996,   5340.500, 5451.000, 5703.500, 6087.014, 6329.500, 6341.000,   6352.500, 6594.986, 6978.500, 7231.000, 7341.500, 7860.004,   7973.000, 8340.500, 8675.750, 11555.000, 11976.500 )  quantiles <- c(0.01, 0.025, seq(0.05, 0.95, 0.05), 0.975, 0.99)  true_value <- 8062  bias_quantile(predictions, quantiles, true_value = true_value) #> [1] -0.8"},{"path":"https://epiforecasts.io/scoringutils/reference/bias_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines Bias of Quantile Forecasts — bias_range","title":"Determines Bias of Quantile Forecasts — bias_range","text":"Determines bias quantile forecasts. increasing number quantiles measure converges sample based bias version integer continuous forecasts.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines Bias of Quantile Forecasts — bias_range","text":"","code":"bias_range(range, lower, upper, true_value)"},{"path":"https://epiforecasts.io/scoringutils/reference/bias_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines Bias of Quantile Forecasts — bias_range","text":"range vector corresponding size information width central prediction interval lower vector length corresponding number central prediction intervals holds predictions lower bounds prediction interval upper vector length corresponding number central prediction intervals holds predictions upper bounds prediction interval true_value single true value","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines Bias of Quantile Forecasts — bias_range","text":"scalar quantile bias single quantile prediction","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determines Bias of Quantile Forecasts — bias_range","text":"quantile forecasts, bias measured $$ B_t = (1 - 2 \\cdot \\max \\{| q_{t,} \\Q_t \\land q_{t,} \\leq x_t\\}) \\mathbf{1}( x_t \\leq q_{t, 0.5}) \\\\ + (1 - 2 \\cdot \\min \\{| q_{t,} \\Q_t \\land q_{t,} \\geq x_t\\})  \\mathbf{1}( x_t \\geq q_{t, 0.5}), $$ \\(Q_t\\) set quantiles form predictive distribution time \\(t\\). represent belief true value \\(x_t\\) . consistency, define \\(Q_t\\) always includes element \\(q_{t, 0} = - \\infty\\) \\(q_{t,1} = \\infty\\). \\(\\mathbf{1}()\\) indicator function \\(1\\) condition satisfied $0$ otherwise. clearer terms, \\(B_t\\) defined maximum percentile rank corresponding quantile still true value, true value smaller median predictive distribution. true value median predictive distribution, $B_t$ minimum percentile rank corresponding quantile still larger true value. true value exactly median, terms cancel \\(B_t\\) zero. large enough number quantiles, percentile rank equal proportion predictive samples observed true value, metric coincides one continuous forecasts. Bias can assume values -1 1 0 ideally.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_range.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determines Bias of Quantile Forecasts — bias_range","text":"Nikos Bosse nikosbosse@gmail.com","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determines Bias of Quantile Forecasts — bias_range","text":"","code":"lower <- c(   6341.000, 6329.500, 6087.014, 5703.500,   5451.000, 5340.500, 4821.996, 4709.000,   4341.500, 4006.250, 1127.000, 705.500 )  upper <- c(   6341.000, 6352.500, 6594.986, 6978.500,   7231.000, 7341.500, 7860.004, 7973.000,   8340.500, 8675.750, 11555.000, 11976.500 )  range <- c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 95, 98)  true_value <- 8062  bias_range(   lower = lower, upper = upper,   range = range, true_value = true_value ) #> [1] -0.8"},{"path":"https://epiforecasts.io/scoringutils/reference/bias_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines bias of forecasts — bias_sample","title":"Determines bias of forecasts — bias_sample","text":"Determines bias predictive Monte-Carlo samples. function automatically recognises, whether forecasts continuous integer valued adapts Bias function accordingly.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines bias of forecasts — bias_sample","text":"","code":"bias_sample(true_values, predictions)"},{"path":"https://epiforecasts.io/scoringutils/reference/bias_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines bias of forecasts — bias_sample","text":"true_values vector true observed values size n predictions nxN matrix predictive samples, n (number rows) number data points N (number columns) number Monte Carlo samples. Alternatively, predictions can just vector size n.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines bias of forecasts — bias_sample","text":"vector length n biases predictive samples respect true values.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determines bias of forecasts — bias_sample","text":"continuous forecasts, Bias measured $$ B_t (P_t, x_t) = 1 - 2 * (P_t (x_t)) $$ \\(P_t\\) empirical cumulative distribution function prediction true value \\(x_t\\). Computationally, \\(P_t (x_t)\\) just calculated fraction predictive samples \\(x_t\\) smaller \\(x_t\\). integer valued forecasts, Bias measured $$ B_t (P_t, x_t) = 1 - (P_t (x_t) + P_t (x_t + 1)) $$ adjust integer nature forecasts. cases, Bias can assume values -1 1 0 ideally.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determines bias of forecasts — bias_sample","text":"integer valued Bias function discussed Assessing performance real-time epidemic forecasts: case study Ebola Western Area region Sierra Leone, 2014-15 Funk S, Camacho , Kucharski AJ, Lowe R, Eggo RM, et al. (2019) Assessing performance real-time epidemic forecasts: case study Ebola Western Area region Sierra Leone, 2014-15. PLOS Computational Biology 15(2): e1006785. doi:10.1371/journal.pcbi.1006785","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_sample.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determines bias of forecasts — bias_sample","text":"Nikos Bosse nikosbosse@gmail.com","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/bias_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determines bias of forecasts — bias_sample","text":"","code":"## integer valued forecasts true_values <- rpois(30, lambda = 1:30) predictions <- replicate(200, rpois(n = 30, lambda = 1:30)) bias_sample(true_values, predictions) #>  [1] -0.82 -0.32  0.65  0.17 -0.74 -0.66  0.97 -0.88 -0.23  0.01  0.25 -0.71 #> [13] -0.31 -0.64  0.08 -0.09 -0.76  0.39  0.42  0.28 -0.27 -0.11  0.29 -0.96 #> [25] -0.16  0.44 -0.72  0.06 -0.58 -0.81  ## continuous forecasts true_values <- rnorm(30, mean = 1:30) predictions <- replicate(200, rnorm(30, mean = 1:30)) bias_sample(true_values, predictions) #>  [1] -0.77 -0.69  0.10  0.48 -0.79  0.36  0.30  0.28 -1.00  0.33 -0.17 -0.89 #> [13]  0.86  0.96 -0.88 -0.69  0.97 -0.74  0.40 -0.15  0.47 -0.97  0.55 -0.53 #> [25]  0.74 -0.12 -0.25  0.28 -0.51 -0.48"},{"path":"https://epiforecasts.io/scoringutils/reference/brier_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Brier Score — brier_score","title":"Brier Score — brier_score","text":"Computes Brier Score probabilistic forecasts binary outcomes.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/brier_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brier Score — brier_score","text":"","code":"brier_score(true_values, predictions)"},{"path":"https://epiforecasts.io/scoringutils/reference/brier_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Brier Score — brier_score","text":"true_values vector true observed values size n values equal either 0 1 predictions vector predicted probability true_value = 1.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/brier_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Brier Score — brier_score","text":"numeric value Brier Score, .e. mean squared error given probability forecasts","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/brier_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Brier Score — brier_score","text":"Brier score proper score rule assesses accuracy probabilistic binary predictions. outcomes can either 0 1, predictions must probability true outcome 1. Brier Score computed mean squared error probabilistic prediction true outcome. $$   \\text{Brier_Score} = \\frac{1}{N} \\sum_{t = 1}^{n} (\\text{prediction_t} -   \\text{outcome_t})^2 $$","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/brier_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Brier Score — brier_score","text":"","code":"true_values <- sample(c(0, 1), size = 30, replace = TRUE) predictions <- runif(n = 30, min = 0, max = 1)  brier_score(true_values, predictions) #>  [1] 0.0033254408 0.6715370330 0.3717503064 0.9845970661 0.2233389084 #>  [6] 0.0853940939 0.5617606076 0.2012881888 0.2386428882 0.0001391135 #> [11] 0.7958817376 0.3814668767 0.3493816462 0.3421205846 0.3756354746 #> [16] 0.5743203093 0.0027407747 0.4940151313 0.3300423904 0.4825529126 #> [21] 0.3759663713 0.5541175202 0.1188190868 0.3109131309 0.6593507538 #> [26] 0.8510754579 0.4446382609 0.4655094155 0.3092648747 0.2890132512"},{"path":"https://epiforecasts.io/scoringutils/reference/check_equal_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Length — check_equal_length","title":"Check Length — check_equal_length","text":"Check whether variables length","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_equal_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Length — check_equal_length","text":"","code":"check_equal_length(..., one_allowed = TRUE)"},{"path":"https://epiforecasts.io/scoringutils/reference/check_equal_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Length — check_equal_length","text":"... variables check one_allowed logical, allow arguments length one can recycled","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_equal_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Length — check_equal_length","text":"function returns NULL, throws error variable lengths differ","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_forecasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Check forecasts — check_forecasts","title":"Check forecasts — check_forecasts","text":"Function check input data running score(). data come one three different formats: format binary predictions (see example_binary) sample-based format discrete continuous predictions (see example_continuous example_integer) quantile-based format (see example_quantile)","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_forecasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check forecasts — check_forecasts","text":"","code":"check_forecasts(data)"},{"path":"https://epiforecasts.io/scoringutils/reference/check_forecasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check forecasts — check_forecasts","text":"data data.frame predictions format required score().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_forecasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check forecasts — check_forecasts","text":"list elements give information scoringutilsthinks trying potential issues. target_type type prediction target inferred input: 'binary', values true_value either 0 1 values prediction 0 1, 'discrete' true values integers. 'continuous' . prediction_type inferred type prediction. 'quantile', column called 'quantile', else 'discrete' values prediction integer, else 'continuous. forecast_unit unit single forecast, .e. grouping uniquely defines single forecast. assumed present columns apart following protected columns: c(\"prediction\", \"true_value\", \"sample\", \"quantile\",\"range\", \"boundary\"). important remove unnecessary columns scoring. rows_per_forecast data.frame shows many rows (usually quantiles samples available per forecast. forecast model several entries, forecasts differing numbers quantiles / samples. unique_values data.frame shows many unique values present per model column data. directly show missing values, rather maximum number unique values across whole data. warnings vector warnings. can ignored know . errors vector issues cause error running score(). messages verbal explanation information provided .","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/reference/check_forecasts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check forecasts — check_forecasts","text":"Nikos Bosse nikosbosse@gmail.com","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_forecasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check forecasts — check_forecasts","text":"","code":"check <- check_forecasts(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. print(check) #> Your forecasts seem to be for a target of the following type: #> $target_type #> [1] \"integer\" #>  #> and in the following format: #> $prediction_type #> [1] \"quantile\" #>  #> The unit of a single forecast is defined by: #> $forecast_unit #> [1] \"location\"        \"target_end_date\" \"target_type\"     \"location_name\"   #> [5] \"forecast_date\"   \"model\"           \"horizon\"         #>  #> Cleaned data, rows with NA values in prediction or true_value removed: #> $cleaned_data #>        location target_end_date target_type true_value location_name #>     1:       DE      2021-05-08       Cases     106987       Germany #>     2:       DE      2021-05-08       Cases     106987       Germany #>     3:       DE      2021-05-08       Cases     106987       Germany #>     4:       DE      2021-05-08       Cases     106987       Germany #>     5:       DE      2021-05-08       Cases     106987       Germany #>    ---                                                               #> 20397:       IT      2021-07-24      Deaths         78         Italy #> 20398:       IT      2021-07-24      Deaths         78         Italy #> 20399:       IT      2021-07-24      Deaths         78         Italy #> 20400:       IT      2021-07-24      Deaths         78         Italy #> 20401:       IT      2021-07-24      Deaths         78         Italy #>        forecast_date quantile prediction                 model horizon #>     1:    2021-05-03    0.010      82466 EuroCOVIDhub-ensemble       1 #>     2:    2021-05-03    0.025      86669 EuroCOVIDhub-ensemble       1 #>     3:    2021-05-03    0.050      90285 EuroCOVIDhub-ensemble       1 #>     4:    2021-05-03    0.100      95341 EuroCOVIDhub-ensemble       1 #>     5:    2021-05-03    0.150      99171 EuroCOVIDhub-ensemble       1 #>    ---                                                                 #> 20397:    2021-07-12    0.850        352  epiforecasts-EpiNow2       2 #> 20398:    2021-07-12    0.900        397  epiforecasts-EpiNow2       2 #> 20399:    2021-07-12    0.950        499  epiforecasts-EpiNow2       2 #> 20400:    2021-07-12    0.975        611  epiforecasts-EpiNow2       2 #> 20401:    2021-07-12    0.990        719  epiforecasts-EpiNow2       2 #>  #> Number of unique values per column per model: #> $unique_values #>                    model location target_end_date target_type true_value #> 1: EuroCOVIDhub-ensemble        4              12           2         96 #> 2: EuroCOVIDhub-baseline        4              12           2         96 #> 3:  epiforecasts-EpiNow2        4              12           2         95 #> 4:       UMass-MechBayes        4              12           1         48 #>    location_name forecast_date quantile prediction horizon #> 1:             4            11       23       3969       3 #> 2:             4            11       23       3733       3 #> 3:             4            11       23       3903       3 #> 4:             4            11       23       1058       3 #>  #> $messages #> [1] \"144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected.\" #>  check_forecasts(example_binary) #> The following messages were produced when checking inputs: #> 1.  144 values for `true_value` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #> 2.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #> Your forecasts seem to be for a target of the following type: #> $target_type #> [1] \"binary\" #>  #> and in the following format: #> $prediction_type #> [1] \"continuous\" #>  #> The unit of a single forecast is defined by: #> $forecast_unit #> [1] \"location\"        \"location_name\"   \"target_end_date\" \"target_type\"     #> [5] \"forecast_date\"   \"model\"           \"horizon\"         #>  #> Cleaned data, rows with NA values in prediction or true_value removed: #> $cleaned_data #>      location location_name target_end_date target_type forecast_date #>   1:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   2:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   3:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   4:       DE       Germany      2021-05-08      Deaths    2021-05-03 #>   5:       DE       Germany      2021-05-08      Deaths    2021-05-03 #>  ---                                                                  #> 883:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 884:       IT         Italy      2021-07-24      Deaths    2021-07-05 #> 885:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 886:       IT         Italy      2021-07-24      Deaths    2021-07-05 #> 887:       IT         Italy      2021-07-24      Deaths    2021-07-12 #>                      model horizon prediction true_value #>   1: EuroCOVIDhub-ensemble       1      0.375          0 #>   2: EuroCOVIDhub-baseline       1      0.475          0 #>   3:  epiforecasts-EpiNow2       1      0.425          0 #>   4: EuroCOVIDhub-ensemble       1      0.425          0 #>   5: EuroCOVIDhub-baseline       1      0.500          1 #>  ---                                                     #> 883: EuroCOVIDhub-baseline       2      0.250          0 #> 884:       UMass-MechBayes       3      0.475          0 #> 885:       UMass-MechBayes       2      0.450          0 #> 886:  epiforecasts-EpiNow2       3      0.375          0 #> 887:  epiforecasts-EpiNow2       2      0.300          0 #>  #> Number of unique values per column per model: #> $unique_values #>                    model location location_name target_end_date target_type #> 1: EuroCOVIDhub-ensemble        4             4              12           2 #> 2: EuroCOVIDhub-baseline        4             4              12           2 #> 3:  epiforecasts-EpiNow2        4             4              12           2 #> 4:       UMass-MechBayes        4             4              12           1 #>    forecast_date horizon prediction true_value #> 1:            11       3         13          2 #> 2:            11       3         20          2 #> 3:            11       3         13          2 #> 4:            11       3         10          2 #>  #> $messages #> [1] \"144 values for `true_value` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected.\" #> [2] \"144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected.\" #>"},{"path":"https://epiforecasts.io/scoringutils/reference/check_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether the desired metrics are available in scoringutils — check_metrics","title":"Check whether the desired metrics are available in scoringutils — check_metrics","text":"Helper function check whether desired metrics available. input NULL, metrics returned.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether the desired metrics are available in scoringutils — check_metrics","text":"","code":"check_metrics(metrics)"},{"path":"https://epiforecasts.io/scoringutils/reference/check_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether the desired metrics are available in scoringutils — check_metrics","text":"metrics character vector desired metrics","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether the desired metrics are available in scoringutils — check_metrics","text":"character vector metrics can used downstream computation","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_not_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Variable is not NULL — check_not_null","title":"Check Variable is not NULL — check_not_null","text":"Check whether certain variable NULL return name variable function call variable missing. function helper function called within functions","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_not_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Variable is not NULL — check_not_null","text":"","code":"check_not_null(...)"},{"path":"https://epiforecasts.io/scoringutils/reference/check_not_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Variable is not NULL — check_not_null","text":"... variables check","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_not_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Variable is not NULL — check_not_null","text":"function returns NULL, throws error variable missing.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Prediction Input For Lower-level Scoring Functions — check_predictions","title":"Check Prediction Input For Lower-level Scoring Functions — check_predictions","text":"Helper function check inputs lower-level score functions.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Prediction Input For Lower-level Scoring Functions — check_predictions","text":"","code":"check_predictions(   predictions,   true_values = NULL,   type = c(\"continuous\", \"integer\", \"binary\"),   class = c(\"vector\", \"matrix\") )"},{"path":"https://epiforecasts.io/scoringutils/reference/check_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Prediction Input For Lower-level Scoring Functions — check_predictions","text":"predictions object predictions. Depending whether class = vector class = \"matrix\" can either vector length n (corresponding length true_values) nxN matrix predictive samples, n (number rows) number data points N (number columns) number Monte Carlo samples true_values vector true observed values size n type character, one \"continuous\" (default), \"integer\" \"binary\" defines type forecast class character, either \"vector\" (default) \"matrix\" determines class input correspond ","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_summary_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input parameters for summarise_scores() — check_summary_params","title":"Check input parameters for summarise_scores() — check_summary_params","text":"helper function check input parameters score().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_summary_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input parameters for summarise_scores() — check_summary_params","text":"","code":"check_summary_params(scores, by, relative_skill, baseline, metric)"},{"path":"https://epiforecasts.io/scoringutils/reference/check_summary_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input parameters for summarise_scores() — check_summary_params","text":"scores data.table scores produced score(). character vector column names summarise scores . Default NULL, meaning summary takes place summarising quantiles (case quantile-based forecasts), one score per forecast defined unit single forecast (rather one score every quantile). relative_skill logical, whether compute relative performance models based pairwise comparisons. TRUE (default FALSE), column called 'model' must present input data. information computation relative skill, see pairwise_comparison(). Relative skill calculated aggregation level specified . baseline character string name model. baseline given, scaled relative skill respect baseline returned. default (NULL), relative skill scaled respect baseline model. metric character name metric relative skill shall computed. equal 'auto' (default), either interval score, crps brier score (depending available input data)","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_true_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Observed Value Input For Lower-level Scoring Functions — check_true_values","title":"Check Observed Value Input For Lower-level Scoring Functions — check_true_values","text":"Helper function check inputs lower-level score functions.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/check_true_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Observed Value Input For Lower-level Scoring Functions — check_true_values","text":"","code":"check_true_values(true_values, type = c(\"continuous\", \"integer\", \"binary\"))"},{"path":"https://epiforecasts.io/scoringutils/reference/check_true_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Observed Value Input For Lower-level Scoring Functions — check_true_values","text":"true_values vector true observed values size n type character, one \"continuous\" (default), \"integer\" \"binary\" defines type forecast","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/collapse_messages.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse several messages to one — collapse_messages","title":"Collapse several messages to one — collapse_messages","text":"Internal helper function facilitate generating messages warnings check_forecasts()","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/collapse_messages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse several messages to one — collapse_messages","text":"","code":"collapse_messages(type = \"messages\", messages)"},{"path":"https://epiforecasts.io/scoringutils/reference/collapse_messages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse several messages to one — collapse_messages","text":"type character, either \"messages\", \"warnings\" \"errors\" messages messages warnings collapse","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/collapse_messages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse several messages to one — collapse_messages","text":"string message warning","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/compare_two_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Two Models Based on Subset of Common Forecasts — compare_two_models","title":"Compare Two Models Based on Subset of Common Forecasts — compare_two_models","text":"function compares two models based subset forecasts models made prediction. gets called pairwise_comparison_one_group(), handles comparison multiple models single set forecasts (subsets forecasts distinguished). pairwise_comparison_one_group() turn gets called pairwise_comparison() can handle pairwise comparisons set forecasts multiple subsets, e.g. pairwise comparisons one set forecasts, done separately two different forecast targets.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/compare_two_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Two Models Based on Subset of Common Forecasts — compare_two_models","text":"","code":"compare_two_models(   scores,   name_model1,   name_model2,   metric,   one_sided = FALSE,   test_type = c(\"non_parametric\", \"permutation\"),   n_permutations = 999 )"},{"path":"https://epiforecasts.io/scoringutils/reference/compare_two_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Two Models Based on Subset of Common Forecasts — compare_two_models","text":"scores data.table scores produced score(). name_model1 character, name first model name_model2 character, name model compare metric character vector length one metric comparison . default \"auto\", meaning either \"interval_score\", \"crps\", \"brier_score\" selected available. See available_metrics() available metrics. one_sided Boolean, default FALSE, whether two conduct one-sided instead two-sided test determine significance pairwise comparison. test_type character, either \"non_parametric\" (default) \"permutation\". determines kind test shall conducted determine p-values. n_permutations numeric, number permutations permutation test. Default 999.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/compare_two_models.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare Two Models Based on Subset of Common Forecasts — compare_two_models","text":"Johannes Bracher, johannes.bracher@kit.edu Nikos Bosse nikosbosse@gmail.com","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation Between Metrics — correlation","title":"Correlation Between Metrics — correlation","text":"Calculate correlation different metrics data.frame scores produced score().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation Between Metrics — correlation","text":"","code":"correlation(scores, metrics = NULL)"},{"path":"https://epiforecasts.io/scoringutils/reference/correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation Between Metrics — correlation","text":"scores data.table scores produced score(). metrics character vector metrics show. set NULL (default), metrics present scores shown","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation Between Metrics — correlation","text":"data.table correlations different metrics","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation Between Metrics — correlation","text":"","code":"scores <- score(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. correlation(scores) #> Warning: There is a column called 'quantile' in the scores. Usually, you should call 'summarise_scores()' to summarise over quantiles and obtain one score per forecast before calculating correlations. You can ignore this warning if you know what you're doing. #>    interval_score dispersion underprediction overprediction coverage #> 1:           1.00       0.41            0.31           0.93    -0.23 #> 2:           0.41       1.00            0.10           0.27    -0.05 #> 3:           0.31       0.10            1.00          -0.03    -0.23 #> 4:           0.93       0.27           -0.03           1.00    -0.16 #> 5:          -0.23      -0.05           -0.23          -0.16     1.00 #> 6:          -0.23      -0.08           -0.20          -0.17     0.78 #> 7:           0.10       0.10           -0.32           0.21     0.03 #> 8:           0.97       0.47            0.30           0.89    -0.21 #>    coverage_deviation  bias ae_median             metric #> 1:              -0.23  0.10      0.97     interval_score #> 2:              -0.08  0.10      0.47         dispersion #> 3:              -0.20 -0.32      0.30    underprediction #> 4:              -0.17  0.21      0.89     overprediction #> 5:               0.78  0.03     -0.21           coverage #> 6:               1.00  0.04     -0.26 coverage_deviation #> 7:               0.04  1.00      0.10               bias #> 8:              -0.26  0.10      1.00          ae_median"},{"path":"https://epiforecasts.io/scoringutils/reference/crps_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranked Probability Score — crps_sample","title":"Ranked Probability Score — crps_sample","text":"Wrapper around crps_sample() function scoringRules package. Can used continuous well integer valued forecasts","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/crps_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranked Probability Score — crps_sample","text":"","code":"crps_sample(true_values, predictions)"},{"path":"https://epiforecasts.io/scoringutils/reference/crps_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranked Probability Score — crps_sample","text":"true_values vector true observed values size n predictions nxN matrix predictive samples, n (number rows) number data points N (number columns) number Monte Carlo samples. Alternatively, predictions can just vector size n.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/crps_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ranked Probability Score — crps_sample","text":"vector scoring values","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/crps_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ranked Probability Score — crps_sample","text":"Alexander Jordan, Fabian Krüger, Sebastian Lerch, Evaluating Probabilistic Forecasts scoringRules, https://arxiv.org/pdf/1709.04743.pdf","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/crps_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ranked Probability Score — crps_sample","text":"","code":"true_values <- rpois(30, lambda = 1:30) predictions <- replicate(200, rpois(n = 30, lambda = 1:30)) crps_sample(true_values, predictions) #>  [1] 0.227500 0.328825 2.083950 0.485425 2.723525 1.996775 2.583050 1.133050 #>  [9] 1.374750 0.676850 1.145075 1.741350 0.814275 3.881300 2.794525 3.287050 #> [17] 3.728550 1.674375 1.425075 2.048650 2.786325 4.635650 1.375575 1.396650 #> [25] 5.252275 4.493275 2.925525 3.417075 2.077450 3.051400"},{"path":"https://epiforecasts.io/scoringutils/reference/delete_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Columns From a Data.table — delete_columns","title":"Delete Columns From a Data.table — delete_columns","text":"take vector column names delete columns present data.table","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/delete_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Columns From a Data.table — delete_columns","text":"","code":"delete_columns(df, cols_to_delete, make_unique = FALSE)"},{"path":"https://epiforecasts.io/scoringutils/reference/delete_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete Columns From a Data.table — delete_columns","text":"df data.table data.frame columns shall deleted cols_to_delete character vector names columns deleted make_unique whether make data set unique removing columns","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/delete_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete Columns From a Data.table — delete_columns","text":"data.table","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/dss_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Dawid-Sebastiani Score — dss_sample","title":"Dawid-Sebastiani Score — dss_sample","text":"Wrapper around dss_sample() function scoringRules package.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/dss_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dawid-Sebastiani Score — dss_sample","text":"","code":"dss_sample(true_values, predictions)"},{"path":"https://epiforecasts.io/scoringutils/reference/dss_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dawid-Sebastiani Score — dss_sample","text":"true_values vector true observed values size n predictions nxN matrix predictive samples, n (number rows) number data points N (number columns) number Monte Carlo samples. Alternatively, predictions can just vector size n.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/dss_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dawid-Sebastiani Score — dss_sample","text":"vector scoring values","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/dss_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dawid-Sebastiani Score — dss_sample","text":"Alexander Jordan, Fabian Krüger, Sebastian Lerch, Evaluating Probabilistic Forecasts scoringRules, https://arxiv.org/pdf/1709.04743.pdf","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/dss_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dawid-Sebastiani Score — dss_sample","text":"","code":"true_values <- rpois(30, lambda = 1:30) predictions <- replicate(200, rpois(n = 30, lambda = 1:30)) dss_sample(true_values, predictions) #>  [1] 0.004987735 1.142716049 1.410783394 2.245656800 1.822191068 2.034284791 #>  [7] 3.404423443 2.549515615 3.885620154 3.197942079 2.838054773 2.469111053 #> [13] 4.171787703 2.884212425 4.292004405 3.349994776 3.110043923 3.586080269 #> [19] 3.505038440 3.287512972 2.940905141 6.064901801 4.222459757 3.226621016 #> [25] 3.184906821 5.720547273 4.412701636 3.126383872 5.354572949 3.513832186"},{"path":"https://epiforecasts.io/scoringutils/reference/example_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Forecast Example Data — example_binary","title":"Binary Forecast Example Data — example_binary","text":"data set binary predictions COVID-19 cases deaths constructed data submitted European Forecast Hub.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Forecast Example Data — example_binary","text":"","code":"example_binary"},{"path":"https://epiforecasts.io/scoringutils/reference/example_binary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Binary Forecast Example Data — example_binary","text":"data frame 346 rows 10 columns: location country prediction made location_name name country prediction made target_end_date date prediction made target_type target predicted (cases deaths) true_value true observed values forecast_date date prediction made model name model generated forecasts horizon forecast horizon weeks prediction predicted value","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_binary.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Binary Forecast Example Data — example_binary","text":"https://github.com/covid19-forecast-hub-europe/covid19-forecast-hub-europe/commit/a42867b1ea152c57e25b04f9faa26cfd4bfd8fa6/","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_binary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary Forecast Example Data — example_binary","text":"Predictions data set constructed based continuous example data looking number samples mean prediction. outcome constructed whether actually observed value mean prediction. understood sound statistical practice, rather practical way create example data set. data created using script create-example-data.R inst/ folder (top level folder compiled package).","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous Forecast Example Data — example_continuous","title":"Continuous Forecast Example Data — example_continuous","text":"data set continuous predictions COVID-19 cases deaths constructed data submitted European Forecast Hub.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous Forecast Example Data — example_continuous","text":"","code":"example_continuous"},{"path":"https://epiforecasts.io/scoringutils/reference/example_continuous.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Continuous Forecast Example Data — example_continuous","text":"data frame 13,429 rows 10 columns: location country prediction made target_end_date date prediction made target_type target predicted (cases deaths) true_value true observed values location_name name country prediction made forecast_date date prediction made model name model generated forecasts horizon forecast horizon weeks prediction predicted value sample id corresponding sample","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_continuous.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Continuous Forecast Example Data — example_continuous","text":"https://github.com/covid19-forecast-hub-europe/covid19-forecast-hub-europe/commit/a42867b1ea152c57e25b04f9faa26cfd4bfd8fa6/","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_continuous.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Continuous Forecast Example Data — example_continuous","text":"data created using script create-example-data.R inst/ folder (top level folder compiled package).","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Integer Forecast Example Data — example_integer","title":"Integer Forecast Example Data — example_integer","text":"data set integer predictions COVID-19 cases deaths constructed data submitted European Forecast Hub.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integer Forecast Example Data — example_integer","text":"","code":"example_integer"},{"path":"https://epiforecasts.io/scoringutils/reference/example_integer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Integer Forecast Example Data — example_integer","text":"data frame 13,429 rows 10 columns: location country prediction made target_end_date date prediction made target_type target predicted (cases deaths) true_value true observed values location_name name country prediction made forecast_date date prediction made model name model generated forecasts horizon forecast horizon weeks prediction predicted value sample id corresponding sample","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_integer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integer Forecast Example Data — example_integer","text":"data created using script create-example-data.R inst/ folder (top level folder compiled package).","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Point Forecast Example Data — example_point","title":"Point Forecast Example Data — example_point","text":"data set predictions COVID-19 cases deaths submitted European Forecast Hub. data set like quantile example data, median replaced point forecast.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Point Forecast Example Data — example_point","text":"","code":"example_point"},{"path":"https://epiforecasts.io/scoringutils/reference/example_point.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Point Forecast Example Data — example_point","text":"data frame location country prediction made target_end_date date prediction made target_type target predicted (cases deaths) true_value true observed values location_name name country prediction made forecast_date date prediction made quantile quantile corresponding prediction prediction predicted value model name model generated forecasts horizon forecast horizon weeks","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_point.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Point Forecast Example Data — example_point","text":"https://github.com/covid19-forecast-hub-europe/covid19-forecast-hub-europe/commit/a42867b1ea152c57e25b04f9faa26cfd4bfd8fa6/","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_point.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Point Forecast Example Data — example_point","text":"data created using script create-example-data.R inst/ folder (top level folder compiled package).","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile Example Data — example_quantile","title":"Quantile Example Data — example_quantile","text":"data set predictions COVID-19 cases deaths submitted European Forecast Hub.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile Example Data — example_quantile","text":"","code":"example_quantile"},{"path":"https://epiforecasts.io/scoringutils/reference/example_quantile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Quantile Example Data — example_quantile","text":"data frame location country prediction made target_end_date date prediction made target_type target predicted (cases deaths) true_value true observed values location_name name country prediction made forecast_date date prediction made quantile quantile corresponding prediction prediction predicted value model name model generated forecasts horizon forecast horizon weeks","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_quantile.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Quantile Example Data — example_quantile","text":"https://github.com/covid19-forecast-hub-europe/covid19-forecast-hub-europe/commit/a42867b1ea152c57e25b04f9faa26cfd4bfd8fa6/","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_quantile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quantile Example Data — example_quantile","text":"data created using script create-example-data.R inst/ folder (top level folder compiled package).","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_quantile_forecasts_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile Example Data - Forecasts only — example_quantile_forecasts_only","title":"Quantile Example Data - Forecasts only — example_quantile_forecasts_only","text":"data set quantile predictions COVID-19 cases deaths submitted European Forecast Hub.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_quantile_forecasts_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile Example Data - Forecasts only — example_quantile_forecasts_only","text":"","code":"example_quantile_forecasts_only"},{"path":"https://epiforecasts.io/scoringutils/reference/example_quantile_forecasts_only.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Quantile Example Data - Forecasts only — example_quantile_forecasts_only","text":"data frame 7,581 rows 9 columns: location country prediction made target_end_date date prediction made target_type target predicted (cases deaths) forecast_date date prediction made quantile quantile corresponding prediction prediction predicted value model name model generated forecasts horizon forecast horizon weeks","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_quantile_forecasts_only.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Quantile Example Data - Forecasts only — example_quantile_forecasts_only","text":"https://github.com/covid19-forecast-hub-europe/covid19-forecast-hub-europe/commit/a42867b1ea152c57e25b04f9faa26cfd4bfd8fa6/","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_quantile_forecasts_only.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quantile Example Data - Forecasts only — example_quantile_forecasts_only","text":"data created using script create-example-data.R inst/ folder (top level folder compiled package).","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_truth_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Truth data only — example_truth_only","title":"Truth data only — example_truth_only","text":"data set truth values COVID-19 cases deaths submitted European Forecast Hub.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_truth_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truth data only — example_truth_only","text":"","code":"example_truth_only"},{"path":"https://epiforecasts.io/scoringutils/reference/example_truth_only.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Truth data only — example_truth_only","text":"data frame 140 rows 5 columns: location country prediction made target_end_date date prediction made target_type target predicted (cases deaths) true_value true observed values location_name name country prediction made","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_truth_only.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Truth data only — example_truth_only","text":"https://github.com/covid19-forecast-hub-europe/covid19-forecast-hub-europe/commit/a42867b1ea152c57e25b04f9faa26cfd4bfd8fa6/","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/example_truth_only.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Truth data only — example_truth_only","text":"data created using script create-example-data.R inst/ folder (top level folder compiled package).","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/find_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Find duplicate forecasts — find_duplicates","title":"Find duplicate forecasts — find_duplicates","text":"Helper function identify duplicate forecasts, .e. instances one forecast prediction target.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/find_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find duplicate forecasts — find_duplicates","text":"","code":"find_duplicates(data)"},{"path":"https://epiforecasts.io/scoringutils/reference/find_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find duplicate forecasts — find_duplicates","text":"data data.frame used score()","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/find_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find duplicate forecasts — find_duplicates","text":"data.frame rows duplicate forecast found","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/find_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find duplicate forecasts — find_duplicates","text":"","code":"example <- rbind(example_quantile, example_quantile[1000:1010]) find_duplicates(example) #>     location target_end_date target_type true_value location_name forecast_date #>  1:       DE      2021-05-22      Deaths       1285       Germany    2021-05-17 #>  2:       DE      2021-05-22      Deaths       1285       Germany    2021-05-17 #>  3:       DE      2021-05-22      Deaths       1285       Germany    2021-05-17 #>  4:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #>  5:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #>  6:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #>  7:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #>  8:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #>  9:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #> 10:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #> 11:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #> 12:       DE      2021-05-22      Deaths       1285       Germany    2021-05-17 #> 13:       DE      2021-05-22      Deaths       1285       Germany    2021-05-17 #> 14:       DE      2021-05-22      Deaths       1285       Germany    2021-05-17 #> 15:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #> 16:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #> 17:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #> 18:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #> 19:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #> 20:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #> 21:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #> 22:       DE      2021-05-29       Cases      31653       Germany    2021-05-10 #>     location target_end_date target_type true_value location_name forecast_date #>     quantile prediction                 model horizon #>  1:    0.950       1464  epiforecasts-EpiNow2       1 #>  2:    0.975       1642  epiforecasts-EpiNow2       1 #>  3:    0.990       1951  epiforecasts-EpiNow2       1 #>  4:    0.010      28999 EuroCOVIDhub-ensemble       3 #>  5:    0.025      32612 EuroCOVIDhub-ensemble       3 #>  6:    0.050      36068 EuroCOVIDhub-ensemble       3 #>  7:    0.100      41484 EuroCOVIDhub-ensemble       3 #>  8:    0.150      47110 EuroCOVIDhub-ensemble       3 #>  9:    0.200      50929 EuroCOVIDhub-ensemble       3 #> 10:    0.250      54561 EuroCOVIDhub-ensemble       3 #> 11:    0.300      57739 EuroCOVIDhub-ensemble       3 #> 12:    0.950       1464  epiforecasts-EpiNow2       1 #> 13:    0.975       1642  epiforecasts-EpiNow2       1 #> 14:    0.990       1951  epiforecasts-EpiNow2       1 #> 15:    0.010      28999 EuroCOVIDhub-ensemble       3 #> 16:    0.025      32612 EuroCOVIDhub-ensemble       3 #> 17:    0.050      36068 EuroCOVIDhub-ensemble       3 #> 18:    0.100      41484 EuroCOVIDhub-ensemble       3 #> 19:    0.150      47110 EuroCOVIDhub-ensemble       3 #> 20:    0.200      50929 EuroCOVIDhub-ensemble       3 #> 21:    0.250      54561 EuroCOVIDhub-ensemble       3 #> 22:    0.300      57739 EuroCOVIDhub-ensemble       3 #>     quantile prediction                 model horizon"},{"path":"https://epiforecasts.io/scoringutils/reference/geom_mean_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Geometric Mean — geom_mean_helper","title":"Calculate Geometric Mean — geom_mean_helper","text":"Calculate Geometric Mean","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/geom_mean_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Geometric Mean — geom_mean_helper","text":"","code":"geom_mean_helper(x)"},{"path":"https://epiforecasts.io/scoringutils/reference/geom_mean_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Geometric Mean — geom_mean_helper","text":"x numeric vector values calculate geometric mean","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/geom_mean_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Geometric Mean — geom_mean_helper","text":"geometric mean values x","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/get_forecast_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unit of a single forecast — get_forecast_unit","title":"Get unit of a single forecast — get_forecast_unit","text":"Helper function get unit single forecast, .e. column names define single forecast made ","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/get_forecast_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unit of a single forecast — get_forecast_unit","text":"","code":"get_forecast_unit(data)"},{"path":"https://epiforecasts.io/scoringutils/reference/get_forecast_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unit of a single forecast — get_forecast_unit","text":"data data.frame predictions format required score().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/get_forecast_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unit of a single forecast — get_forecast_unit","text":"character vector column names define unit single forecast","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/get_prediction_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get prediction type of a forecast — get_prediction_type","title":"Get prediction type of a forecast — get_prediction_type","text":"Internal helper function get prediction type forecast. inferred based properties values prediction column.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/get_prediction_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get prediction type of a forecast — get_prediction_type","text":"","code":"get_prediction_type(data)"},{"path":"https://epiforecasts.io/scoringutils/reference/get_prediction_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get prediction type of a forecast — get_prediction_type","text":"data data.frame predictions format required score().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/get_prediction_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get prediction type of a forecast — get_prediction_type","text":"Character vector length one either \"quantile\", \"integer\", \"continuous\".","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/get_target_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get type of the target true values of a forecast — get_target_type","title":"Get type of the target true values of a forecast — get_target_type","text":"Internal helper function get type target true values forecast. inferred based columns present data.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/get_target_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get type of the target true values of a forecast — get_target_type","text":"","code":"get_target_type(data)"},{"path":"https://epiforecasts.io/scoringutils/reference/get_target_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get type of the target true values of a forecast — get_target_type","text":"data data.frame predictions format required score().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/get_target_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get type of the target true values of a forecast — get_target_type","text":"Character vector length one either \"binary\", \"integer\", \"continuous\"","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/infer_rel_skill_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer metric for pairwise comparisons — infer_rel_skill_metric","title":"Infer metric for pairwise comparisons — infer_rel_skill_metric","text":"Helper function infer metric pairwise comparisons shall made. function simply checks names available columns chooses widely used metric.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/infer_rel_skill_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer metric for pairwise comparisons — infer_rel_skill_metric","text":"","code":"infer_rel_skill_metric(scores)"},{"path":"https://epiforecasts.io/scoringutils/reference/infer_rel_skill_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer metric for pairwise comparisons — infer_rel_skill_metric","text":"scores data.table scores produced score().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/interval_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Interval Score — interval_score","title":"Interval Score — interval_score","text":"Proper Scoring Rule score quantile predictions, following Gneiting Raftery (2007). Smaller values better. score computed $$ \\text{score} = (\\text{upper} - \\text{lower}) + \\frac{2}{\\alpha}(\\text{lower}  - \\text{true_value}) * \\mathbf{1}(\\text{true_value} < \\text{lower}) + \\frac{2}{\\alpha}(\\text{true_value} - \\text{upper}) * \\mathbf{1}(\\text{true_value} > \\text{upper}) $$ \\(\\mathbf{1}()\\) indicator function indicates much outside prediction interval. \\(\\alpha\\) decimal value indicates much outside prediction interval. improve usability, user asked provide interval range percentage terms, .e. interval_range = 90 (percent) 90 percent prediction interval. Correspondingly, user provide 5% 95% quantiles (corresponding alpha 0.1). specific distribution assumed, range symmetric (.e use 0.1 quantile lower bound 0.7 quantile upper). Non-symmetric quantiles can scored using function quantile_score().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/interval_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interval Score — interval_score","text":"","code":"interval_score(   true_values,   lower,   upper,   interval_range,   weigh = TRUE,   separate_results = FALSE )"},{"path":"https://epiforecasts.io/scoringutils/reference/interval_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interval Score — interval_score","text":"true_values vector true observed values size n lower vector size n prediction lower quantile given range upper vector size n prediction upper quantile given range interval_range range prediction intervals. .e. forecasting 0.05 0.95 quantile, interval_range 90. Can either single number vector size n, range changes different forecasts scored. corresponds (100-alpha)/100 Gneiting Raftery (2007). Internally, range transformed alpha. weigh TRUE, weigh score alpha / 2, can averaged interval score , limit, corresponds CRPS. Alpha decimal value  represents much outside central prediction interval (e.g. 90 percent central prediction interval, alpha 0.1) Default: TRUE. separate_results TRUE (default FALSE), separate parts interval score (dispersion penalty, penalties - -prediction get returned separate elements list). want data.frame instead, simply call .data.frame() output.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/interval_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interval Score — interval_score","text":"vector scoring values, list separate entries separate_results TRUE.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/interval_score.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interval Score — interval_score","text":"Strictly Proper Scoring Rules, Prediction,Estimation, Tilmann Gneiting Adrian E. Raftery, 2007, Journal American Statistical Association, Volume 102, 2007 - Issue 477 Evaluating epidemic forecasts interval format, Johannes Bracher, Evan L. Ray, Tilmann Gneiting Nicholas G. Reich, https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008618 # nolint","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/interval_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interval Score — interval_score","text":"","code":"true_values <- rnorm(30, mean = 1:30) interval_range <- rep(90, 30) alpha <- (100 - interval_range) / 100 lower <- qnorm(alpha / 2, rnorm(30, mean = 1:30)) upper <- qnorm((1 - alpha / 2), rnorm(30, mean = 1:30))  interval_score(   true_values = true_values,   lower = lower,   upper = upper,   interval_range = interval_range ) #>  [1] 0.15426596 0.11957124 0.22751442 0.13955664 0.09473378 0.26987053 #>  [7] 0.16666535 0.23546678 0.13244129 0.08601647 0.16082722 0.21635417 #> [13] 0.46871512 0.66045363 0.14081674 0.12792651 0.32597914 0.22374350 #> [19] 0.16332508 0.14424800 0.19605698 0.30913928 0.17514225 0.27684390 #> [25] 0.18493222 2.20842480 0.86854364 0.16683757 0.12012688 0.13055493  # example with missing values and separate results interval_score(   true_values = c(true_values, NA),   lower = c(lower, NA),   upper = c(NA, upper),   separate_results = TRUE,   interval_range = 90 ) #> $interval_score #>  [1]         NA 0.09212009 0.21929659 0.06106620 1.35700478 0.21862664 #>  [7] 0.15171067 0.15901893 0.14592647 0.27230490 0.15725693 1.76098842 #> [13] 0.47740078 0.53527919 0.13619930 0.04429815 0.16444245 0.33277620 #> [19] 0.08943471 0.49332742 1.47307698 0.28706529 0.15405124 0.15631843 #> [25] 0.25307644 2.26110718 2.59823109 0.22679484 0.69717080 0.49347557 #> [31]         NA #>  #> $dispersion #>  [1]          NA  0.09212009  0.21929659  0.06106620 -0.01600067  0.09657725 #>  [7]  0.15171067  0.15901893  0.14592647  0.01862386  0.15725693  0.11141461 #> [13]  0.09977652  0.01782040  0.13619930  0.04429815  0.16444245  0.33277620 #> [19]  0.08943471  0.11213755  0.05561511  0.28706529  0.15405124  0.15631843 #> [25]  0.25307644  0.01593889 -0.13674900  0.08904513  0.07215860  0.07928328 #> [31]          NA #>  #> $underprediction #>  [1]        NA 0.0000000 0.0000000 0.0000000 1.3730054 0.0000000 0.0000000 #>  [8] 0.0000000 0.0000000 0.2536810 0.0000000 1.6495738 0.0000000 0.0000000 #> [15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.3811899 1.4174619 #> [22] 0.0000000 0.0000000 0.0000000 0.0000000 2.2451683 2.3197138 0.1377497 #> [29] 0.6250122 0.4141923        NA #>  #> $overprediction #>  [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.1220494 0.0000000 #>  [8] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.3776243 0.5174588 #> [15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [22] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.4152663 0.0000000 #> [29] 0.0000000 0.0000000        NA #>"},{"path":"https://epiforecasts.io/scoringutils/reference/logs_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Score for Binary outcomes — logs_binary","title":"Log Score for Binary outcomes — logs_binary","text":"Computes Log Score probabilistic forecasts binary outcomes.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/logs_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Score for Binary outcomes — logs_binary","text":"","code":"logs_binary(true_values, predictions)"},{"path":"https://epiforecasts.io/scoringutils/reference/logs_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Score for Binary outcomes — logs_binary","text":"true_values vector true observed values size n values equal either 0 1 predictions vector predicted probability true_value = 1.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/logs_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Score for Binary outcomes — logs_binary","text":"numeric value Log Score, .e. mean squared error given probability forecasts","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/logs_binary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Score for Binary outcomes — logs_binary","text":"Log Score proper score rule suited assessing accuracy probabilistic binary predictions. outcomes can either 0 1, predictions must probability true outcome 1. Log Score computed negative logarithm probability assigned true outcome. Reporting negative logarithm means smaller values better.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/logs_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Score for Binary outcomes — logs_binary","text":"","code":"true_values <- sample(c(0, 1), size = 30, replace = TRUE) predictions <- runif(n = 30, min = 0, max = 1) logs_binary(true_values, predictions) #>  [1] 0.12824577 1.22984768 1.07862236 0.44786423 0.62170856 0.53102377 #>  [7] 0.07712402 0.95693959 0.04173981 1.42876303 0.68282816 1.20485876 #> [13] 0.23761952 2.77547660 0.54512751 0.07101642 0.83726763 0.77990754 #> [19] 0.19823681 1.79860650 0.30603820 2.12506057 8.03948969 0.61644029 #> [25] 2.23046691 0.09766743 0.43586415 0.73385144 1.38801448 2.17079715"},{"path":"https://epiforecasts.io/scoringutils/reference/logs_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithmic score — logs_sample","title":"Logarithmic score — logs_sample","text":"Wrapper around logs_sample() function scoringRules package. Used score continuous predictions. Log Score theory also applicable integer forecasts, problem lies implementation: Log Score needs kernel density estimation, well defined integer-valued Monte Carlo Samples. Log Score can used specific integer valued probability distributions. See scoringRules package details.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/logs_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithmic score — logs_sample","text":"","code":"logs_sample(true_values, predictions)"},{"path":"https://epiforecasts.io/scoringutils/reference/logs_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithmic score — logs_sample","text":"true_values vector true observed values size n predictions nxN matrix predictive samples, n (number rows) number data points N (number columns) number Monte Carlo samples. Alternatively, predictions can just vector size n.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/logs_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithmic score — logs_sample","text":"vector scoring values","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/logs_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Logarithmic score — logs_sample","text":"Alexander Jordan, Fabian Krüger, Sebastian Lerch, Evaluating Probabilistic Forecasts scoringRules, https://arxiv.org/pdf/1709.04743.pdf","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/logs_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logarithmic score — logs_sample","text":"","code":"true_values <- rpois(30, lambda = 1:30) predictions <- replicate(200, rpois(n = 30, lambda = 1:30)) logs_sample(true_values, predictions) #>  [1] 0.400057 1.317661 2.748613 3.148610 1.705471 2.505777 2.192234 2.004106 #>  [9] 2.176847 4.339937 2.447824 2.368301 2.744555 2.623685 2.448995 2.533982 #> [17] 3.251531 2.545732 2.784464 2.926318 2.393244 2.448566 2.704427 3.464916 #> [25] 2.571286 2.717542 2.574135 2.632324 2.939504 2.676011"},{"path":"https://epiforecasts.io/scoringutils/reference/mad_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine dispersion of a probabilistic forecast — mad_sample","title":"Determine dispersion of a probabilistic forecast — mad_sample","text":"Determine dispersion probabilistic forecast","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/mad_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine dispersion of a probabilistic forecast — mad_sample","text":"","code":"mad_sample(predictions)"},{"path":"https://epiforecasts.io/scoringutils/reference/mad_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine dispersion of a probabilistic forecast — mad_sample","text":"predictions nxN matrix predictive samples, n (number rows) number data points N (number columns) number Monte Carlo samples. Alternatively, predictions can just vector size n.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/mad_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine dispersion of a probabilistic forecast — mad_sample","text":"vector dispersion values","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/mad_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine dispersion of a probabilistic forecast — mad_sample","text":"Sharpness ability model generate predictions within narrow range dispersion lack thereof. data-independent measure, purely feature forecasts . Dispersion predictive samples corresponding one single true value measured normalised median absolute deviation median predictive samples. details, see mad() explanations given Funk et al. (2019)","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/mad_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determine dispersion of a probabilistic forecast — mad_sample","text":"Funk S, Camacho , Kucharski AJ, Lowe R, Eggo RM, Edmunds WJ (2019) Assessing performance real-time epidemic forecasts: case study Ebola Western Area region Sierra Leone, 2014-15. PLoS Comput Biol 15(2): e1006785. doi:10.1371/journal.pcbi.1006785","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/mad_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine dispersion of a probabilistic forecast — mad_sample","text":"","code":"predictions <- replicate(200, rpois(n = 30, lambda = 1:30)) mad_sample(predictions) #>  [1] 1.4826 1.4826 1.4826 1.4826 1.4826 2.9652 2.9652 2.9652 2.9652 2.9652 #> [11] 2.9652 2.9652 2.9652 4.4478 2.9652 4.4478 4.4478 4.4478 4.4478 4.4478 #> [21] 5.1891 4.4478 5.9304 4.4478 4.4478 5.9304 4.4478 4.4478 5.1891 5.9304"},{"path":"https://epiforecasts.io/scoringutils/reference/merge_pred_and_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Forecast Data And Observations — merge_pred_and_obs","title":"Merge Forecast Data And Observations — merge_pred_and_obs","text":"function less provides wrapper around merge aims handle merging well additional columns present one data sets. doubt, probably merge data sets manually.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/merge_pred_and_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Forecast Data And Observations — merge_pred_and_obs","text":"","code":"merge_pred_and_obs(   forecasts,   observations,   join = c(\"left\", \"full\", \"right\"),   by = NULL )"},{"path":"https://epiforecasts.io/scoringutils/reference/merge_pred_and_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Forecast Data And Observations — merge_pred_and_obs","text":"forecasts data.frame forecast data (can passed score()). observations data.frame observations join character, one c(\"left\", \"full\", \"right\"). Determines type join. Usually, left join appropriate, sometimes may want full join keep dates forecast, ground truth data. character vector denotes columns merge. value column observations removed.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/merge_pred_and_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Forecast Data And Observations — merge_pred_and_obs","text":"data.frame forecasts observations","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/merge_pred_and_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Forecast Data And Observations — merge_pred_and_obs","text":"","code":"forecasts <- example_quantile_forecasts_only observations <- example_truth_only merge_pred_and_obs(forecasts, observations) #>        location target_end_date target_type true_value location_name #>     1:       DE      2021-01-02       Cases     127300       Germany #>     2:       DE      2021-01-02      Deaths       4534       Germany #>     3:       DE      2021-01-09       Cases     154922       Germany #>     4:       DE      2021-01-09      Deaths       6117       Germany #>     5:       DE      2021-01-16       Cases     110183       Germany #>    ---                                                               #> 20541:       IT      2021-07-24      Deaths         78         Italy #> 20542:       IT      2021-07-24      Deaths         78         Italy #> 20543:       IT      2021-07-24      Deaths         78         Italy #> 20544:       IT      2021-07-24      Deaths         78         Italy #> 20545:       IT      2021-07-24      Deaths         78         Italy #>        forecast_date quantile prediction                model horizon #>     1:          <NA>       NA         NA                 <NA>      NA #>     2:          <NA>       NA         NA                 <NA>      NA #>     3:          <NA>       NA         NA                 <NA>      NA #>     4:          <NA>       NA         NA                 <NA>      NA #>     5:          <NA>       NA         NA                 <NA>      NA #>    ---                                                                #> 20541:    2021-07-12    0.850        352 epiforecasts-EpiNow2       2 #> 20542:    2021-07-12    0.900        397 epiforecasts-EpiNow2       2 #> 20543:    2021-07-12    0.950        499 epiforecasts-EpiNow2       2 #> 20544:    2021-07-12    0.975        611 epiforecasts-EpiNow2       2 #> 20545:    2021-07-12    0.990        719 epiforecasts-EpiNow2       2"},{"path":"https://epiforecasts.io/scoringutils/reference/metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary information for selected metrics — metrics","title":"Summary information for selected metrics — metrics","text":"data set summary information selected metrics implemented scoringutils","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary information for selected metrics — metrics","text":"","code":"metrics"},{"path":"https://epiforecasts.io/scoringutils/reference/metrics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summary information for selected metrics — metrics","text":"object class data.table (inherits data.frame) 22 rows 8 columns.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary information for selected metrics — metrics","text":"data created using script create-metric-tables.R inst/ folder (top level folder compiled package).","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pairwise_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Do Pairwise Comparisons of Scores — pairwise_comparison","title":"Do Pairwise Comparisons of Scores — pairwise_comparison","text":"Make pairwise comparisons models. code pairwise comparisons inspired implementation Johannes Bracher. implementation permutation test follows function permutationTest surveillance package Michael Höhle, Andrea Riebler Michaela Paul.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pairwise_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do Pairwise Comparisons of Scores — pairwise_comparison","text":"","code":"pairwise_comparison(   scores,   by = c(\"model\"),   metric = \"auto\",   baseline = NULL,   ... )"},{"path":"https://epiforecasts.io/scoringutils/reference/pairwise_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do Pairwise Comparisons of Scores — pairwise_comparison","text":"scores data.table scores produced score(). character vector names columns present input data.frame. determines pairwise comparisons computed. get relative skill score every grouping level determined . , example, = c(\"model\", \"location\"). get separate relative skill score every model every location. Internally, data.frame split according (removing \"model\" splitting) pairwise comparisons computed separately split data.frames. metric character vector length one metric comparison . default \"auto\", meaning either \"interval_score\", \"crps\", \"brier_score\" selected available. See available_metrics() available metrics. baseline character vector length one denotes baseline model compare models. ... additional arguments comparison two models. See compare_two_models() information.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pairwise_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do Pairwise Comparisons of Scores — pairwise_comparison","text":"ggplot2 object coloured table summarised scores","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pairwise_comparison.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Do Pairwise Comparisons of Scores — pairwise_comparison","text":"Nikos Bosse nikosbosse@gmail.com Johannes Bracher, johannes.bracher@kit.edu","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pairwise_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Do Pairwise Comparisons of Scores — pairwise_comparison","text":"","code":"df <- data.frame(   model = rep(c(\"model1\", \"model2\", \"model3\"), each = 10),   date = as.Date(\"2020-01-01\") + rep(1:5, each = 2),   location = c(1, 2),   interval_score = (abs(rnorm(30))),   ae_median = (abs(rnorm(30))) )  res <- pairwise_comparison(df,   baseline = \"model1\" ) plot_pairwise_comparison(res)   eval <- score(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. pairwise_comparison(eval, by = c(\"model\")) #>                     model       compare_against mean_scores_ratio         pval #>  1: EuroCOVIDhub-baseline  epiforecasts-EpiNow2         1.3703452 9.164893e-18 #>  2: EuroCOVIDhub-baseline EuroCOVIDhub-ensemble         1.5925819 2.608666e-32 #>  3: EuroCOVIDhub-baseline       UMass-MechBayes         3.0275019 2.627464e-20 #>  4: EuroCOVIDhub-baseline EuroCOVIDhub-baseline         1.0000000 1.000000e+00 #>  5: EuroCOVIDhub-ensemble       UMass-MechBayes         0.7867229 1.244731e-04 #>  6: EuroCOVIDhub-ensemble  epiforecasts-EpiNow2         0.8606607 1.881520e-02 #>  7: EuroCOVIDhub-ensemble EuroCOVIDhub-baseline         0.6279112 2.608666e-32 #>  8: EuroCOVIDhub-ensemble EuroCOVIDhub-ensemble         1.0000000 1.000000e+00 #>  9:       UMass-MechBayes EuroCOVIDhub-ensemble         1.2710955 1.244731e-04 #> 10:       UMass-MechBayes  epiforecasts-EpiNow2         0.7439673 7.253878e-03 #> 11:       UMass-MechBayes EuroCOVIDhub-baseline         0.3303053 2.627464e-20 #> 12:       UMass-MechBayes       UMass-MechBayes         1.0000000 1.000000e+00 #> 13:  epiforecasts-EpiNow2       UMass-MechBayes         1.3441452 7.253878e-03 #> 14:  epiforecasts-EpiNow2 EuroCOVIDhub-ensemble         1.1618981 1.881520e-02 #> 15:  epiforecasts-EpiNow2 EuroCOVIDhub-baseline         0.7297431 9.164893e-18 #> 16:  epiforecasts-EpiNow2  epiforecasts-EpiNow2         1.0000000 1.000000e+00 #>         adj_pval relative_skill scaled_rel_skill #>  1: 3.665957e-17      1.6032604               NA #>  2: 1.565200e-31      1.6032604               NA #>  3: 1.313732e-19      1.6032604               NA #>  4: 1.000000e+00      1.6032604               NA #>  5: 3.734192e-04      0.8074916               NA #>  6: 1.881520e-02      0.8074916               NA #>  7: 1.565200e-31      0.8074916               NA #>  8: 1.000000e+00      0.8074916               NA #>  9: 3.734192e-04      0.7475873               NA #> 10: 1.450776e-02      0.7475873               NA #> 11: 1.313732e-19      0.7475873               NA #> 12: 1.000000e+00      0.7475873               NA #> 13: 1.450776e-02      1.0332277               NA #> 14: 1.881520e-02      1.0332277               NA #> 15: 3.665957e-17      1.0332277               NA #> 16: 1.000000e+00      1.0332277               NA"},{"path":"https://epiforecasts.io/scoringutils/reference/pairwise_comparison_one_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Do Pairwise Comparison for one Set of Forecasts — pairwise_comparison_one_group","title":"Do Pairwise Comparison for one Set of Forecasts — pairwise_comparison_one_group","text":"function pairwise comparison one set forecasts, multiple models involved. gets called pairwise_comparison(). pairwise_comparison() splits data arbitrary subgroups specified user (e.g. pairwise comparison done separately different forecast targets) actual pairwise comparison subgroup managed pairwise_comparison_one_group(). order actually comparison two models subset common forecasts calls compare_two_models().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pairwise_comparison_one_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do Pairwise Comparison for one Set of Forecasts — pairwise_comparison_one_group","text":"","code":"pairwise_comparison_one_group(scores, metric, baseline, by, ...)"},{"path":"https://epiforecasts.io/scoringutils/reference/pairwise_comparison_one_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do Pairwise Comparison for one Set of Forecasts — pairwise_comparison_one_group","text":"scores data.table scores produced score(). metric character vector length one metric comparison . default \"auto\", meaning either \"interval_score\", \"crps\", \"brier_score\" selected available. See available_metrics() available metrics. baseline character vector length one denotes baseline model compare models. character vector names columns present input data.frame. determines pairwise comparisons computed. get relative skill score every grouping level determined . , example, = c(\"model\", \"location\"). get separate relative skill score every model every location. Internally, data.frame split according (removing \"model\" splitting) pairwise comparisons computed separately split data.frames. ... additional arguments comparison two models. See compare_two_models() information.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/permutation_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple permutation test — permutation_test","title":"Simple permutation test — permutation_test","text":"#' implementation permutation test follows function permutationTest surveillance package Michael Höhle, Andrea Riebler Michaela Paul.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/permutation_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple permutation test — permutation_test","text":"","code":"permutation_test(   scores1,   scores2,   n_permutation = 999,   one_sided = FALSE,   comparison_mode = c(\"difference\", \"ratio\") )"},{"path":"https://epiforecasts.io/scoringutils/reference/permutation_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple permutation test — permutation_test","text":"p-value permutation test","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pit.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability Integral Transformation (data.frame Format) — pit","title":"Probability Integral Transformation (data.frame Format) — pit","text":"Wrapper around pit() use data.frames","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability Integral Transformation (data.frame Format) — pit","text":"","code":"pit(data, by, n_replicates = 100)"},{"path":"https://epiforecasts.io/scoringutils/reference/pit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability Integral Transformation (data.frame Format) — pit","text":"data data.frame following columns: true_value, prediction, sample. Character vector columns according PIT values shall grouped. e.g. columns 'model' 'location' data want PIT histogram every model location, specify = c(\"model\", \"location\"). n_replicates number draws randomised PIT integer predictions.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability Integral Transformation (data.frame Format) — pit","text":"data.table PIT values according grouping specified ","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probability Integral Transformation (data.frame Format) — pit","text":"see pit()","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Probability Integral Transformation (data.frame Format) — pit","text":"Sebastian Funk, Anton Camacho, Adam J. Kucharski, Rachel Lowe, Rosalind M. Eggo, W. John Edmunds (2019) Assessing performance real-time epidemic forecasts: case study Ebola Western Area region Sierra Leone, 2014-15, doi:10.1371/journal.pcbi.1006785","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability Integral Transformation (data.frame Format) — pit","text":"","code":"result <- pit(example_continuous, by = \"model\") #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. plot_pit(result)   # example with quantile data result <- pit(example_quantile, by = \"model\") #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. plot_pit(result)"},{"path":"https://epiforecasts.io/scoringutils/reference/pit_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability Integral Transformation (sample-based version) — pit_sample","title":"Probability Integral Transformation (sample-based version) — pit_sample","text":"Uses Probability Integral Transformation (PIT) (randomised PIT integer forecasts) assess calibration predictive Monte Carlo samples. Returns p-values resulting Anderson-Darling test uniformity (randomised) PIT well PIT histogram specified.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pit_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability Integral Transformation (sample-based version) — pit_sample","text":"","code":"pit_sample(true_values, predictions, n_replicates = 100)"},{"path":"https://epiforecasts.io/scoringutils/reference/pit_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability Integral Transformation (sample-based version) — pit_sample","text":"true_values vector true observed values size n predictions nxN matrix predictive samples, n (number rows) number data points N (number columns) number Monte Carlo samples. Alternatively, predictions can just vector size n. n_replicates number draws randomised PIT integer predictions.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pit_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability Integral Transformation (sample-based version) — pit_sample","text":"vector PIT-values. continuous forecasts, vector correspond length true_values. integer forecasts, randomised PIT returned length length(true_values) * n_replicates","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pit_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probability Integral Transformation (sample-based version) — pit_sample","text":"Calibration reliability forecasts ability model correctly identify uncertainty making predictions. model perfect calibration, observed data time point look came predictive probability distribution time. Equivalently, one can inspect probability integral transform predictive distribution time t, $$ u_t = F_t (x_t) $$ \\(x_t\\) observed data point time \\(t t_1, …, t_n\\), n number forecasts, \\(F_t\\) (continuous) predictive cumulative probability distribution time t. true probability distribution outcomes time t \\(G_t\\) forecasts \\(F_t\\) said ideal \\(F_t = G_t\\) times t. case, probabilities \\(u_t\\) distributed uniformly. case discrete outcomes incidence counts, PIT longer uniform even forecasts ideal. case randomised PIT can used instead: $$ u_t = P_t(k_t) + v * (P_t(k_t) - P_t(k_t - 1) ) $$ \\(k_t\\) observed count, \\(P_t(x)\\) predictive cumulative probability observing incidence k time t, \\(P_t (-1) = 0\\) definition v standard uniform independent k. \\(P_t\\) true cumulative probability distribution, \\(u_t\\) standard uniform. function checks whether integer continuous forecasts provided. applies (randomised) probability integral tests values \\(u_t\\) uniformity using Anderson-Darling test. rule thumb, evidence suggest forecasting model miscalibrated p-value found greater threshold p >= 0.1, evidence miscalibrated 0.01 < p < 0.1, good evidence miscalibrated p <= 0.01. However, AD-p-values may overly strict actual usefulness may questionable. context noted, though, uniformity PIT necessary sufficient condition calibration.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/pit_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Probability Integral Transformation (sample-based version) — pit_sample","text":"Sebastian Funk, Anton Camacho, Adam J. Kucharski, Rachel Lowe, Rosalind M. Eggo, W. John Edmunds (2019) Assessing performance real-time epidemic forecasts: case study Ebola Western Area region Sierra Leone, 2014-15, doi:10.1371/journal.pcbi.1006785","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/reference/pit_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability Integral Transformation (sample-based version) — pit_sample","text":"","code":"## continuous predictions true_values <- rnorm(30, mean = 1:30) predictions <- replicate(200, rnorm(n = 30, mean = 1:30)) pit <- pit_sample(true_values, predictions) plot_pit(pit)   ## integer predictions true_values <- rpois(100, lambda = 1:100) predictions <- replicate(5000, rpois(n = 100, lambda = 1:100)) pit <- pit_sample(true_values, predictions, n_replicates = 50) plot_pit(pit)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_avail_forecasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Where Forecasts Are Available — plot_avail_forecasts","title":"Visualise Where Forecasts Are Available — plot_avail_forecasts","text":"Visualise Forecasts Available","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_avail_forecasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Where Forecasts Are Available — plot_avail_forecasts","text":"","code":"plot_avail_forecasts(   avail_forecasts,   y = \"model\",   x = \"forecast_date\",   make_x_factor = TRUE,   show_numbers = TRUE )"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_avail_forecasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Where Forecasts Are Available — plot_avail_forecasts","text":"avail_forecasts data.frame column called Number forecasts produced avail_forecasts() y character vector length one denotes name column appear y-axis plot. Default \"model\". x character vector length one denotes name column appear x-axis plot. Default \"forecast_date\". make_x_factor logical (default TRUE). Whether convert variable x-axis factor. effect e.g. dates shown x-axis. show_numbers logical (default TRUE) indicates whether show actual count numbers plot","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_avail_forecasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise Where Forecasts Are Available — plot_avail_forecasts","text":"ggplot object plot interval coverage","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_avail_forecasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise Where Forecasts Are Available — plot_avail_forecasts","text":"","code":"library(scoringutils) library(ggplot2) avail_forecasts <- avail_forecasts(example_quantile,   by = c(     \"model\", \"target_type\",     \"target_end_date\"   ) ) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. plot_avail_forecasts(avail_forecasts,   x = \"target_end_date\",   show_numbers = FALSE ) +   facet_wrap(\"target_type\")"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Correlation Between Metrics — plot_correlation","title":"Plot Correlation Between Metrics — plot_correlation","text":"Plots heatmap correlations different metrics","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Correlation Between Metrics — plot_correlation","text":"","code":"plot_correlation(correlations)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Correlation Between Metrics — plot_correlation","text":"correlations data.table correlations scores produced correlation().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Correlation Between Metrics — plot_correlation","text":"ggplot2 object showing coloured matrix correlations metrics","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Correlation Between Metrics — plot_correlation","text":"","code":"scores <- score(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. correlations <- correlation(scores) #> Warning: There is a column called 'quantile' in the scores. Usually, you should call 'summarise_scores()' to summarise over quantiles and obtain one score per forecast before calculating correlations. You can ignore this warning if you know what you're doing. plot_correlation(correlations)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Heatmap of a Scoring Metric — plot_heatmap","title":"Create a Heatmap of a Scoring Metric — plot_heatmap","text":"function can used create heatmap one metric across different groups, e.g. interval score obtained several forecasting models different locations.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Heatmap of a Scoring Metric — plot_heatmap","text":"","code":"plot_heatmap(scores, y = \"model\", x, metric)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Heatmap of a Scoring Metric — plot_heatmap","text":"scores data.frame scores based quantile forecasts produced score(). y variable scores want show y-Axis. default \"model\" x variable scores want show x-Axis. something like \"horizon\", \"location\" metric metric determines value colour shown tiles heatmap","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Heatmap of a Scoring Metric — plot_heatmap","text":"ggplot2 object showing heatmap desired metric","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Heatmap of a Scoring Metric — plot_heatmap","text":"","code":"library(\"scoringutils\") scores <- score(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. scores <- summarise_scores(scores, by = c(\"model\", \"target_type\", \"range\"))  plot_heatmap(scores, x = \"target_type\", metric = \"bias\")"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_interval_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Interval Coverage — plot_interval_coverage","title":"Plot Interval Coverage — plot_interval_coverage","text":"Plot interval coverage","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_interval_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Interval Coverage — plot_interval_coverage","text":"","code":"plot_interval_coverage(scores, colour = \"model\")"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_interval_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Interval Coverage — plot_interval_coverage","text":"scores data.frame scores based quantile forecasts produced score() summarise_scores(). Note \"range\" must included argument running summarise_scores() colour According variable shall graphs coloured? Default \"model\".","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_interval_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Interval Coverage — plot_interval_coverage","text":"ggplot object plot interval coverage","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_interval_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Interval Coverage — plot_interval_coverage","text":"","code":"library(\"scoringutils\") scores <- score(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. scores <- summarise_scores(scores, by = c(\"model\", \"range\")) plot_interval_coverage(scores)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_pairwise_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Heatmap of Pairwise Comparisons — plot_pairwise_comparison","title":"Plot Heatmap of Pairwise Comparisons — plot_pairwise_comparison","text":"Creates heatmap ratios pvalues pairwise comparison models","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_pairwise_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Heatmap of Pairwise Comparisons — plot_pairwise_comparison","text":"","code":"plot_pairwise_comparison(   comparison_result,   type = c(\"mean_scores_ratio\", \"pval\", \"together\"),   smaller_is_good = TRUE )"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_pairwise_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Heatmap of Pairwise Comparisons — plot_pairwise_comparison","text":"comparison_result data.frame produced pairwise_comparison() type character vector length one either \"mean_scores_ratio\" \"pval\". denotes whether visualise ratio p-value pairwise comparison. Default \"mean_scores_ratio\" smaller_is_good logical (default TRUE) indicates whether smaller larger values interpreted 'good' (just invert mean scores ratio)","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_pairwise_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Heatmap of Pairwise Comparisons — plot_pairwise_comparison","text":"","code":"library(ggplot2) library(scoringutils) df <- data.frame(   model = rep(c(\"model1\", \"model2\", \"model3\"), each = 10),   id = rep(1:10),   interval_score = abs(rnorm(30, mean = rep(c(1, 1.3, 2), each = 10))),   ae_median = (abs(rnorm(30))) )  scores <- score(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. pairwise <- pairwise_comparison(scores, by = \"target_type\") plot_pairwise_comparison(pairwise) +   facet_wrap(~target_type)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_pit.html","id":null,"dir":"Reference","previous_headings":"","what":"PIT Histogram — plot_pit","title":"PIT Histogram — plot_pit","text":"Make simple histogram probability integral transformed values visually check whether uniform distribution seems likely.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_pit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PIT Histogram — plot_pit","text":"","code":"plot_pit(pit, num_bins = \"auto\", breaks = NULL)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_pit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIT Histogram — plot_pit","text":"pit either vector PIT values size n, data.frame produced pit() num_bins number bins PIT histogram, default \"auto\". num_bins == \"auto\", plot_pit() either display 10 bins, display bin available quantile case passed data quantile-based format. can control number bins supplying number. fine sample-based pit histograms, may fail quantile-based formats. case preferred supply explicit breaks points using breaks argument. breaks numeric vector break points bins PIT histogram. preferred creating PIT histogram based quantile-based data. Default NULL breaks determined num_bins.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_pit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PIT Histogram — plot_pit","text":"vector scoring values","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_pit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PIT Histogram — plot_pit","text":"","code":"library(scoringutils)  # PIT histogram in vector based format true_values <- rnorm(30, mean = 1:30) predictions <- replicate(200, rnorm(n = 30, mean = 1:30)) pit <- pit_sample(true_values, predictions) plot_pit(pit)   # quantile-based pit pit <- pit(example_quantile, by = c(\"model\")) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. plot_pit(pit, breaks = seq(0.1, 1, 0.1))   # sample-based pit pit <- pit(example_integer, by = c(\"model\")) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. plot_pit(pit)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Predictions vs True Values — plot_predictions","title":"Plot Predictions vs True Values — plot_predictions","text":"Make plot observed predicted values","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Predictions vs True Values — plot_predictions","text":"","code":"plot_predictions(   data = NULL,   forecasts = NULL,   truth_data = NULL,   merge_by = NULL,   x = \"date\",   filter_truth = list(),   filter_forecasts = list(),   filter_both = list(),   range = c(0, 50, 90),   facet_formula = NULL,   facet_wrap_or_grid = \"facet_wrap\",   ncol = NULL,   scales = \"free_y\",   allow_truth_without_pred = FALSE,   remove_from_truth = c(\"model\", \"forecaster\", \"quantile\", \"prediction\", \"sample\",     \"interval\") )"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Predictions vs True Values — plot_predictions","text":"data data.frame follows specifications outlined score(). data.frame needs columns called \"true_value\", \"prediction\" either column called sample, one called \"quantile\" two columns called \"range\" \"boundary\". Internally, separated truth forecast data set order able apply different filtering truth data forecasts. Alternatively can directly provide separate truth forecasts data frame input. data sets, however, need mergeable, order connect forecasts truth data plotting. forecasts data.frame forecasts, follow general guidelines data input. Argument can used supply forecasts truth data independently. Default NULL. truth_data data.frame column called true_value x-axis. Usually, \"date\", can anything else. merge_by character vector column names forecasts truth_data merged . Default NULL merge attempted automatically. x character vector length one denotes name variable filter_truth list character strings used filter truth data. Every element parsed expression evaluated order filter truth data. filter_forecasts list character strings used filter truth data. Every element parsed expression evaluated order filter forecasts data. filter_both filter_truth filter_forecasts, applied data sets convenience. range numeric vector indicating interval ranges plot. 0 included range, median prediction shown. facet_formula formula facetting ggplot. NULL (default), facetting take place facet_wrap_or_grid Use ggplot2's facet_wrap facet_grid? Anything \"facet_wrap\" interpreted facet_grid. takes effect facet_formula NULL ncol Number columns facet wrap. relevant facet_formula given facet_wrap_or_grid == \"facet_wrap\" scales scales argument gets passed ggplot. necessary make use facetting. Default \"free_y\" allow_truth_without_pred logical, whether allow instances truth data, forecast. FALSE (default), get filtered . remove_from_truth character vector columns remove truth data. reason columns removed sometimes different models forecasters cover periods. Removing columns truth data makes sure nevertheless available truth data plotted (instead different true values depending period covered certain model).","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Predictions vs True Values — plot_predictions","text":"ggplot object plot true vs predicted values","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_predictions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Predictions vs True Values — plot_predictions","text":"","code":"example1 <- scoringutils::example_continuous  plot_predictions(   example1,   x = \"target_end_date\",   filter_truth = list(     'target_end_date <= \"2021-07-22\"',     'target_end_date > \"2021-05-01\"'   ),   filter_forecasts = list(     \"model == 'EuroCOVIDhub-ensemble'\",     'forecast_date == \"2021-06-07\"'   ),   facet_formula = location ~ target_type,   range = c(0, 50, 90, 95) )"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_quantile_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Quantile Coverage — plot_quantile_coverage","title":"Plot Quantile Coverage — plot_quantile_coverage","text":"Plot quantile coverage","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_quantile_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Quantile Coverage — plot_quantile_coverage","text":"","code":"plot_quantile_coverage(scores, colour = \"model\")"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_quantile_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Quantile Coverage — plot_quantile_coverage","text":"scores data.frame scores based quantile forecasts produced score() summarise_scores(). Note \"range\" must included argument running summarise_scores() colour According variable shall graphs coloured? Default \"model\".","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_quantile_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Quantile Coverage — plot_quantile_coverage","text":"ggplot object plot interval coverage","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_quantile_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Quantile Coverage — plot_quantile_coverage","text":"","code":"library(\"scoringutils\") scores <- score(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. scores <- summarise_scores(scores, by = c(\"model\", \"quantile\")) plot_quantile_coverage(scores)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Metrics by Range of the Prediction Interval — plot_ranges","title":"Plot Metrics by Range of the Prediction Interval — plot_ranges","text":"Visualise metrics range, e.g. interested different interval ranges contribute overall interval score, sharpness / dispersion changes range.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Metrics by Range of the Prediction Interval — plot_ranges","text":"","code":"plot_ranges(scores, y = \"interval_score\", x = \"model\", colour = \"range\")"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Metrics by Range of the Prediction Interval — plot_ranges","text":"scores data.frame scores based quantile forecasts produced score() summarise_scores(). Note \"range\" must included argument running summarise_scores() y variable scores want show y-Axis. something like \"interval_score\" (default) \"dispersion\" x variable scores want show x-Axis. Usually \"model\" colour Character vector length one used determine variable colouring dots. Default \"range\".","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Metrics by Range of the Prediction Interval — plot_ranges","text":"ggplot2 object showing contributions three components weighted interval score","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Metrics by Range of the Prediction Interval — plot_ranges","text":"","code":"library(\"scoringutils\") library(ggplot2) scores <- score(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. scores <- summarise_scores(scores, by = c(\"model\", \"target_type\", \"range\"))  plot_ranges(scores, x = \"model\") +   facet_wrap(~target_type, scales = \"free\")   # visualise dispersion instead of interval score plot_ranges(scores, y = \"dispersion\", x = \"model\") +   facet_wrap(~target_type)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_score_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Coloured Score Table — plot_score_table","title":"Plot Coloured Score Table — plot_score_table","text":"Plots coloured table summarised scores obtained using score().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_score_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Coloured Score Table — plot_score_table","text":"","code":"plot_score_table(scores, y = \"model\", by = NULL, metrics = NULL)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_score_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Coloured Score Table — plot_score_table","text":"scores data.table scores produced score(). y variable shown y-axis. Instead single character string, can also specify vector column names, e.g. y = c(\"model\", \"location\"). column names concatenated create unique row identifier (e.g. \"model1_location1\"). character vector determines colour shading plot gets computed. default (NULL), shading determined per metric, can provide additional column names (see examples). metrics character vector metrics show. set NULL (default), metrics present scores shown.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_score_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Coloured Score Table — plot_score_table","text":"ggplot2 object coloured table summarised scores","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_score_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Coloured Score Table — plot_score_table","text":"","code":"library(ggplot2) library(magrittr) # pipe operator  scores <- score(example_quantile) %>%   summarise_scores(by = c(\"model\", \"target_type\")) %>%   summarise_scores(fun = signif, digits = 2) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected.  plot_score_table(scores, y = \"model\", by = \"target_type\") +   facet_wrap(~target_type, ncol = 1)   # can also put target description on the y-axis plot_score_table(scores,                  y = c(\"model\", \"target_type\"),                  by = \"target_type\")"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_wis.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Contributions to the Weighted Interval Score — plot_wis","title":"Plot Contributions to the Weighted Interval Score — plot_wis","text":"Visualise components weighted interval score: penalties -prediction, -prediction high dispersion (lack sharpness)","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_wis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Contributions to the Weighted Interval Score — plot_wis","text":"","code":"plot_wis(scores, x = \"model\", relative_contributions = FALSE, flip = FALSE)"},{"path":"https://epiforecasts.io/scoringutils/reference/plot_wis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Contributions to the Weighted Interval Score — plot_wis","text":"scores data.frame scores based quantile forecasts produced score() summarised using summarise_scores() x variable scores want show x-Axis. Usually \"model\". relative_contributions show relative contributions instead absolute contributions. Default FALSE functionality available yet. flip boolean (default FALSE), whether flip axes.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_wis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Contributions to the Weighted Interval Score — plot_wis","text":"ggplot2 object showing contributions three components weighted interval score","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_wis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Contributions to the Weighted Interval Score — plot_wis","text":"Bracher J, Ray E, Gneiting T, Reich, N (2020) Evaluating epidemic forecasts interval format. https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008618","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/plot_wis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Contributions to the Weighted Interval Score — plot_wis","text":"","code":"library(\"scoringutils\") library(ggplot2) scores <- score(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. scores <- summarise_scores(scores, by = c(\"model\", \"target_type\"))  plot_wis(scores,   x = \"model\",   relative_contributions = TRUE ) +   facet_wrap(~target_type)  plot_wis(scores,   x = \"model\",   relative_contributions = FALSE ) +   facet_wrap(~target_type, scales = \"free_x\")"},{"path":"https://epiforecasts.io/scoringutils/reference/print.scoringutils_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Print output from check_forecasts() — print.scoringutils_check","title":"Print output from check_forecasts() — print.scoringutils_check","text":"Helper function prints output generated check_forecasts()","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/print.scoringutils_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print output from check_forecasts() — print.scoringutils_check","text":"","code":"# S3 method for scoringutils_check print(x, ...)"},{"path":"https://epiforecasts.io/scoringutils/reference/print.scoringutils_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print output from check_forecasts() — print.scoringutils_check","text":"x object class 'scoringutils_check' produced check_forecasts() ... additional arguments (used )","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/print.scoringutils_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print output from check_forecasts() — print.scoringutils_check","text":"","code":"check <- check_forecasts(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. print(check) #> Your forecasts seem to be for a target of the following type: #> $target_type #> [1] \"integer\" #>  #> and in the following format: #> $prediction_type #> [1] \"quantile\" #>  #> The unit of a single forecast is defined by: #> $forecast_unit #> [1] \"location\"        \"target_end_date\" \"target_type\"     \"location_name\"   #> [5] \"forecast_date\"   \"model\"           \"horizon\"         #>  #> Cleaned data, rows with NA values in prediction or true_value removed: #> $cleaned_data #>        location target_end_date target_type true_value location_name #>     1:       DE      2021-05-08       Cases     106987       Germany #>     2:       DE      2021-05-08       Cases     106987       Germany #>     3:       DE      2021-05-08       Cases     106987       Germany #>     4:       DE      2021-05-08       Cases     106987       Germany #>     5:       DE      2021-05-08       Cases     106987       Germany #>    ---                                                               #> 20397:       IT      2021-07-24      Deaths         78         Italy #> 20398:       IT      2021-07-24      Deaths         78         Italy #> 20399:       IT      2021-07-24      Deaths         78         Italy #> 20400:       IT      2021-07-24      Deaths         78         Italy #> 20401:       IT      2021-07-24      Deaths         78         Italy #>        forecast_date quantile prediction                 model horizon #>     1:    2021-05-03    0.010      82466 EuroCOVIDhub-ensemble       1 #>     2:    2021-05-03    0.025      86669 EuroCOVIDhub-ensemble       1 #>     3:    2021-05-03    0.050      90285 EuroCOVIDhub-ensemble       1 #>     4:    2021-05-03    0.100      95341 EuroCOVIDhub-ensemble       1 #>     5:    2021-05-03    0.150      99171 EuroCOVIDhub-ensemble       1 #>    ---                                                                 #> 20397:    2021-07-12    0.850        352  epiforecasts-EpiNow2       2 #> 20398:    2021-07-12    0.900        397  epiforecasts-EpiNow2       2 #> 20399:    2021-07-12    0.950        499  epiforecasts-EpiNow2       2 #> 20400:    2021-07-12    0.975        611  epiforecasts-EpiNow2       2 #> 20401:    2021-07-12    0.990        719  epiforecasts-EpiNow2       2 #>  #> Number of unique values per column per model: #> $unique_values #>                    model location target_end_date target_type true_value #> 1: EuroCOVIDhub-ensemble        4              12           2         96 #> 2: EuroCOVIDhub-baseline        4              12           2         96 #> 3:  epiforecasts-EpiNow2        4              12           2         95 #> 4:       UMass-MechBayes        4              12           1         48 #>    location_name forecast_date quantile prediction horizon #> 1:             4            11       23       3969       3 #> 2:             4            11       23       3733       3 #> 3:             4            11       23       3903       3 #> 4:             4            11       23       1058       3 #>  #> $messages #> [1] \"144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected.\" #>"},{"path":"https://epiforecasts.io/scoringutils/reference/quantile_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile Score — quantile_score","title":"Quantile Score — quantile_score","text":"Proper Scoring Rule score quantile predictions. Smaller values better. quantile score closely related Interval score (see interval_score()) quantile equivalent works single quantiles instead central prediction intervals.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/quantile_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile Score — quantile_score","text":"","code":"quantile_score(true_values, predictions, quantiles, weigh = TRUE)"},{"path":"https://epiforecasts.io/scoringutils/reference/quantile_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile Score — quantile_score","text":"true_values vector true observed values size n predictions nxN matrix predictive samples, n (number rows) number data points N (number columns) number Monte Carlo samples. Alternatively, predictions can just vector size n. quantiles vector size n quantile values corresponding predictions. weigh TRUE, weigh score alpha / 2, can averaged interval score , limit, corresponds CRPS. Alpha value corresponds (alpha/2) (1 - alpha/2) quantiles provided computed quantile. Alpha decimal value represents much outside central prediction interval (E.g. 90 percent central prediction interval, alpha 0.1). Default: TRUE.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/quantile_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile Score — quantile_score","text":"vector scoring values","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/quantile_score.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quantile Score — quantile_score","text":"Strictly Proper Scoring Rules, Prediction,Estimation, Tilmann Gneiting Adrian E. Raftery, 2007, Journal American Statistical Association, Volume 102, 2007 - Issue 477 Evaluating epidemic forecasts interval format, Johannes Bracher, Evan L. Ray, Tilmann Gneiting Nicholas G. Reich, https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008618","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/quantile_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile Score — quantile_score","text":"","code":"true_values <- rnorm(10, mean = 1:10) alpha <- 0.5  lower <- qnorm(alpha / 2, rnorm(10, mean = 1:10)) upper <- qnorm((1 - alpha / 2), rnorm(10, mean = 1:10))  qs_lower <- quantile_score(true_values,   predictions = lower,   quantiles = alpha / 2 ) qs_upper <- quantile_score(true_values,   predictions = upper,   quantiles = 1 - alpha / 2 ) interval_score <- (qs_lower + qs_upper) / 2"},{"path":"https://epiforecasts.io/scoringutils/reference/quantile_to_range_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Data from a Plain Quantile Format to a Long Range Format — quantile_to_range_long","title":"Change Data from a Plain Quantile Format to a Long Range Format — quantile_to_range_long","text":"Transform data format uses quantiles one uses interval ranges denote quantiles.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/quantile_to_range_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Data from a Plain Quantile Format to a Long Range Format — quantile_to_range_long","text":"","code":"quantile_to_range_long(data, keep_quantile_col = TRUE)"},{"path":"https://epiforecasts.io/scoringutils/reference/quantile_to_range_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Data from a Plain Quantile Format to a Long Range Format — quantile_to_range_long","text":"data data.frame quantile format keep_quantile_col keep quantile column final output transformation (default FALSE)","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/quantile_to_range_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Data from a Plain Quantile Format to a Long Range Format — quantile_to_range_long","text":"data.frame long interval range format","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/range_long_to_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Data from a Range Format to a Quantile Format — range_long_to_quantile","title":"Change Data from a Range Format to a Quantile Format — range_long_to_quantile","text":"Transform data format uses interval ranges denote quantiles format uses quantiles .","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/range_long_to_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Data from a Range Format to a Quantile Format — range_long_to_quantile","text":"","code":"range_long_to_quantile(data, keep_range_col = FALSE)"},{"path":"https://epiforecasts.io/scoringutils/reference/range_long_to_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Data from a Range Format to a Quantile Format — range_long_to_quantile","text":"data data.frame following specifications score()) quantile forecasts. keep_range_col keep range boundary columns transformation (default FALSE)","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/range_long_to_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Data from a Range Format to a Quantile Format — range_long_to_quantile","text":"data.frame plain quantile format","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/sample_to_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Data from a Sample Based Format to a Quantile Format — sample_to_quantile","title":"Change Data from a Sample Based Format to a Quantile Format — sample_to_quantile","text":"Transform data format based predictive samples format based plain quantiles.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/sample_to_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Data from a Sample Based Format to a Quantile Format — sample_to_quantile","text":"","code":"sample_to_quantile(data, quantiles = c(0.05, 0.25, 0.5, 0.75, 0.95), type = 7)"},{"path":"https://epiforecasts.io/scoringutils/reference/sample_to_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Data from a Sample Based Format to a Quantile Format — sample_to_quantile","text":"data data.frame samples quantiles numeric vector quantiles extract type type argument passed quantile function. information, see quantile()","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/sample_to_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Data from a Sample Based Format to a Quantile Format — sample_to_quantile","text":"data.frame long interval range format","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/sample_to_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Data from a Sample Based Format to a Quantile Format — sample_to_quantile","text":"","code":"sample_to_quantile(example_integer) #>       location location_name target_end_date target_type forecast_date #>    1:       DE       Germany      2021-01-02       Cases          <NA> #>    2:       DE       Germany      2021-01-02       Cases          <NA> #>    3:       DE       Germany      2021-01-02       Cases          <NA> #>    4:       DE       Germany      2021-01-02       Cases          <NA> #>    5:       DE       Germany      2021-01-02       Cases          <NA> #>   ---                                                                  #> 5151:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 5152:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 5153:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 5154:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 5155:       IT         Italy      2021-07-24      Deaths    2021-07-12 #>                      model horizon true_value quantile prediction #>    1:                 <NA>      NA     127300     0.05         NA #>    2:                 <NA>      NA     127300     0.25         NA #>    3:                 <NA>      NA     127300     0.50         NA #>    4:                 <NA>      NA     127300     0.75         NA #>    5:                 <NA>      NA     127300     0.95         NA #>   ---                                                             #> 5151: epiforecasts-EpiNow2       2         78     0.05      44.90 #> 5152: epiforecasts-EpiNow2       2         78     0.25      89.25 #> 5153: epiforecasts-EpiNow2       2         78     0.50     151.50 #> 5154: epiforecasts-EpiNow2       2         78     0.75     208.00 #> 5155: epiforecasts-EpiNow2       2         78     0.95     469.10"},{"path":"https://epiforecasts.io/scoringutils/reference/sample_to_range_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Data from a Sample Based Format to a Long Interval Range Format — sample_to_range_long","title":"Change Data from a Sample Based Format to a Long Interval Range Format — sample_to_range_long","text":"Transform data format based predictive samples format based interval ranges","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/sample_to_range_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Data from a Sample Based Format to a Long Interval Range Format — sample_to_range_long","text":"","code":"sample_to_range_long(   data,   range = c(0, 50, 90),   type = 7,   keep_quantile_col = TRUE )"},{"path":"https://epiforecasts.io/scoringutils/reference/sample_to_range_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Data from a Sample Based Format to a Long Interval Range Format — sample_to_range_long","text":"data data.frame samples range numeric vector interval ranges extract (e.g. c(0, 50, 90)) type type argument passed quantile function. information, see quantile() keep_quantile_col keep quantile column, default TRUE","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/sample_to_range_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Data from a Sample Based Format to a Long Interval Range Format — sample_to_range_long","text":"data.frame long interval range format","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate forecasts — score","title":"Evaluate forecasts — score","text":"function score allows automatic scoring forecasts wraps lower level functions scoringutils package. can used score forecasts quantile-based, sample-based, binary format. obtain overview input expected, look example_quantile, example_continuous, example_integer, example_binary data sets. can () check input using function check_forecasts() scoring. obtain quick overview evaluation metrics used, look metrics data included package. column metrics$Name gives overview available metric names can computed.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate forecasts — score","text":"","code":"score(data, metrics = NULL, ...)"},{"path":"https://epiforecasts.io/scoringutils/reference/score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate forecasts — score","text":"data data.frame data.table predictions observations. following columns need present: true_value - true observed values prediction - predictions predictive samples one true value. (need provide prediction column want score quantile forecasts wide range format.) integer continuous forecasts sample column needed: sample - index identify predictive samples prediction column generated one model one true value. necessary continuous integer forecasts, binary predictions. quantile-format forecast provide column called quantile: quantile: quantile prediction corresponds metrics metrics want output. NULL (default), available metrics computed. list available metrics see available_metrics(), check metrics data set. ... additional parameters passed score_quantile() (internal function used scoring forecasts quantile-based format).","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate forecasts — score","text":"data.table unsummarised scores. one score per quantile sample, usually desired, always run summarise_scores() unsummarised scores.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Evaluate forecasts — score","text":"Funk S, Camacho , Kucharski AJ, Lowe R, Eggo RM, Edmunds WJ (2019) Assessing performance real-time epidemic forecasts: case study Ebola Western Area region Sierra Leone, 2014-15. PLoS Comput Biol 15(2): e1006785. doi:10.1371/journal.pcbi.1006785","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Evaluate forecasts — score","text":"Nikos Bosse nikosbosse@gmail.com","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate forecasts — score","text":"","code":"library(magrittr) # pipe operator  check_forecasts(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #> Your forecasts seem to be for a target of the following type: #> $target_type #> [1] \"integer\" #>  #> and in the following format: #> $prediction_type #> [1] \"quantile\" #>  #> The unit of a single forecast is defined by: #> $forecast_unit #> [1] \"location\"        \"target_end_date\" \"target_type\"     \"location_name\"   #> [5] \"forecast_date\"   \"model\"           \"horizon\"         #>  #> Cleaned data, rows with NA values in prediction or true_value removed: #> $cleaned_data #>        location target_end_date target_type true_value location_name #>     1:       DE      2021-05-08       Cases     106987       Germany #>     2:       DE      2021-05-08       Cases     106987       Germany #>     3:       DE      2021-05-08       Cases     106987       Germany #>     4:       DE      2021-05-08       Cases     106987       Germany #>     5:       DE      2021-05-08       Cases     106987       Germany #>    ---                                                               #> 20397:       IT      2021-07-24      Deaths         78         Italy #> 20398:       IT      2021-07-24      Deaths         78         Italy #> 20399:       IT      2021-07-24      Deaths         78         Italy #> 20400:       IT      2021-07-24      Deaths         78         Italy #> 20401:       IT      2021-07-24      Deaths         78         Italy #>        forecast_date quantile prediction                 model horizon #>     1:    2021-05-03    0.010      82466 EuroCOVIDhub-ensemble       1 #>     2:    2021-05-03    0.025      86669 EuroCOVIDhub-ensemble       1 #>     3:    2021-05-03    0.050      90285 EuroCOVIDhub-ensemble       1 #>     4:    2021-05-03    0.100      95341 EuroCOVIDhub-ensemble       1 #>     5:    2021-05-03    0.150      99171 EuroCOVIDhub-ensemble       1 #>    ---                                                                 #> 20397:    2021-07-12    0.850        352  epiforecasts-EpiNow2       2 #> 20398:    2021-07-12    0.900        397  epiforecasts-EpiNow2       2 #> 20399:    2021-07-12    0.950        499  epiforecasts-EpiNow2       2 #> 20400:    2021-07-12    0.975        611  epiforecasts-EpiNow2       2 #> 20401:    2021-07-12    0.990        719  epiforecasts-EpiNow2       2 #>  #> Number of unique values per column per model: #> $unique_values #>                    model location target_end_date target_type true_value #> 1: EuroCOVIDhub-ensemble        4              12           2         96 #> 2: EuroCOVIDhub-baseline        4              12           2         96 #> 3:  epiforecasts-EpiNow2        4              12           2         95 #> 4:       UMass-MechBayes        4              12           1         48 #>    location_name forecast_date quantile prediction horizon #> 1:             4            11       23       3969       3 #> 2:             4            11       23       3733       3 #> 3:             4            11       23       3903       3 #> 4:             4            11       23       1058       3 #>  #> $messages #> [1] \"144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected.\" #>  score(example_quantile) %>%   add_coverage(by = c(\"model\", \"target_type\")) %>%   summarise_scores(by = c(\"model\", \"target_type\")) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                    model target_type interval_score dispersion underprediction #> 1: EuroCOVIDhub-baseline       Cases    28483.57465 4102.50094    10284.972826 #> 2: EuroCOVIDhub-baseline      Deaths      159.40387   91.40625        2.098505 #> 3: EuroCOVIDhub-ensemble       Cases    17943.82383 3663.52458     4237.177310 #> 4: EuroCOVIDhub-ensemble      Deaths       41.42249   30.18099        4.103261 #> 5:       UMass-MechBayes      Deaths       52.65195   26.87239       16.800951 #> 6:  epiforecasts-EpiNow2       Cases    20831.55662 5664.37795     3260.355639 #> 7:  epiforecasts-EpiNow2      Deaths       66.64282   31.85692       15.893314 #>    overprediction coverage_deviation        bias   ae_median coverage_50 #> 1:   14096.100883        -0.11211957  0.09796875 38473.60156   0.3281250 #> 2:      65.899117         0.11614130  0.33906250   233.25781   0.6640625 #> 3:   10043.121943        -0.09785326 -0.05640625 24101.07031   0.3906250 #> 4:       7.138247         0.19528533  0.07265625    53.13281   0.8750000 #> 5:       8.978601        -0.02312500 -0.02234375    78.47656   0.4609375 #> 6:   11906.823030        -0.06660326 -0.07890625 27923.81250   0.4687500 #> 7:      18.892583        -0.04287176 -0.00512605   104.74790   0.4201681 #>    coverage_90 #> 1:   0.8203125 #> 2:   1.0000000 #> 3:   0.8046875 #> 4:   1.0000000 #> 5:   0.8750000 #> 6:   0.7890625 #> 7:   0.9075630  # forecast formats with different metrics score(example_binary) #> The following messages were produced when checking inputs: #> 1.  144 values for `true_value` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #> 2.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>      location location_name target_end_date target_type forecast_date #>   1:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   2:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   3:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   4:       DE       Germany      2021-05-08      Deaths    2021-05-03 #>   5:       DE       Germany      2021-05-08      Deaths    2021-05-03 #>  ---                                                                  #> 883:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 884:       IT         Italy      2021-07-24      Deaths    2021-07-05 #> 885:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 886:       IT         Italy      2021-07-24      Deaths    2021-07-05 #> 887:       IT         Italy      2021-07-24      Deaths    2021-07-12 #>                      model horizon prediction true_value brier_score log_score #>   1: EuroCOVIDhub-ensemble       1      0.375          0    0.140625 0.4700036 #>   2: EuroCOVIDhub-baseline       1      0.475          0    0.225625 0.6443570 #>   3:  epiforecasts-EpiNow2       1      0.425          0    0.180625 0.5533852 #>   4: EuroCOVIDhub-ensemble       1      0.425          0    0.180625 0.5533852 #>   5: EuroCOVIDhub-baseline       1      0.500          1    0.250000 0.6931472 #>  ---                                                                           #> 883: EuroCOVIDhub-baseline       2      0.250          0    0.062500 0.2876821 #> 884:       UMass-MechBayes       3      0.475          0    0.225625 0.6443570 #> 885:       UMass-MechBayes       2      0.450          0    0.202500 0.5978370 #> 886:  epiforecasts-EpiNow2       3      0.375          0    0.140625 0.4700036 #> 887:  epiforecasts-EpiNow2       2      0.300          0    0.090000 0.3566749 score(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>        location target_end_date target_type location_name forecast_date #>     1:       DE      2021-05-08       Cases       Germany    2021-05-03 #>     2:       DE      2021-05-08       Cases       Germany    2021-05-03 #>     3:       DE      2021-05-08       Cases       Germany    2021-05-03 #>     4:       DE      2021-05-08       Cases       Germany    2021-05-03 #>     5:       DE      2021-05-08       Cases       Germany    2021-05-03 #>    ---                                                                  #> 20397:       IT      2021-07-24      Deaths         Italy    2021-07-12 #> 20398:       IT      2021-07-24      Deaths         Italy    2021-07-12 #> 20399:       IT      2021-07-24      Deaths         Italy    2021-07-12 #> 20400:       IT      2021-07-24      Deaths         Italy    2021-07-12 #> 20401:       IT      2021-07-24      Deaths         Italy    2021-07-12 #>                        model horizon range interval_score dispersion #>     1: EuroCOVIDhub-baseline       1     0       25620.00       0.00 #>     2: EuroCOVIDhub-baseline       1    10       25599.50     184.50 #>     3: EuroCOVIDhub-baseline       1    10       25599.50     184.50 #>     4: EuroCOVIDhub-baseline       1    20       25481.00     556.00 #>     5: EuroCOVIDhub-baseline       1    20       25481.00     556.00 #>    ---                                                               #> 20397:  epiforecasts-EpiNow2       2    90          21.50      21.50 #> 20398:  epiforecasts-EpiNow2       2    95          13.90      13.90 #> 20399:  epiforecasts-EpiNow2       2    95          13.90      13.90 #> 20400:  epiforecasts-EpiNow2       2    98           6.71       6.71 #> 20401:  epiforecasts-EpiNow2       2    98           6.71       6.71 #>        underprediction overprediction coverage coverage_deviation bias quantile #>     1:               0          25620        0               0.00 0.95    0.500 #>     2:               0          25415        0              -0.10 0.95    0.450 #>     3:               0          25415        0              -0.10 0.95    0.550 #>     4:               0          24925        0              -0.20 0.95    0.400 #>     5:               0          24925        0              -0.20 0.95    0.600 #>    ---                                                                          #> 20397:               0              0        1               0.10 0.90    0.950 #> 20398:               0              0        1               0.05 0.90    0.025 #> 20399:               0              0        1               0.05 0.90    0.975 #> 20400:               0              0        1               0.02 0.90    0.010 #> 20401:               0              0        1               0.02 0.90    0.990 #>        ae_median quantile_coverage #>     1:     25620              TRUE #>     2:     25620              TRUE #>     3:     25620              TRUE #>     4:     25620              TRUE #>     5:     25620              TRUE #>    ---                             #> 20397:       108              TRUE #> 20398:       108             FALSE #> 20399:       108              TRUE #> 20400:       108             FALSE #> 20401:       108              TRUE score(example_integer) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>      location location_name target_end_date target_type forecast_date #>   1:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   2:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   3:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   4:       DE       Germany      2021-05-08      Deaths    2021-05-03 #>   5:       DE       Germany      2021-05-08      Deaths    2021-05-03 #>  ---                                                                  #> 883:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 884:       IT         Italy      2021-07-24      Deaths    2021-07-05 #> 885:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 886:       IT         Italy      2021-07-24      Deaths    2021-07-05 #> 887:       IT         Italy      2021-07-24      Deaths    2021-07-12 #>                      model horizon        mad  bias       dss        crps #>   1: EuroCOVIDhub-ensemble       1 17640.7161  0.55 20.601389  7482.96187 #>   2: EuroCOVIDhub-baseline       1 19341.9996  0.95 22.443381 20371.25500 #>   3:  epiforecasts-EpiNow2       1 32348.8494  0.80 22.310571 24810.45938 #>   4: EuroCOVIDhub-ensemble       1   266.8680  0.20 11.112022    67.53063 #>   5: EuroCOVIDhub-baseline       1   397.3368 -0.05 11.541083    86.47313 #>  ---                                                                      #> 883: EuroCOVIDhub-baseline       2   168.2751  0.45 12.913523    66.54000 #> 884:       UMass-MechBayes       3    25.2042  0.10  6.357686     6.64750 #> 885:       UMass-MechBayes       2    40.0302  0.80  8.769176    29.52313 #> 886:  epiforecasts-EpiNow2       3   108.2298  0.10 10.283440    28.84250 #> 887:  epiforecasts-EpiNow2       2    93.4038  0.65 10.563036    49.95750 #>      ae_median      se_mean #>   1:    9414.0 2.303967e+08 #>   2:   29379.0 9.128526e+08 #>   3:   36513.0 1.603612e+09 #>   4:      77.0 8.588656e+03 #>   5:      27.5 2.118301e+03 #>  ---                        #> 883:      58.5 6.063906e+04 #> 884:       5.0 6.084000e+01 #> 885:      42.5 2.159926e+03 #> 886:       8.0 3.214890e+03 #> 887:      73.5 1.262252e+04 score(example_continuous) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>      location location_name target_end_date target_type forecast_date #>   1:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   2:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   3:       DE       Germany      2021-05-08       Cases    2021-05-03 #>   4:       DE       Germany      2021-05-08      Deaths    2021-05-03 #>   5:       DE       Germany      2021-05-08      Deaths    2021-05-03 #>  ---                                                                  #> 883:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 884:       IT         Italy      2021-07-24      Deaths    2021-07-05 #> 885:       IT         Italy      2021-07-24      Deaths    2021-07-12 #> 886:       IT         Italy      2021-07-24      Deaths    2021-07-05 #> 887:       IT         Italy      2021-07-24      Deaths    2021-07-12 #>                      model horizon         mad  bias       dss         crps #>   1: EuroCOVIDhub-ensemble       1 17641.24334  0.55 20.601386  7482.975177 #>   2: EuroCOVIDhub-baseline       1 19341.68942  0.95 22.443370 20371.250988 #>   3:  epiforecasts-EpiNow2       1 32348.79978  0.80 22.310568 24810.424753 #>   4: EuroCOVIDhub-ensemble       1   267.13585  0.20 11.112388    67.510511 #>   5: EuroCOVIDhub-baseline       1   397.09371 -0.05 11.541040    86.462930 #>  ---                                                                        #> 883: EuroCOVIDhub-baseline       2   168.03093  0.45 12.913561    66.515150 #> 884:       UMass-MechBayes       3    24.76457  0.10  6.353679     6.616381 #> 885:       UMass-MechBayes       2    39.96542  0.80  8.765716    29.446723 #> 886:  epiforecasts-EpiNow2       3   107.93293  0.10 10.283832    28.863742 #> 887:  epiforecasts-EpiNow2       2    93.54245  0.65 10.563729    49.998906 #>      log_score    ae_median      se_mean #>   1: 10.989568  9413.839675 2.303980e+08 #>   2: 11.941135 29378.807513 9.128538e+08 #>   3: 12.007007 36512.810659 1.603609e+09 #>   4:  6.516954    77.077318 8.593954e+03 #>   5:  6.913879    27.429626 2.123067e+03 #>  ---                                     #> 883:  6.067282    58.606302 6.065218e+04 #> 884:  4.242600     5.071742 6.043161e+01 #> 885:  5.321013    42.271396 2.153122e+03 #> 886:  5.709216     7.760566 3.212150e+03 #> 887:  5.736238    73.670518 1.263027e+04  # score point forecasts (marked by 'NA' in the quantile column) score(example_point) %>%   summarise_scores(by = \"model\", na.rm = TRUE) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. #>                    model interval_score dispersion underprediction #> 1: EuroCOVIDhub-baseline     14092.7647 2192.26967      4996.92898 #> 2: EuroCOVIDhub-ensemble      8852.4196 1930.80064      2005.56357 #> 3:  epiforecasts-EpiNow2     10659.5125 3084.85850      1604.96135 #> 4:       UMass-MechBayes        51.4781   28.09387        15.32315 #>    overprediction coverage_deviation        bias    ae_point     se_point #> 1:     6903.56605        0.002102273  0.23905983 19353.42969 2.883446e+09 #> 2:     4916.05540        0.050752841  0.01027027 12077.10156 1.945118e+09 #> 3:     5969.69268       -0.057861612 -0.04915929 14521.10526 2.680928e+09 #> 4:        8.06108       -0.024886364 -0.02847458    78.47656 1.170976e+04 #>    ae_median #> 1:       NaN #> 2:       NaN #> 3:       NaN #> 4:       NaN"},{"path":"https://epiforecasts.io/scoringutils/reference/score_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate forecasts in a Binary Format — score_binary","title":"Evaluate forecasts in a Binary Format — score_binary","text":"Evaluate forecasts Binary Format","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate forecasts in a Binary Format — score_binary","text":"","code":"score_binary(data, forecast_unit, metrics)"},{"path":"https://epiforecasts.io/scoringutils/reference/score_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate forecasts in a Binary Format — score_binary","text":"data data.frame data.table predictions observations. following columns need present: true_value - true observed values prediction - predictions predictive samples one true value. (need provide prediction column want score quantile forecasts wide range format.) integer continuous forecasts sample column needed: sample - index identify predictive samples prediction column generated one model one true value. necessary continuous integer forecasts, binary predictions. quantile-format forecast provide column called quantile: quantile: quantile prediction corresponds forecast_unit character vector column names define unit single forecast, .e. forecast made combination values forecast_unit. metrics metrics want output. NULL (default), available metrics computed. list available metrics see available_metrics(), check metrics data set.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate forecasts in a Binary Format — score_binary","text":"data.table appropriate scores. information see score().","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_binary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Evaluate forecasts in a Binary Format — score_binary","text":"Nikos Bosse nikosbosse@gmail.com","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate forecasts in a Quantile-Based Format — score_quantile","title":"Evaluate forecasts in a Quantile-Based Format — score_quantile","text":"Evaluate forecasts Quantile-Based Format","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate forecasts in a Quantile-Based Format — score_quantile","text":"","code":"score_quantile(   data,   forecast_unit,   metrics,   weigh = TRUE,   count_median_twice = FALSE,   separate_results = TRUE )"},{"path":"https://epiforecasts.io/scoringutils/reference/score_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate forecasts in a Quantile-Based Format — score_quantile","text":"data data.frame data.table predictions observations. following columns need present: true_value - true observed values prediction - predictions predictive samples one true value. (need provide prediction column want score quantile forecasts wide range format.) integer continuous forecasts sample column needed: sample - index identify predictive samples prediction column generated one model one true value. necessary continuous integer forecasts, binary predictions. quantile-format forecast provide column called quantile: quantile: quantile prediction corresponds forecast_unit character vector column names define unit single forecast, .e. forecast made combination values forecast_unit metrics metrics want output. NULL (default), available metrics computed. list available metrics see available_metrics(), check metrics data set. weigh TRUE, weigh score alpha / 2, can averaged interval score , limit, corresponds CRPS. Alpha decimal value  represents much outside central prediction interval (e.g. 90 percent central prediction interval, alpha 0.1) Default: TRUE. count_median_twice logical controls whether count median twice summarising (default FALSE). Counting median twice conceptually treat 0\\ median lower well upper bound. alternative treat median single quantile forecast instead interval. interval score better understood average quantile scores. separate_results TRUE (default FALSE), separate parts interval score (dispersion penalty, penalties - -prediction get returned separate elements list). want data.frame instead, simply call .data.frame() output.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate forecasts in a Quantile-Based Format — score_quantile","text":"data.table appropriate scores. information see score()","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_quantile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Evaluate forecasts in a Quantile-Based Format — score_quantile","text":"Funk S, Camacho , Kucharski AJ, Lowe R, Eggo RM, Edmunds WJ (2019) Assessing performance real-time epidemic forecasts: case study Ebola Western Area region Sierra Leone, 2014-15. PLoS Comput Biol 15(2): e1006785. doi:10.1371/journal.pcbi.1006785","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_quantile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Evaluate forecasts in a Quantile-Based Format — score_quantile","text":"Nikos Bosse nikosbosse@gmail.com","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate forecasts in a Sample-Based Format (Integer or Continuous) — score_sample","title":"Evaluate forecasts in a Sample-Based Format (Integer or Continuous) — score_sample","text":"Evaluate forecasts Sample-Based Format (Integer Continuous)","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate forecasts in a Sample-Based Format (Integer or Continuous) — score_sample","text":"","code":"score_sample(data, forecast_unit, metrics, prediction_type)"},{"path":"https://epiforecasts.io/scoringutils/reference/score_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate forecasts in a Sample-Based Format (Integer or Continuous) — score_sample","text":"data data.frame data.table predictions observations. following columns need present: true_value - true observed values prediction - predictions predictive samples one true value. (need provide prediction column want score quantile forecasts wide range format.) integer continuous forecasts sample column needed: sample - index identify predictive samples prediction column generated one model one true value. necessary continuous integer forecasts, binary predictions. quantile-format forecast provide column called quantile: quantile: quantile prediction corresponds forecast_unit character vector column names define unit single forecast, .e. forecast made combination values forecast_unit metrics metrics want output. NULL (default), available metrics computed. list available metrics see available_metrics(), check metrics data set. prediction_type character, either \"continuous\" \"integer\"","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate forecasts in a Sample-Based Format (Integer or Continuous) — score_sample","text":"data.table appropriate scores. information see score()","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Evaluate forecasts in a Sample-Based Format (Integer or Continuous) — score_sample","text":"Funk S, Camacho , Kucharski AJ, Lowe R, Eggo RM, Edmunds WJ (2019) Assessing performance real-time epidemic forecasts: case study Ebola Western Area region Sierra Leone, 2014-15. PLoS Comput Biol 15(2): e1006785. doi:10.1371/journal.pcbi.1006785","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/score_sample.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Evaluate forecasts in a Sample-Based Format (Integer or Continuous) — score_sample","text":"Nikos Bosse nikosbosse@gmail.com","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/scoringutils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"scoringutils: Utilities for Scoring and Assessing Predictions — scoringutils-package","title":"scoringutils: Utilities for Scoring and Assessing Predictions — scoringutils-package","text":"Combines collection metrics proper scoring rules (Tilmann Gneiting & Adrian E Raftery (2007) <doi:10.1198/016214506000001437>) easy use wrapper can used automatically evaluate predictions. Apart proper scoring rules functions provided assess bias, sharpness calibration (Sebastian Funk, Anton Camacho, Adam J. Kucharski, Rachel Lowe, Rosalind M. Eggo, W. John Edmunds (2019) <doi:10.1371/journal.pcbi.1006785>) forecasts. Several types predictions can evaluated: probabilistic forecasts (generally predictive samples generated Markov Chain Monte Carlo procedures), quantile forecasts point forecasts. Observed values predictions can either continuous, integer, binary. Users can either choose apply rules separately vector / matrix format can flexibly used within packages, can choose automatic evaluation forecasts. implemented 'data.table' provides consistent efficient framework evaluating various types predictions.","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/reference/scoringutils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"scoringutils: Utilities for Scoring and Assessing Predictions — scoringutils-package","text":"Maintainer: Nikos Bosse nikosbosse@gmail.com (ORCID) Authors: Sam Abbott contact@samabbott.co.uk (ORCID) Hugo Gruson hugo.gruson@lshtm.ac.uk (ORCID) contributors: Johannes Bracher johannes.bracher@kit.edu (ORCID) [contributor] Sebastian Funk sebastian.funk@lshtm.ac.uk [contributor]","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/se_mean_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Squared Error of the Mean (Sample-based Version) — se_mean_sample","title":"Squared Error of the Mean (Sample-based Version) — se_mean_sample","text":"Squared error mean calculated $$   \\text{mean}(\\text{true_value} - \\text{prediction})^2 $$","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/se_mean_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Squared Error of the Mean (Sample-based Version) — se_mean_sample","text":"","code":"se_mean_sample(true_values, predictions)"},{"path":"https://epiforecasts.io/scoringutils/reference/se_mean_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Squared Error of the Mean (Sample-based Version) — se_mean_sample","text":"true_values vector true observed values size n predictions nxN matrix predictive samples, n (number rows) number data points N (number columns) number Monte Carlo samples. Alternatively, predictions can just vector size n.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/se_mean_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Squared Error of the Mean (Sample-based Version) — se_mean_sample","text":"vector scoring values","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/reference/se_mean_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Squared Error of the Mean (Sample-based Version) — se_mean_sample","text":"","code":"true_values <- rnorm(30, mean = 1:30) predicted_values <- rnorm(30, mean = 1:30) se_mean_sample(true_values, predicted_values) #>  [1] 2.78484880 2.41690635 0.35087748 0.47557967 1.12452433 0.35626323 #>  [7] 0.32129596 1.14301952 0.20101046 1.81413347 4.91117206 0.50912577 #> [13] 0.03694828 0.69355892 1.09466150 0.13818173 0.25882432 2.17748514 #> [19] 1.58447009 0.84369870 0.49774706 3.88241005 0.71997839 5.13687844 #> [25] 0.02298931 0.26497433 0.31933451 2.55189667 1.42108347 0.01209456"},{"path":"https://epiforecasts.io/scoringutils/reference/squared_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Squared Error — squared_error","title":"Squared Error — squared_error","text":"Squared Error SE calculated $$   (true_values - predicted_values)^2 $$","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/squared_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Squared Error — squared_error","text":"","code":"squared_error(true_values, predictions)"},{"path":"https://epiforecasts.io/scoringutils/reference/squared_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Squared Error — squared_error","text":"true_values vector true observed values size n predictions vector predicted values size n","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/squared_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Squared Error — squared_error","text":"vector scoring values","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/squared_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Squared Error — squared_error","text":"","code":"true_values <- rnorm(30, mean = 1:30) predicted_values <- rnorm(30, mean = 1:30) squared_error(true_values, predicted_values) #>  [1] 1.814398e-01 1.213407e+00 1.169869e+01 5.893247e+00 7.167090e-01 #>  [6] 2.181172e+00 2.117669e-01 1.173707e+00 2.818919e-01 5.239990e-01 #> [11] 8.739215e-01 3.253249e+00 2.394127e+00 8.028722e-01 1.369071e-01 #> [16] 2.051524e-01 8.469389e-01 3.626475e-05 2.419475e-01 6.660983e+00 #> [21] 9.358900e-01 7.863242e-01 7.022374e-01 3.433691e-01 6.195945e-01 #> [26] 1.001295e+00 1.750581e+00 1.102825e-01 2.255254e+00 1.079261e-02"},{"path":"https://epiforecasts.io/scoringutils/reference/summarise_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise scores as produced by score() — summarise_scores","title":"Summarise scores as produced by score() — summarise_scores","text":"Summarise scores produced score()-","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/summarise_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise scores as produced by score() — summarise_scores","text":"","code":"summarise_scores(   scores,   by = NULL,   fun = mean,   relative_skill = FALSE,   metric = \"auto\",   baseline = NULL,   ... )"},{"path":"https://epiforecasts.io/scoringutils/reference/summarise_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise scores as produced by score() — summarise_scores","text":"scores data.table scores produced score(). character vector column names summarise scores . Default NULL, meaning summary takes place summarising quantiles (case quantile-based forecasts), one score per forecast defined unit single forecast (rather one score every quantile). fun function used summarising scores. Default mean. relative_skill logical, whether compute relative performance models based pairwise comparisons. TRUE (default FALSE), column called 'model' must present input data. information computation relative skill, see pairwise_comparison(). Relative skill calculated aggregation level specified . metric character name metric relative skill shall computed. equal 'auto' (default), either interval score, crps brier score (depending available input data) baseline character string name model. baseline given, scaled relative skill respect baseline returned. default (NULL), relative skill scaled respect baseline model. ... additional parameters can passed summary function provided fun. information see documentation respective function.","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/summarise_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise scores as produced by score() — summarise_scores","text":"","code":"library(magrittr) # pipe operator  # summarise over samples or quantiles to get one score per forecast scores <- score(example_quantile) #> The following messages were produced when checking inputs: #> 1.  144 values for `prediction` are NA in the data provided and the corresponding rows were removed. This may indicate a problem if unexpected. summarise_scores(scores) #>      location target_end_date target_type location_name forecast_date #>   1:       DE      2021-05-08       Cases       Germany    2021-05-03 #>   2:       DE      2021-05-08       Cases       Germany    2021-05-03 #>   3:       DE      2021-05-08       Cases       Germany    2021-05-03 #>   4:       DE      2021-05-08      Deaths       Germany    2021-05-03 #>   5:       DE      2021-05-08      Deaths       Germany    2021-05-03 #>  ---                                                                  #> 883:       IT      2021-07-24      Deaths         Italy    2021-07-05 #> 884:       IT      2021-07-24      Deaths         Italy    2021-07-12 #> 885:       IT      2021-07-24      Deaths         Italy    2021-07-12 #> 886:       IT      2021-07-24      Deaths         Italy    2021-07-12 #> 887:       IT      2021-07-24      Deaths         Italy    2021-07-12 #>                      model horizon interval_score  dispersion underprediction #>   1: EuroCOVIDhub-baseline       1    16925.04696 1649.220870       0.0000000 #>   2: EuroCOVIDhub-ensemble       1     7990.85478 5440.985217       0.0000000 #>   3:  epiforecasts-EpiNow2       1    25395.96087 8173.700000       0.0000000 #>   4: EuroCOVIDhub-baseline       1       46.79304   44.662609       0.0000000 #>   5: EuroCOVIDhub-ensemble       1       53.88000   53.271304       0.6086957 #>  ---                                                                          #> 883:  epiforecasts-EpiNow2       3       19.76261   14.284348       0.0000000 #> 884: EuroCOVIDhub-baseline       2       80.33696   76.728261       0.0000000 #> 885: EuroCOVIDhub-ensemble       2       18.65870   13.354348       0.0000000 #> 886:       UMass-MechBayes       2       25.58174    7.755652       0.0000000 #> 887:  epiforecasts-EpiNow2       2       66.16174   25.553043       0.0000000 #>      overprediction coverage_deviation  bias ae_median #>   1:   15275.826087        -0.38521739  0.95     25620 #>   2:    2549.869565         0.04956522  0.50     12271 #>   3:   17222.260870        -0.29826087  0.90     44192 #>   4:       2.130435         0.22347826  0.30        15 #>   5:       0.000000         0.39739130 -0.10        14 #>  ---                                                   #> 883:       5.478261         0.04956522  0.50        26 #> 884:       3.608696         0.31043478  0.20        53 #> 885:       5.304348         0.13652174  0.40        30 #> 886:      17.826087        -0.21130435  0.80        46 #> 887:      40.608696        -0.29826087  0.90       108  # get scores by model summarise_scores(scores, by = c(\"model\")) #>                    model interval_score dispersion underprediction #> 1: EuroCOVIDhub-baseline    14321.48926 2096.95360      5143.53567 #> 2: EuroCOVIDhub-ensemble     8992.62316 1846.85278      2120.64029 #> 3:  epiforecasts-EpiNow2    10827.40786 2950.73422      1697.23411 #> 4:       UMass-MechBayes       52.65195   26.87239        16.80095 #>    overprediction coverage_deviation        bias   ae_median #> 1:    7081.000000         0.00201087  0.21851562 19353.42969 #> 2:    5025.130095         0.04871603  0.00812500 12077.10156 #> 3:    6179.439535        -0.05516986 -0.04336032 14521.10526 #> 4:       8.978601        -0.02312500 -0.02234375    78.47656  # get scores by model and target type summarise_scores(scores, by = c(\"model\", \"target_type\")) #>                    model target_type interval_score dispersion underprediction #> 1: EuroCOVIDhub-baseline       Cases    28483.57465 4102.50094    10284.972826 #> 2: EuroCOVIDhub-ensemble       Cases    17943.82383 3663.52458     4237.177310 #> 3:  epiforecasts-EpiNow2       Cases    20831.55662 5664.37795     3260.355639 #> 4: EuroCOVIDhub-baseline      Deaths      159.40387   91.40625        2.098505 #> 5: EuroCOVIDhub-ensemble      Deaths       41.42249   30.18099        4.103261 #> 6:       UMass-MechBayes      Deaths       52.65195   26.87239       16.800951 #> 7:  epiforecasts-EpiNow2      Deaths       66.64282   31.85692       15.893314 #>    overprediction coverage_deviation        bias   ae_median #> 1:   14096.100883        -0.11211957  0.09796875 38473.60156 #> 2:   10043.121943        -0.09785326 -0.05640625 24101.07031 #> 3:   11906.823030        -0.06660326 -0.07890625 27923.81250 #> 4:      65.899117         0.11614130  0.33906250   233.25781 #> 5:       7.138247         0.19528533  0.07265625    53.13281 #> 6:       8.978601        -0.02312500 -0.02234375    78.47656 #> 7:      18.892583        -0.04287176 -0.00512605   104.74790  # get standard deviation summarise_scores(scores, by = \"model\", fun = sd) #>                    model interval_score dispersion underprediction #> 1: EuroCOVIDhub-baseline      43157.488  2682.7722      18417.2012 #> 2: EuroCOVIDhub-ensemble      38788.740  3863.3379       7179.5954 #> 3:  epiforecasts-EpiNow2      42478.208  6698.7470       7629.9180 #> 4:       UMass-MechBayes         42.813    25.2045         30.8519 #>    overprediction coverage_deviation      bias   ae_median #> 1:     38723.6131          0.2589550 0.5628605 50186.94967 #> 2:     36978.7730          0.2726646 0.5707267 42500.79359 #> 3:     38832.5598          0.2838865 0.6632842 49800.66917 #> 4:        18.3498          0.2705116 0.6457779    74.79904  # round digits summarise_scores(scores, by = c(\"model\")) %>%   summarise_scores(fun = signif, digits = 2) #>                    model interval_score dispersion underprediction #> 1: EuroCOVIDhub-baseline          14000       2100            5100 #> 2: EuroCOVIDhub-ensemble           9000       1800            2100 #> 3:  epiforecasts-EpiNow2          11000       3000            1700 #> 4:       UMass-MechBayes             53         27              17 #>    overprediction coverage_deviation    bias ae_median #> 1:           7100              0.002  0.2200     19000 #> 2:           5000              0.049  0.0081     12000 #> 3:           6200             -0.055 -0.0430     15000 #> 4:              9             -0.023 -0.0220        78  # get quantiles of scores # make sure to aggregate over ranges first summarise_scores(scores,   by = \"model\", fun = quantile,   probs = c(0.25, 0.5, 0.75) ) #>                     model interval_score dispersion underprediction #>  1: EuroCOVIDhub-baseline      130.23793   87.81804      0.00000000 #>  2: EuroCOVIDhub-baseline      934.41870  163.28739      0.00000000 #>  3: EuroCOVIDhub-baseline    10795.61967 3476.52750      4.42391304 #>  4: EuroCOVIDhub-ensemble       28.33707   23.67087      0.00000000 #>  5: EuroCOVIDhub-ensemble      300.30739  168.95543      0.00000000 #>  6: EuroCOVIDhub-ensemble     5532.28565 2030.41870     44.10869565 #>  7:  epiforecasts-EpiNow2       50.94935   16.90326      0.00000000 #>  8:  epiforecasts-EpiNow2      442.81696  152.12565      0.08695652 #>  9:  epiforecasts-EpiNow2     5902.85957 2033.24370    155.76086957 #> 10:       UMass-MechBayes       18.49435    7.73837      0.00000000 #> 11:       UMass-MechBayes       46.05413   17.15413      0.02173913 #> 12:       UMass-MechBayes       73.27087   38.04620     18.41304348 #>     overprediction coverage_deviation  bias ae_median #>  1:      0.0000000         -0.1243478 -0.20    166.00 #>  2:     54.1304348         -0.0373913  0.40    763.50 #>  3:    496.7065217          0.2234783  0.60  17709.00 #>  4:      0.0000000         -0.1243478 -0.40     27.00 #>  5:      0.2826087          0.1365217  0.10    277.00 #>  6:     43.5217391          0.2452174  0.40   8100.00 #>  7:      0.0000000         -0.2982609 -0.70     68.00 #>  8:      0.0000000         -0.0373913 -0.10    404.00 #>  9:     45.6956522          0.1365217  0.60   7177.00 #> 10:      0.0000000         -0.2113043 -0.60     24.75 #> 11:      0.0000000         -0.0373913 -0.05     52.00 #> 12:     10.2500000          0.2234783  0.60    106.00  # get ranges # summarise_scores(scores, by = \"range\")"},{"path":"https://epiforecasts.io/scoringutils/reference/theme_scoringutils.html","id":null,"dir":"Reference","previous_headings":"","what":"Scoringutils ggplot2 theme — theme_scoringutils","title":"Scoringutils ggplot2 theme — theme_scoringutils","text":"theme ggplot2 plots used scoringutils","code":""},{"path":"https://epiforecasts.io/scoringutils/reference/theme_scoringutils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scoringutils ggplot2 theme — theme_scoringutils","text":"","code":"theme_scoringutils()"},{"path":"https://epiforecasts.io/scoringutils/reference/theme_scoringutils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scoringutils ggplot2 theme — theme_scoringutils","text":"ggplot2 theme","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"scoringutils-100","dir":"Changelog","previous_headings":"","what":"scoringutils 1.0.0","title":"scoringutils 1.0.0","text":"Major update package package functions lots breaking changes.","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"feature-updates-1-0-0","dir":"Changelog","previous_headings":"","what":"Feature updates","title":"scoringutils 1.0.0","text":"new updated Readme vignette proposed scoring workflow reworked. Functions changed can easily piped simplified arguments outputs.","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"new-functions-and-function-changes-1-0-0","dir":"Changelog","previous_headings":"Feature updates","what":"new functions and function changes","title":"scoringutils 1.0.0","text":"function eval_forecasts() replaced function score() much reduced set function arguments. Functionality summarise scores add relative skill scores moved function summarise_scores() new function check_forecasts() analyse input data scoring new function correlation() compute correlations different metrics new function add_coverage() add coverage specific central prediction intervals new function avail_forecasts() allows visualise number available forecasts new function find_duplicates() find duplicate forecasts cause error plotting functions renamed begin plot_. Arguments simplified function pit() now works based data.frames. old pit function renamed pit_sample(). PIT p-values removed entirely. function plot_pit() now works directly input produced pit() many data-handling functions removed input types score() restricted sample-based, quantile-based binary forecasts. function brier_score() now returns brier scores, rather taking mean returning output. crps, dss logs renamed crps_sample(), dss_sample(), logs_sample()","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"package-data-updated-1-0-0","dir":"Changelog","previous_headings":"Feature updates","what":"package data updated","title":"scoringutils 1.0.0","text":"package data now based forecasts submitted European Forecast Hub (https://covid19forecasthub.eu/). example data files renamed begin example_ new data set, summary_metrics included contains summary metrics implemented scoringutils","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"other-breaking-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Other breaking changes","title":"scoringutils 1.0.0","text":"‘sharpness’ component weighted interval score renamed dispersion. done make clear component represents maintain consistency used places.","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"feature-updates-0-1-8","dir":"Changelog","previous_headings":"","what":"Feature updates","title":"scoringutils 0.1.8","text":"now added function check_forecasts() runs basic checks input data provides feedback","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"scoringutils-0172","dir":"Changelog","previous_headings":"","what":"scoringutils 0.1.7.2","title":"scoringutils 0.1.7.2","text":"CRAN release: 2021-07-21","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"package-updates-0-1-7-2","dir":"Changelog","previous_headings":"","what":"Package updates","title":"scoringutils 0.1.7.2","text":"minor bug fixes (previously, ‘interval_score’ needed among selected metrics) data.tables now returned table[] rather table, don’t called twice display contents.","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"scoringutils-017","dir":"Changelog","previous_headings":"","what":"scoringutils 0.1.7","title":"scoringutils 0.1.7","text":"CRAN release: 2021-07-14","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"feature-updates-0-1-7","dir":"Changelog","previous_headings":"","what":"Feature updates","title":"scoringutils 0.1.7","text":"added function, pairwise_comparison() runs pairwise comparisons models output eval_forecasts() added functionality compute relative skill within eval_forecasts() added function visualise pairwise comparisons","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"package-updates-0-1-7","dir":"Changelog","previous_headings":"","what":"Package updates","title":"scoringutils 0.1.7","text":"WIS definition change introduced version 0.1.5 partly corrected difference weighting introduced summarising scores different interval ranges “sharpness” renamed ‘mad’ output [score()] sample-based forecasts.","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"feature-updates-0-1","dir":"Changelog","previous_headings":"","what":"Feature updates","title":"scoringutils 0.1.","text":"eval_forecasts() can now handle separate forecast truth data set input eval_forecasts() now supports scoring point forecasts along side quantiles quantile-based format. Currently metric used absolute error","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"package-updates-0-1","dir":"Changelog","previous_headings":"","what":"Package updates","title":"scoringutils 0.1.","text":"Many functions, especially eval_forecasts() got major rewrite. functionality unchanged, code now easier maintain data-handling functions got renamed, old names supported well now.","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"package-updates-0-1-5","dir":"Changelog","previous_headings":"","what":"Package updates","title":"scoringutils 0.1.5","text":"changed default definition weighted interval score. Previously, median prediction counted twice, counted . want go back old behaviour, can call interval_score function argument count_median_twice = FALSE.","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"scoringutils-014","dir":"Changelog","previous_headings":"","what":"scoringutils 0.1.4","title":"scoringutils 0.1.4","text":"CRAN release: 2020-11-17","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"feature-updates-0-1-4","dir":"Changelog","previous_headings":"","what":"Feature updates","title":"scoringutils 0.1.4","text":"added basic plotting functionality visualise scores. can now easily obtain diagnostic plots based scores produced score. correlation_plot shows correlation metrics plot_ranges shows contribution different prediction intervals chosen metric plot_heatmap visualises scores heatmap plot_score_table shows coloured summary table scores","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"package-updates-0-1-4","dir":"Changelog","previous_headings":"","what":"package updates","title":"scoringutils 0.1.4","text":"renamed “calibration” “coverage” renamed “true_values” “true_value” data.frames renamed “predictions” “prediction” data.frames renamed “is_overprediction” “overprediction” renamed “is_underprediction” “underprediction”","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"potentially-breaking-changes-0-1-3","dir":"Changelog","previous_headings":"","what":"(Potentially) Breaking changes","title":"scoringutils 0.1.3","text":"argument score now slightly changed meaning. now denotes lowest possible grouping unit, .e. unit one observation needs specified explicitly. default now NULL. reason change metrics need scoring observation level consistent implementation principle. pit function receives grouping now summarise_by. similar spirit, summarise_by specified explicitly e.g. doesn’t assume anymore want ‘range’ included. interval score, weigh = TRUE now default option. (potentially planned) rename true_values true_value predictions prediction.","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"feature-updates-0-1-3","dir":"Changelog","previous_headings":"","what":"Feature updates","title":"scoringutils 0.1.3","text":"updated quantile evaluation metrics score. Bias well calibration now take quantiles account Included option summarise scores according summarise_by argument score summary can return mean, standard deviation well arbitrary set quantiles. score can now return pit histograms. switched ggplot2 plotting","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"potentially-breaking-changes-0-1-2","dir":"Changelog","previous_headings":"","what":"(Potentially) Breaking changes","title":"scoringutils 0.1.2","text":"scores score consistently renamed lower case. Interval_score now interval_score, CRPS now crps etc.","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"feature-updates-0-1-2","dir":"Changelog","previous_headings":"","what":"Feature updates","title":"scoringutils 0.1.2","text":"included support grouping scores according vector column names score included support passing arguments lower-level functions score included support three new metrics score quantiles score: bias, sharpness calibration","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"package-updates-0-1-2","dir":"Changelog","previous_headings":"","what":"Package updates","title":"scoringutils 0.1.2","text":"example data now horizon column illustrate use grouping documentation updated explain listed changes","code":""},{"path":[]},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"feature-updates-0-1-1","dir":"Changelog","previous_headings":"","what":"Feature updates","title":"scoringutils 0.1.1","text":"included support long well wide input formats quantile forecasts scored score","code":""},{"path":"https://epiforecasts.io/scoringutils/news/index.html","id":"package-updates-0-1-1","dir":"Changelog","previous_headings":"","what":"Package updates","title":"scoringutils 0.1.1","text":"updated documentation score added badges Readme","code":""}]
