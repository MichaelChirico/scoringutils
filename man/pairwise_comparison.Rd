% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pairwise-comparisons.R
\name{pairwise_comparison}
\alias{pairwise_comparison}
\title{Do Pairwise Comparisons of Scores}
\usage{
pairwise_comparison(
  scores,
  metric = "auto",
  baseline = NULL,
  summarise_by = c("model"),
  ...
)
}
\arguments{
\item{scores}{A data.frame of unsummarised scores as produced by
\code{\link[=eval_forecasts]{eval_forecasts()}}}

\item{metric}{A character vector of length one with the metric to do the
comparison on. The default is "auto", meaning that either "interval_score",
"crps", or "brier_score" will be selected where available.
See \code{\link[=available_metrics]{available_metrics()}} for available metrics.}

\item{baseline}{character vector of length one that denotes the baseline
model against which to compare other models.}

\item{summarise_by}{character vector of columns to group the summary by. By
default, this is equal to \code{by} and no summary takes place. But sometimes you
may want to to summarise over categories different from the scoring.
\code{summarise_by} is also the grouping level used to compute (and possibly plot)
the probability integral transform(pit).}

\item{...}{additional arguments, such as test options that can get passed
down to lower level functions. The following options are available:
\code{oneSided} (Boolean, default is \code{FALSE}, whether two conduct a one-sided
instead of a two-sided test), \code{test_type} (character, either "non_parametric"
or "permutation" determining which kind of test shall be conducted to
determine p-values. Default is "non-parametric), \code{n_permutations} (number of
permutations for a permutation test. Default is 999). See
\code{\link[=compare_two_models]{compare_two_models()}} for more information.}
}
\value{
A ggplot2 object with a coloured table of summarised scores
}
\description{
Make pairwise comparisons between models. The code for the pairwise
comparisons is inspired by an implementation by Johannes Bracher.

The implementation of the permutation test follows the function
\code{permutationTest} from the \code{surveillance} package by Michael HÃ¶hle,
Andrea Riebler and Michaela Paul.
}
\examples{
df <- data.frame(model = rep(c("model1", "model2", "model3"), each = 10),
                 date = as.Date("2020-01-01") + rep(1:5, each = 2),
                 location = c(1, 2),
                 interval_score = (abs(rnorm(30))),
                 aem = (abs(rnorm(30))))

res <- scoringutils::pairwise_comparison(df,
                           baseline = "model1")
scoringutils::plot_pairwise_comparison(res)

eval <- scoringutils::eval_forecasts(scoringutils::quantile_example_data)
pairwise <- pairwise_comparison(eval, summarise_by = c("model"))
}
\author{
Johannes Bracher, https://jbracher.github.io/

Nikos Bosse

Nikos Bosse \email{nikosbosse@gmail.com}

Johannes Bracher, \email{johannes.bracher@kit.edu}
}
